%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: 1504.m00.i125.n055.P.c20.232516795 Vector low poly world map illustration.eps
%%Creator: Adobe Illustrator(R) 18.1
%%For: ??????? ??????
%%CreationDate: 4/23/2015
%%BoundingBox: 0 0 500 400
%%HiResBoundingBox: 0 0 500 400
%%CropBox: 0 0 500 400
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 18.1.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 18.1.1 x446 R agm 4.7721 ct 5.3840%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c014 79.156821, 2014/08/29-03:07:50        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">shablon 600x400</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:MetadataDate>2015-04-23T15:03:05+03:00</xmp:MetadataDate>
         <xmp:ModifyDate>2015-04-23T15:03:05+03:00</xmp:ModifyDate>
         <xmp:CreateDate>2015-04-23T15:03:04+03:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CC (Windows)</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>208</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEC0ALQAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAC0AAAAAEA&#xA;AQLQAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgA0AEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9DDLWhcMCVwxVcMUrhgV&#xA;eMVXDFK4YquGBK8YquGKVwwKuGKrxilcMVXDAluuKtHFCw4VWnFVpxQtOKrThQsOKrTiq04ULTiq&#xA;04oWHCq04oWnFVhxVaMKF4wJXDFVwxSuGKrxgVcMUrhiq4YErhiq8YquGBK4YquGKVwxVsHFW64F&#xA;aJwq0Tiq04qtOKFhwqtOKFpxVacVWnChYcVWnFC04VWnFC04qsOKrRhQuGBK8YquGKrhilcMCrhi&#xA;leMVXDAlcMVXDFVwxSuBwKuGKrgcUt1xV1cVdXFVpOKtHFC04qtOFVpxQtOKrTihYcKrTiq04oWn&#xA;Cq04oWHFVpxVaMKFwwJXDFVwxVeMUrhgVcMUrhiq4YFXDFK4YquGKVwwKuBxVsHFW64pdXFXVxVo&#xA;nFC0nFWjiq04ULTiq04qtOFC04qtOKrTihYcKrTihacVWnFVowoXDAlcMVXDFVwxSuGBVwxSuGKr&#xA;hirTTwoaPIqmlaMQDQ/PGltZJqVjEAXmXfpQ8ifoWuPCUcQdBqVpMhaIu4HWkclR8xxxMSkSBXJq&#xA;Vo0phBcSgcuBjkBp8iox4SvEFOfXtLgkWKWYiZmCiII5erdPhArhECUHIAmFcgzbrirq4q6uKtVx&#xA;VonFWicKrTihaTiq04qtOFC04qtOKrTihacKrTihacVWHFC0YVXDFVwwJXVA3OwxVDS6raRuq1L8&#xA;juyCqj3J/ph4UcQXjVNPqA1wiEkABzwJJ2FOVMeErxBdNqMMZKR/vJqclTdQVqATzI498RFTJK7j&#xA;XrhL0IpVoQKSRRUeRXFGNGHNT8J7gZIQ2YHIbUv8RWt6HSwlNxKjBZFVq8SRWkgX7PuOP04RGua8&#xA;d8kLA9xEIykCmSRuMrlq8gxWtdtuI+zuvz64SwFslsrLTGiEtvu52M4NJK9aE/w6ZUSW+MR0S2S7&#xA;uBDKLOT6xcRGR/rAUIkKElwsrivNqb8APCoXrkmKUWs+pTyz6TeT/X9XgflcRx0WN1b7MhVCoAH2&#xA;Ty6FSPDJbc+jDflzLJtF0R7J/WuCjygUj4LTiD1HWn3D78hKVtsIVzTmuQbFG6vba1VGuH4K7BF2&#xA;Jqx6DYHEC0GQC1tRtEljidmWSU8Y1ZHBJ+kYeEo4gqT3Nvbp6k8qQpULzkYKKk0AqfHABaSa5oK6&#xA;1gRxepBC0qhlHNqxoeTBdmIp377e+SEWJn3LRf3U8ctEFuFQsHJDtt9oBaCjLt1+7GkcRKyeaWzh&#xA;LXt26RoNpwIwpPZW5Js3h4/hiBfJSa5lbDe3ENqWeYXMqkhowNyxPwqrIKdx+zhI3QJEBUGpys6x&#xA;izmEjAkKwA6UruTTv44OFPF5LI9Tla5eF7VlpsjBlPI0qRuQNqeOHhXi35L4tTt5JJIuMiyRmjI0&#xA;b16A1FAaj4uowGKiQba+sw4jaZFcivFiFNOnQ40V4g39YtzWkqbdfiG2NJtdUEAg1B3BGKrTiq04&#xA;oWnFVpwoWDFV4xVcMCUk1CwXUgDclpePIwJbSSxuoboaKyoxIAPx7ZMGmsi0qNrq1mnN7kiNiAIp&#xA;oEaSlNl9TgyN/wAGvuclzYbhIH8y64ZpEnigksSKQSlWSbiHAZkLG4Vt96RqxoRt9rJUx4kyW91d&#xA;3WWT1rsBf3dzaXURQr3Xmptjt0O3XBQZWVG+u9MtoQY7SQSysixvNDIpkncARj1pFK/FIRVuXuNt&#xA;8Qg0itC0OyGm3UqrL+ljduv1yI+m5n4IHQgtUqzKWK0p8hgJ38kgbeapc6xqGjW1L8fWHMixKtvQ&#xA;zyOj8ERV6O1enHifYjfDQK8RHNm9pY25t5C6hmvF/fmpNVIoF5VqaKaVyklviEui8saSP9xyWKxW&#xA;kIVxIAKMpP8Aditd/h+I9aU8clxdWPAOSdWtjZWv+80EcNQFJRQpIFaAkDfrkCWwABEVwJQ5vedu&#xA;k9on1hXNAVIAAFatvv1HbDXeji22YhcearS7vpbaB5Ly5ieaOZPSESxlKx+nS4C1qSa7ntsctEaD&#xA;QZ2Usu/Nl7brNp9rxtbxU5/Xrv8AeRlkFUQsAtZAeNF5laH6CeFHH0ZLp97aaui3bivprQidxWOW&#xA;nxnan2DsvFd+vgciRTMES3RMrW88iDVJVKRfHJDJQJtuhKH+b7Q60p9w5cknfmgL7UNMXlLYX8SB&#xA;RR4pZFKkMONAKmQGnSop4YR5sZEdEZNrOjSvEpm+uSc6sqIWpw3+FaUHxU9/HIgFmSENFrtpHdSn&#xA;0p0t04ypE0MlasvHaitTjT7J/DDw7MeLdFXfmTT4zHKtWCkg1KR7FCekrI3WnbAIsjMIA6vcbyLZ&#xA;3Ets8fFgI9iyMT6olViByZ9utOuSpjZb/SWuerJDJpBeQqjxu0wC1qVLM8SycTx8BvTtjQ71s9zl&#xA;l1oyXN3dJbejCEihUGR3NORl58khB2YHYdvbHbkgk80VBayTTRuZFmtmUO0RqIuL1pwjpTag64CU&#xA;gWmlAAABQDYAZFsWnFC04qtOKrThQtGKrhiq7qMUujRI0CIoVBsFAoBgUJd5luWh0mQRgmeZlhhA&#xA;68nO5H+qnJvoyUBuxmdkm1extRahUReNiEe0NAPVRQV4V8Co4+BND2yYLXIBJdX0iEQ2l9oxWzvZ&#xA;ZBIIlZvSuY/TYkyQ8uArRRTYgd/CQLAhz+aidLuba7sVgu0TlHLFUD1koY5ArfESCgoK1rUda0HC&#xA;y4lXy1qtrKLi8gmSSS5kNxLG4YQ26yxo3xCniPsgV2FSBviVieqZW9tb3WppcXTS+ixExaWPgURQ&#xA;FR6cQE5PxKgdFB7lsiy2tmWnWstrAYZJzOocmIsKFUPRTQ708crkbboikWDkWTYOKqF2lzKqxxFF&#xA;javrM1SaeAAp1774Qg2wCz86atoNutlqSx307yGKO4iVUVXcgq7hW4cSrp9k/aO5G5y4wBceOQjZ&#xA;LDqOtQ6HFfiaEXl0JEuLqVQWeOQGWTkikR04fvFPy3pUE0LRZpBT3dsdP+q6e9rLGqkutpHOwFRR&#xA;vVkWQclZeQchGIr8sPVHRGaP5c83WllBeyalJb2lx6Jm0wxspjMg4xs/xGRTyCrRdwCPDjgMgUiJ&#xA;AUb+2tIdSivr9UgklMkKSRRtO7pEQOa8JEeWsiksWWlG67CiOSDz3TXQtZ1WS9js9VFpHY3iSCzu&#xA;ViRpBwdV5M0LiKh58fhrTYn4d8jIdzKJ72X2+kW8tZ5p5fTCKGXksYqQHY8o1RgPiA65AltEQhob&#xA;DQbmeUrG80cTgc5ZJZEdSAG4F3avBvtEYdwxFFF3Gg2ECK9pH6TCSNjGpIRzz6OOm9cRIpMAmiSL&#xA;Igdejdj1Hscg2JZbvcJezonExE0gR6jZNioYdAGrQUOTPJrHNWYRX9uiyDg44y+kSDTrxLAHdT74&#xA;OSeYWaWsy27CZSrh2UBv5UPFSPYgVGMljyRZwMlpxQtOKrTiq04ULBiq4YquGKrhgSxPWtdUeYja&#xA;PaXUsdjDzPpws6tzAZnFPtADio6b8hlkRs1SO6XXurxXEwguGW2WMK8ZmMkbIASF+BkX4hU0Bbtv&#xA;khswO/NK7rV47S8WxudSjkhRZZLRLfi7O8rpRU5GbiQQ223XrTCB1QTWyW6naXd7Ok1yly9vIaSJ&#xA;xeIB3oqyO5CqAf2giEV333oUG+qp5R8qeZLyFrAWcdvZWzLKt1LNLwpKiyKsaxtUlOfIjboASN6x&#xA;lIMoQL1Hy5oNzpUcxutQl1GeYKpkkVUVVTlxVAKtT4z9pjlUpW3xjSdA5FmuBxVuuBKT+Y/MEWjp&#xA;AzSJ6sxYR2oUyTzEUFIY1ZSxHLfsO5AycY2wnKmKaJoOseYNUn1XVJLe1tWjltJbKCP1G4sSoj5S&#xA;F0WgJLfDvyO3hOUqFNUYmRtRj8mm08wRaTJC97pMVsrJNLSQvyIiEbV2VvTXi7KKcd+rbHjsI4Kl&#xA;Sc2tlF6Asrmy46RYKklssfp85CR8EWzDaFtgP2vhr0asWQrqNkrlv76fQ5eFl9RZUaHUYi6vdDjs&#xA;xfgqIp8AA3JTtTtLqwJ22XaPYnT5F02SFLiC6DxPdKG9adVWrxOxq/JVXePb4PsjchUlQKX6lBp1&#xA;2bUX5jlaJpbS8niUo8ielWIu4YbsyR7N9k9cAZGnab9dtbMLqN7NPYqzJDIQpIoao03JA4Rl3L9S&#xA;PtUH2ifJA5bprqV5dWmnSwW/C4EaFgrqAVrUAAxMq8nY8RQ7nbIgb2ykdqCjpur+aZLBori3gu7i&#xA;NOMiq5glrQEPuHR6qQdiN9qYkC0iUqVk1+GKaaeUXNtHKeTxsFbjxUKWVPicKWHXiMeG9kcVbtw6&#xA;1bXFY7OaO5uViWUItUdShJZ2DHlSrb7b1ph4e9eLubv3e0vbdkPGRoRbEg7B1oVY+IHLocRuES2K&#xA;epy4LzNWoOR9++VtzjihacVWnFVpwoWnFVgxVcMVXDFVwwJYn5vstWN/DewXa2ltHHSOdY+ckUoa&#xA;pL1NGicUDClRQHqBlkeTVMboTSpbHVYWmdi16xInS5lDKAB8NVHGNkYfEG47++SOzAUV9p5e0S7t&#xA;rq5t7aGSWFhHbIqLWRogfW2HT1GZo/birdsBJDKMQQ0mhabPb0t7d1W8jUQBZZoVaRwwqYlYD4V5&#xA;FqrsAfliTSBG2YaHpUWk6Vb6fFI8ywKR6spBdiSWLNQDqTlRNlviKFI8HAlcDiluuKt1xVj/AJnt&#xA;o7hop4YAb2wJeK7AHJQwo8KsATykTt0rTJwa8m7Wmpbva0tpmka6kknb0GKgrI5ZSaNueNACSBSl&#xA;fdKBSK0W5hi01bqWAQFuXqSKS6/DI3VvtfeMZDdMDQtDnUtCgitPrCeiU5NbpG7EAybtT7JJ+jDR&#xA;Rcdkn1aGbUIp59Ds5PrVwXid5CqRTIARwarcwQQWUgbb9icI25sTvyRkw0u8guZBzVJSOVax3EMy&#xA;KOEgI3VhKCG8GpjuuyU6/ELe7gu9QoZIJYi90DxFxFDKGEpX7IZPsMKdwfs9GJ2pZDe01spi5gji&#xA;mX0Y4I4xGykgvx+NqLxZiPshaVPfbGtlvdAX80+l3FrHbR+vponjlubTZZA4+GIqA2wMpQ8CQAQP&#xA;sjbCBaCaKKTUCyR6laANF60ttMAeLKfVYxfB9tXQtTiUrRt9siB0ZE9URFby3FosGpCKQK/EQ1/d&#xA;EK/xMCynegLV2NPbCa6IAJG6U6bobS6hJLZSSWt4Io5Ii/7yIRF3T05Ax5/vFHKldifYYTLvQI9y&#xA;dS6Vc31xeGRmjqxSKdlG2woUXvTbeo79cHFVJMCSU7UEKAW5EAAsaVJ8dsrbXHFVpOKrTiq04ULT&#xA;iqwYoXDFK4YquGKoTVrWW7sJIIePqtQLz+zvs1dj+yThiaLGYsMF1W1vNM9S+0iB3vIw0d5Ao/ds&#xA;dgQjAqvapQ7dxQ0y3m08mX6Bq+jjT7W1tmZXjK27RFG5iUD4udB1P2iT88qILdGQGylZepY6ncXl&#xA;1FJHbXB/cIwB+r8zykBZSwPqyfEd9umEi0A0bLIo5EkUOjBlPRgag5BtXg4FbBxVuuKUJq+qWml6&#xA;bPfXcvowRAAyEE0Z2CJsATuzAYQLLGRoWx6PVGu4Gis3k9GpAn5/vJCx/lJCKTXflyPsuWU127RV&#xA;/Q9pJYxsIIgj3NpKWaTkPtPGQ2xYE1G/Q0H2cB3Kx2CXeWG1G+uL1J7udLZDHcWUKcFpBICqyBUC&#xA;ynl6fL7W3IbGuGdIhafiK4gkkisHt0t3jMks4iJZmWh4ArIvLkprWu3b2j72fua+o6vZOotLmJI4&#xA;gE9L0aqPU3Lgeov2mFKch+Jw2CjhI5IO+ivPriTerbT2t6Ta38bRSQq0giYqwPORkkHHhUCu4G5G&#xA;yEFF/oq18x+WvQvIWtoblD9X4StKypQiKVGdQVJXcbdDQ4CaLIR4gpxWcGh+jDJAs8fp+mLl2NXK&#xA;0pzB5AGvhtv2yV8TGuFVeJZLG8juEDLcD0AIz8ZdgT+7BHUVBHhT2wJ6MdslZ/rU9wTaahE7QTyC&#xA;gj2Uc0cFqMjMxPWtD8JGSLAd/VTstee/l/QTQtc3BIeYwjnG6RKEZlaqqoYMmxK8a0r3xIrdAlez&#xA;K9JtdTivrua5REtpliFuC5eeql+fq0UJ+0PsscgS2xBTUnIs1pxQtOKtHFVpwoWnFVpxVYMULhil&#xA;cMVXDFVwwJU57WGZGVhQupUsuzUIp1wgoItj9zoy6fqEOoW5dJVPEutBHJVWVVmUDenL4T238aZY&#xA;DbUY0yIXKLbCVzWg3oKEt0oF8a9srptvZq3ubOilAITOeQVhwLMR79TiQVBCKByLJcDirdcVUL31&#xA;PqzGOP1WUq3pk05BWBI79hhCJcklvE01UWae0DQLRonkQFogBUBZByHA9Kcqr8ukxbWSAgL/AERd&#xA;a09ILC5mtbchFS85GWrkcWMYkLEgKWBoQOvXsbo7oI4hsgjqF3ZeY4CqLHcpCljcxIisF5sfT4/Y&#xA;qtQCp8NtjUYaBCOIgpjrF5qFkbNbQRGSSdS8E3qKSg3kkZdzXelQdywrgABSSQqXusXwi9W4mt0h&#xA;kjMcihGAcP8AyyCStRvx2wCKTIpZHp+r61bW8M80drZMUTkqPLM/AgjYO3A7H4nao3+HJEgMACQz&#xA;tQqqFUBVUUUDYADwylyUBq9nHPGkzVJg5VWuxRgA1V6GlK7jJRLCQtCeXIQEmd2LlZCtvy3KwkDi&#xA;R/rU65KZY4whNd8sabW61WBWj1GVkklm5Fw3BRGBwfki/CBuoB98Yy6LOI5sc0vUprbzHp88qtLN&#xA;fN6KQ255EWzB+MjxElkQOPU5VIoT7ZOQ2a4mizbV1aWBIEXm7uGWhAIMfxhhXwYDK4ts1WyuTcQc&#xA;2Xi6ni4pQVHcexG+AhMTasTgStJxVacKtHFC0nFVpxVYDhQuGBVwxSuGKtg4quBwJcyo6lXUMp6q&#xA;RUYqlkyL+kzHbxCJlUMJy1EEj/DQIK/FxUffkxyazzY5ovmWb9JXNrqaB4ppmGnXwQ/FE3xxqVDf&#xA;CeG68ftdtxkiGEZb7sptdQkM3FpUlgSqvMopQ7campFaHfIENgkmlci2N1wK3XFUFcWly7+nEyra&#xA;yHlMhJDE9wKD7Ld/7ckCxIUH0do3V7aT0Y13NvCPTUmlKruwU0Ph93XDxI4O5jnmGzeRY7tI/TuG&#xA;ib0qUT90HC8GWj1+GZn5Do2/ahmGuSlpuqXfmWO4v+BtfTT0GSRGZ0aL+8X0kJK1lrWpG3HrTGqX&#xA;i4k8sbPS9Pb9zVruMlVaRKkq3xDiAq8NjT4APkcibLIUOSZabKZ2d/TaOONmEYYUqzGrkfI7ZGTO&#xA;JtH1yLJaaEEHoeoxVB2eni0lf05D9XMaRxQtvwCFjs5NSPi75Im2IjSD80215daNcW1vMbdZlKSz&#xA;RgNKin9pA3wn3r26EHfDDmid0xLyvq+nWtyY7m1jt7mxVo5mTl8c7neVzJWUgRhQj/F8LGtPsico&#xA;lqjIBk9vfTzamlw5RrQr6MZQ8lDPxblyFa9VXbvkSNmYkbTCx4LCY1mWZkd+RTalWJCkVb7I2yJZ&#xA;xVycCWicVWk4UNHFVpxVacULBhVcMCrhiq4HFLYOKrgcVbBwJSbU53g067LUNy0cqAdmlkZVhAB/&#xA;11AyYazyYvf2FvHdJYcQ1tLCIeTAEq0dWTcj7Spy65YOVtZFGlbSruOylNjdGkcm8k4p9ndWkYH7&#xA;SEEVruhH8p5YCorkyZL66tealvURE+DYsCwJp35DmCD+1TIUC2cRCb21wk8SyIwNdm4nkAw6io8M&#xA;gQ2A2q1xS3XAq2RFkjaNq8XBU0JBoRTYjcYVY/dQRLcxad6zI0sUsDkjmzIyhlPTmxIjNd/HJ+bV&#xA;5JdaCaSxTU7S2AuWln9aLeMTAzuWTfcNWvBq1HyqMPkx8010aWe6ihljbitwpW8WT4Z4zD8PDb9r&#xA;cdd6b4JMo2nqhVUKoooFAB2AyttbrirVcKtVxVa4VlKsKqwoR4g4oY5caQEZ1ubf61BOSlAnqAU3&#xA;jkbYtUd6D78sBajFAp5dEULjS9SdCamWGaJ5IWZ+rMD8aNyoahtqYeJjwdxTyxiE9rH6xh+vxqBc&#xA;+gSyBzUsByCtxrWmwOQLYBaitzLZzG3MpJpyS3f4249KodmIB236fhkqtjdbI+0uvrEPqceJDFSo&#xA;PKhB8ciRTMG1UnAlaTirRxQtOKrBhVcDiq4HArYOKVwOKtg4quBxVI/NVnqk1vDJpsKzukqtcRGT&#xA;0yyR1deJKsKhwMlEjqwmD0Y1Mmq6lpzxQyxRzRkycrdWaSGRDVWcy7bkUbYE75PkWvmGH6jqOpS3&#xA;EC3c0kV5ptwWurmKROP7vZ+PpemtFX7Xxb1A23yYDAndk3l36zf3l3JDKTp0CpEbeWIesbpzVgho&#xA;OK0NRUdCDsdhG6ZVb0mxs4LO3WCFFRRu3EUq3cnKSbciIoIiuBk3XFXVxVI9TuVlvo1DJwilVZFf&#xA;krchHJ8Sn/ZinvkwNmuR3SfTbueCOeJ7qFxJdXKxCdSrUe4clfVVioNPiqENfuyRi1iSMvLvUoL2&#xA;O7tdPd7hSDcxwnlHLFQgGrek/Na/CeG/Tp0iBszJ32TjTNU/SSRXcKvFbSI9IpUKS8lYL8atuvQ0&#xA;GRIplGVphXAzarirVcUOrirVcVULmO1dP9IClelW9/A4Qg0l73U3r8I1NvDCaItFHqLx5EitePE7&#xA;b+OSphbRuXItU5MzrWS4V9n48SeLAU+j5Y0t8kfHHFGD6SqoY8jxAAJPfbIs6XE4qtJxQtJxVo4V&#xA;WA4oXA4pbBwKuBxVsHFK4HFWwcVXA4qxfWvURp4LWL1LyT1Gjp8LICOTyhhQrQN/stgeuTDXLZ51&#xA;rukx0t7uBopJwRIQSElmEwdkRnBBdm5Opbbp8stBaSGV/l3oWpNb2mqxySWltNylngmUETcnLDih&#xA;oyU2o/L5Ahq5XMtuOJ5vRq5U3N1xV1cVbriqU60ChRwqMHeItyf02BWVACrUNCeVDkosJJdoN5Kt&#xA;qjeg80apG77CoLxJyavwqen698lIMIyTjS1bg84i9COf4/RZeLhqn7Q7fDQUyMmyK6wtmRjcsWRp&#xA;Y0UwGlBwGxO1eR74krEdUZXIsnVxVquKtVxVSuGYQSFTRgpKnwNPfCEFJZLsLAk7us8sTkMyH41k&#xA;QMCtKsvUdKrk6arS4+YJbzjbTWM9nIHDyq6q8iVY8jwRixUbrUCh8e2ECkGV7KN1qtrPqSWcBmF2&#xA;0EkryehKiqiFSXq6BiTyp8R2P4kIkd2SaY9LYQGoe3ojAgjtUdfbISbY8qRRORZNE4oWk4VWk4qt&#xA;BxQ2Diq4HFK4HArYOKrgcUtg4q2DirENctLuz1O/1G3Zrszx8nspZCFpDF0T9jiK8uDijGu472Dk&#xA;1S2LFrR45RBptnHzkluGUpxpIvKNoVb0zTi0aepJv0qpyZ72sdz1mGOOGJIo1CxxqERR0CqKAZQ5&#xA;K+uBLdcVdXFW64qk/myNzoV5NBDJNdxQubdIQzSlyPhChfi+1Q7ZKJ3YzGytaWlwqxKQFg4gSq2z&#xA;mm4G21AdvliSEAFMq5Fm6uKtVxV1cVarirVcVUrnmbeQIvNypCrWlSR4nCEHklX6OuGulmaJQXJa&#xA;ajcQpptx41O/fxyfE18JtQ1LT+U6fWXMxc1tygKNE9CGbmvxb1Xp1pvXEFEhull9FfWN5YJ6bXfO&#xA;b0zPEjLIYpVKOJUA2UHixZfh26LkggimWRpwQCtT1Y+JPU5W2qct1FHKkbE1fuOg7Dl4VOwxpBK8&#xA;nAlonCq0nFC0Yq2Diq4HFLYOKrgcCtg4q2DilcDirHfN7JaaXdXYbg1Ymoa/GS4jI2/yWycWuYU/&#xA;Kuj20q2usXFuouoo2js3YD1FRtmJYdagBV8FHbkcZHosB1ZTXINjq4q3XAl1cVbrirq4q6uKurir&#xA;q4q1XFXVxVquFDVcVdXFWq4qsk3RhxDmh+E9D7YoQ1paLCDIwBnf7bdaf5Ir2GSJQBS6e5CMI0+O&#xA;dt1jG5A/mPtgAUlDCzmklb12HoFfsKTyZifi5nbbpsMNopGYGS0nFDROKrcVbBxVsHFVwOKWwcVX&#xA;A4FbrirdcVSnzBob6uLNDMqQW86zzwMnITKgqsbEFaLyoT16ZKJpEo2jbBjEv1VxSRKsopsVLV26&#xA;9K0xPese5GVyLJuuKurirdcVdXFXVxV1cVdXFXVxV1cVarirVcVdXFWq4q1XFWq4oaJxVbReXKg5&#xA;EUr3oMKtE4q0TihaTirRxVrFXYq2DirYOKrgcUtg4q2DirdcCt1xVuuKW64q3XFXVxVuuKurirq4&#xA;q6uKurirq4q6uKtVxV1cVarirVcVarihquKtVwq0Tiq0nFDROKtE4q1irsVdirsVbBxVuuKtg4qu&#xA;BxS3XFW64Fbrirq4q3XFLdcVdXFXVxV1cVdXFXVxV1cVdXFWq4q6uKGq4q1XFXVxVbXCrROKtE4o&#xA;aJxVonFWsVdirsVdirsVdirdcVbrirdcVbriluuKt1xVuuBXVxVuuKurirq4q3XFXVxV1cVarirq&#xA;4q6uKtVxVquKurhVquKtVxVquKGq4q1irWKuxV2KuxV2KuxV2KuxV1T4Yq7k3hiruUn8uKtc5ey4&#xA;q71J/wCTFWvVuOyYVtr1rr/feK2WvXvP99Y0iy1699/vrGgtlr6xf/75GNBbLvrOof75GNBbLvrG&#xA;of75GNBbLvrF/wD75GNBbLf1i+/31jQWy3695/vrGlst+tdf77xpNlv1bn/feBbb9Sf+TFW+cv8A&#xA;JiruUn8uKt8n8MVaqfDFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FW64q3XFXVxVuuKt1xV1cUurird&#xA;cVdXFXVxV1cVdXFWq4q6uKtVxQ6uKtVxVquKurirWKuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2&#xA;Kt1xV1cVbrirq4q3XFXVxV1cVdXFXVxV1cVdXFWq4q6uKtVxV2KtYq7FXYq7FXYq7FXYq7FUz/QF&#xA;5/PH97f805HjDPwy79AXn88f3t/zTjxhfDLv0Befzx/e3/NOPGF8Mu/QF5/PH97f8048YXwy79AX&#xA;n88f3t/zTjxhfDLv0Befzx/e3/NOPGF8Mu/QF5/PH97f8048YXwy79AXn88f3t/zTjxhfDLv0Bef&#xA;zx/e3/NOPGF8Mu/QF5/PH97f8048YXwy79AXn88f3t/zTjxhfDLv0Befzx/e3/NOPGF8Mu/QN5/P&#xA;H97f8048YXwy79A3n88f3t/zTjxhfDLv0Defzx/e3/NOPGF8Mt/oG8/nj+9v6Y8YXwy79A3n88f3&#xA;t/zTjxhfDLv0Defzx/e3/NOPGF8MtfoG8/nj+9v+aceML4Zd+gbz+eP72/5px4wvhl36BvP54/vb&#xA;/mnHjC+GXfoC8/nj+9v+aceML4Zd+gLz+eP72/5px4wvhl36AvP54/vb/mnHjC+GXfoC8/nj+9v+&#xA;aceML4Zd+gLz+eP72/5px4wvhl36AvP54/vb/mnHjC+GXfoC8/nj+9v+aceML4Zd+gLz+eP72/5p&#xA;x4wvhl36AvP54/vb/mnHjC+GXfoC8/nj+9v+aceML4Zd+gLz+eP72/5px4wvhl//2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:InstanceID>xmp.iid:60387bbe-338a-ed4e-8b93-cea24d4704b3</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:60387bbe-338a-ed4e-8b93-cea24d4704b3</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:3c540a5c-1b37-934a-a7fc-2aea423270b7</stRef:instanceID>
            <stRef:documentID>xmp.did:3c540a5c-1b37-934a-a7fc-2aea423270b7</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:d016339e-7c47-184f-992b-9230ff59afcb</stEvt:instanceID>
                  <stEvt:when>2015-03-29T08:29:17+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:60387bbe-338a-ed4e-8b93-cea24d4704b3</stEvt:instanceID>
                  <stEvt:when>2015-04-23T15:03:05+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>500.000000</stDim:w>
            <stDim:h>400.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Áåëûé</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>×åðíûé</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>35</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>32</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>35</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>32</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 10.01</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -400 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 400 li
500 400 li
500 0 li
cp
clp
500 400 mo
0 400 li
0 0 li
500 0 li
500 400 li
250 346.551 mo
144.691 346.551 59.3218 349.078 59.3218 352.195 cv
59.3218 355.313 144.691 357.84 250 357.84 cv
355.309 357.84 440.678 355.313 440.678 352.195 cv
440.678 349.078 355.309 346.551 250 346.551 cv
143.978 233.887 mo
135.713 287.434 li
151.437 235.821 li
143.978 233.887 li
391.706 245.045 mo
418.63 262.608 li
414.708 247.346 li
391.706 245.045 li
127.747 233.798 mo
129.871 253.978 li
138.634 243.888 li
127.747 233.798 li
152.903 224.65 mo
158.283 247.34 li
167.576 240.702 li
154.701 224.719 li
164.127 225.081 li
128.411 193.837 li
120.047 227.691 li
138.874 224.112 li
152.903 224.65 li
282.548 231.408 mo
282.548 231.408 li
252.278 200.076 li
253.34 224.505 li
282.548 231.408 li
354.306 195.363 mo
362.67 212.291 li
368.445 208.308 li
354.306 195.363 li
252.278 200.076 mo
252.278 200.076 li
246.465 182.992 li
261.904 179.83 li
258.518 164.894 li
246.166 182.113 li
239.345 162.067 li
239.52 161.676 li
235.904 149.32 li
232.662 176.576 li
232.364 177.241 li
252.278 200.076 li
294.497 178.038 mo
262.368 179.897 li
252.278 200.076 li
294.497 178.038 li
368.047 169.408 mo
357.692 192.376 li
371.499 183.747 li
368.047 169.408 li
338.043 148.299 mo
321.58 175.117 li
329.015 189.455 li
338.043 148.299 li
232.364 177.241 mo
232.364 177.241 li
221.212 158.655 li
201.032 170.072 li
232.364 177.241 li
86.3363 169.23 mo
103.539 176.185 li
105.337 169.09 li
91.7312 167.199 li
96.8136 155.601 li
86.0103 166.404 li
75.8584 164.993 li
84.0921 168.323 li
81.5458 170.869 li
86.3363 169.23 li
338.043 148.565 mo
349.195 173.789 li
368.047 169.276 li
338.043 148.565 li
122.501 170.475 mo
122.501 170.475 li
115.148 162.679 li
110.754 167.019 li
122.501 170.475 li
85.0583 139.25 mo
75.6075 164.904 li
100.648 141.382 li
108.988 142.523 li
110.678 153.31 li
116.927 151.353 li
114.267 143.245 li
126.742 144.951 li
126.25 134.417 li
130.118 133.569 li
130.933 136.085 li
130.868 133.405 li
146.201 130.044 li
133.255 124.979 li
146.771 121.896 li
130.587 121.986 li
129.871 92.8045 li
112.387 95.768 li
113.741 93.0036 li
108.847 96.3679 li
82.8735 100.77 li
101.653 103.986 li
104.182 112.52 li
107.843 105.046 li
121.64 107.408 li
126.372 122.01 li
125.678 122.013 li
104.593 113.763 li
104.381 113.117 li
104.475 113.716 li
104.216 113.615 li
103.149 130.656 li
95.4033 132.018 li
89.8435 126.261 li
87.1906 133.462 li
67.9459 136.845 li
89.6571 126.217 li
90.1754 111.789 li
67.896 136.854 li
67.7386 136.882 li
85.0583 139.25 li
281.619 129.181 mo
267.148 135.554 li
279.627 149.627 li
281.619 129.181 li
227.562 131.483 mo
212.509 140.578 li
223.221 140.498 li
227.658 131.701 li
227.717 131.837 li
227.759 131.53 li
235.683 129.58 li
235.694 129.266 li
235.816 129.447 li
244.676 126.039 li
241.79 136.483 li
250.021 125.331 li
249.665 124.12 li
264.768 118.311 li
265.011 118.716 li
250.021 125.331 li
266.75 121.614 li
273.786 114.843 li
264.227 100.239 li
237.276 107.01 li
252.868 110.355 li
247.366 116.303 li
263.043 115.437 li
263.433 116.087 li
247.853 117.958 li
247.366 116.303 li
246.877 118.075 li
236.047 119.376 li
236.214 114.71 li
233.712 119.657 li
229.576 120.153 li
231.791 123.453 li
227.802 131.338 li
227.783 131.35 li
229.311 120.021 li
220.548 115.507 li
227.562 131.483 li
273.786 114.843 mo
315.208 130.244 li
304.587 116.436 li
273.786 114.843 li
271.263 125.464 mo
261.97 126.526 li
266.75 129.845 li
271.263 125.464 li
287.982 110.015 mo
287.328 110.064 li
304.587 116.436 li
331.878 112.148 li
355.302 113.25 li
347.085 109.758 li
397.52 101.832 li
338.764 106.221 li
334.06 104.222 li
287.982 110.015 li
153.232 86.2494 mo
130.284 92.7104 li
142.315 102.068 li
153.232 86.2494 li
73.1154 89.2198 mo
56.3874 95.7915 li
90.441 92.8045 li
73.1154 89.2198 li
216.3 75.4125 mo
188.951 83.6438 li
194.792 93.4683 li
216.3 75.4125 li
175.276 84.3076 mo
175.276 84.3076 li
173.506 75.1096 li
163.593 78.9971 li
175.276 84.3076 li
266.338 118.13 mo
266.291 117.726 li
273.786 114.843 li
266.338 118.13 li
266.06 115.771 mo
266.001 115.273 li
273.786 114.843 li
266.06 115.771 li
false sop
/0 
[/DeviceRGB] /CSA add_res
level3{
gsave
clp
[341.667 0 0 410.001 255.833 -5 ]ct
/0 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [1 1 1 ]
/C1 [.811765 .870588 .894118 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[341.667 0 0 410.001 255.833 -5 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~s8N#srr2lprVc]mr;?Kjr;6Bgqtp6dqYL'aq>'j^q=sa[q"XUXp\4FUp@e4Rp@\+Op%@tLo^qeIoCMSF
oCDJCo()>@naZ/=nF5r:nF,i7n*f]4mdBN1mHs<.mHj3+m-O'(lg*m%lK[["lKRQtl07Eqkih6nkND$k
kN:phk2tdejlPUbjQ,C_jQ#:\j5].Yio8tViSibSiS`YPi8EMMhr!>JhVR,GhVI#Dh;-lAgt^]>gY:K;
gY1B8g=k65g"G'2f\"j/f[na,f@SU)f%/F&e^`4#e^W*ueC;sre'ldodaHRlda?IidF$=fd*U.ccd0q`
~>
<~s8N#srr2orrVc]nrVc]nr;?Kjr;?Kjqtp9fqtp9fqYL'bqYL'aq>'j^q>'j]q"XXZq"XXYp\4FVp\4FU
p@e4Rp@e1Pp%A"Np%@tLo^qeJo^qbHoCMSFoCMPDo()ABo'u8?naZ/>naQ&;nF5r:nF,i7n*f`6n*]W3
mdBN2mHs<.mHs<.m-O**m-O**lg*m&lg*m&lK[["lK[[!l07Hsl07Hrkih6okih6nkND$kkND$jk2tgg
k2tdejlPUcjlPRajQ,C_jQ,@]j5]1[j5].Yio8tWio/kTiSibSiS`YPi8EPOi8<GLhr!>Khqm5HhVR,G
~>
<~s8N#srr2orrr2lprVc]nrVc]mr;?Kjr;?Kjr;6Bgqtp9fqtp6dqYL'bqYL'bq>'j^q>'j^q=sa[q"XXZ
q"XXYp\4FVp\4FVp@e4Rp@e4Rp@e1Pp%A"Np%A"Mo^qeJo^qeJo^h\GoCMSFoCMPDo()ABo()ABnaZ/>
naZ/>naQ&;nF5r:nF5r9n*f`6n*f`6mdBN2mdBN2mdBK0mHs<.mHs<-m-O**m-O**m-F!'lg*m&lg*j$
lK[["lK[["l07Hsl07Hsl0.?pkih6okih6nkND$kkND$kk2tggk2tggk2tdejlPUcjlPUbjQ,C_jQ,C_
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
np
250 357.84 mo
144.691 357.84 59.3218 355.313 59.3218 352.195 cv
59.3218 349.078 144.691 346.551 250 346.551 cv
355.309 346.551 440.678 349.078 440.678 352.195 cv
440.678 355.313 355.309 357.84 250 357.84 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 400 ]ct
[383.04 0 0 12.96 58.56 41.44 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 798 
/H 27 
/M[798 0 0 -27 0 27 ]
/BC 8 
/D[0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 798 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 798 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 798 string /rs cvx /pop cvx] cvx
]
/O 2
>>
%%BeginBinary: 1
img
aj9%pgsQ&JjO2f3aOL4>^X^9RLXuCR_:?ZWqU=EPhpU<-l-T@Tim5O!jPTF`bM^P%p#2h.ki79Tio?rr
qr,KPbM`'NhV[,Fb2i6V`9#2)p#_M%qriXqXm"@!^urVtr8trZfAuAGg<\m-gX5?8p!VRCaOKY.bgj2R
T[r/Rf@@sljjWqPhpU9,jj<PDnB\u.dbb&^bM^(mrSjd8gZ*nGqr=L3jl+nObM_=9o&&3Y]]@,proLlV
aQLb0\EJP.qWO+*pu]WZ`9$gUh;lT%jO!nRhpL</g=,K>g!mL]o[\WFmaekthpgl>g=+p,jjEkNjNuf1
b22mLdbi4*o&7dN\Dlf5RH)HM\`2l5]]%c+m,6=Lg"u/XcK)n)oB+9Z\*)H-Wp#Z1nE6J-j6#.Z_r^"@
nDqR7jO!8@nBp+@g!eg-l.#OZ`mj_2kgYsKo@<]egXP03ajg=>g!eg+gX5`An'Kq;^Y[Aqo\e?Z]A`>?
jl4A?fA`7Yl/DEr^>dGsmbu=HdGOlYh;5^'mcE$]^#nkJ\EE#:k3%?Zi91+%VW[:.^#n,3kiL7Rb0Tq1
jNuZ/hU:lAnC.<`k0pZbgsZ5OWRC@ckL7H!lI5^[r6jQQmaTq=imReRgX5*/gs>EFd,*1-j5B+Yhr3DL
pYkJsj5AMGbM]bcmbd$^mGQm\p>EsLrnu#YdGO-DnD:\9gu[_\^#o.RkiUjdb2qmMn`?e4g#i+mioS8D
io^=)^#mAsr8l>e_U%8hhpMDMm*bLQp<r!Ko$ZgNpsAWZs3]rTgs>E6k0L3Vr6XHLq9\KTl-]OZld=G7
qpG&ap!WT`hU:0+j3[hPh9Wajlegj^g#2DXn)3BdqVU\soA?V*ptki(\)-'#rnb?Fhr"Cjm,.ZshVe4g
al)OCjknVFb2hsN_r^+EmH*ZqroDhqdcBoXm,Q[Xc/\NYaQ2sQe)^8bioTLgmH)[VrT2)]cfFN?e'I+%
ld>7LqpG5dld5LUn'LUNs3U5\m`t%@e]ljmprhL;e]dU/lHIc&rQX`T!71,Zn'CILq9er`j3[kSqp=ZV
qU4*FjO!2<nB\]&g>D\_rnukpkhc?skhb4Qp>,N#iSE2BhV4d[pY5#hmbHgXhqmbVlJDNskMH9rjPT+X
f\cP_e)%Lnd,k;gp#PH#iT0Ohn`8ckqr>*DioBXicJm",m,I$ahrEYUq;pu(roDqtp?'6Ro&SWf^X)5m
rm1Mgp!DmJqU"fZo?I?^o$6gNp<<EYoZcpMn]UUJqoeBLl,i>6iQ/[RkK!YEl,i>8n&t@IrQF`Tj37SL
p!3T^o$6jQp<```im@_Oma1LO!7BiRf[%^snD<Nhk2$*ole^s`o\BE$kM>IZm+_QqkhG.O!86)ZjOhK*
pY#Mtf\,?>kM,L]qqV2,mbHCLp>5N!lJD6lp##c*e)/U1mc;CKmcEHho],l1pZ1Jsk2QF"b2W<Wjl+hL
q;K]YdGX!BnDN?cr8G`Vlf7p&kMu6rn`9B)mGuj[h;n(d^X)r*nB^dQo[!H]o?R3Wqp+iYoZ[9Wm*,.G
pr`QYoZI'Qq8qa>qoAHPn&Oh8k/I)5ho+Zrm_n5+m`#7HnAjP0rQ4fToZ?aJoZQmNrlt5^oZZsPqTeu_
oZm'Srm9fRp!ET^o[*?Zf$CqarnZqtleVHnrS@8)gYD\\p"]#jmb7']r7D#%o%E?]k1@N%nCHaRbLYh-
s4H\jm+Lj]!86eomb@3cpYGZ$mbI3cn)"'"khb[`o\SE\\)dJIp#Pf,kMu0npuCZ!g>W"iro32$khtOZ
gtqh^qq[FlpYY,ijPT.Yl/D!gpYtc&lJh*hpZ1o*j5^4%n)_aRd*MU7p<NZ^kg'+Nq9JWWp<<BVr64HL
pr`W[r6"oZp<!$LqT&-Ip;cjGou6RAs24NJo>C(8m)%VqhSAQqn\OV0iPY9*ou6[Frl+TNprEBSlH&\@
qo\iYp<**Po$$pQp<<3Sqp,,a!6t/]mEbRQnB_'[e^*[?hqm\T!8d,!ceSNTn_<Tf!86qsn_*Ean^mHb
qq(Voj4<MGi7-E.g!ep0l.+eEq:>&eo[s,on_!BbnCmEeqV:l#rS6GgoA0?"mbR-as52bknD;:Jki;['
lJqm'mc*cqr8QDgmGRiuo\fT'oAAljl.tFUhqS+bq:s-Ih;%e[mbIQll.t[^m,.0fnDXB)pu15km,Ij$
o]#,qj5eGFhTt]:m`kRQp!*6Ts3:8]p<3KYoZI'SpWE6PpW*?TprMjCpW!3Oqo8BLpVcjEou$L?pV?jH
p;-C:oY94rmCgWTh7iKqot^@=rk\<FiktN/pVlmHpW*!KprE-MpW<HXq9&][qTA0Jprrc]p<<3Sp!3T`
kg'+PpWifahp:$5lJ;$drS@5'lJ2'erS6tuo%NZfpXoGto@WWcjjrGAn^R$VmF(URp!KkfkL'7Vn^?mT
n^R-[e^j<Crn-qso@``h!86qso%VOHq;(c#ptkZ!g>:HBo],Q'o]#Z+m,H.GoAKT*n)*]mrnm5%mbR<d
mG%<fp=bMZo@X,tjk8qQmG%'an(ms!oA8rnpu(r)n)3$\pu;#+ro3D+lf7a#n`/6^ma(dVn]p:ArQP,_
p<<6R!6Y&ZmE54G!6G,\r5n`TprE-Kq8`9Mpr3$Hq833Nn&+q;q8)g@r4i3FjhCH%p:U(1oX`G\e%,(]
ot0q1pV#t.pqQaBrP/ELq7udApqlL;q8E'Iq8NERpr;dCpW39SrQ+lXrlOoWo?7$RpWN9Sp<EW_pW`*N
qp"WUqTnZWjPK4Yn(d]ml.l*hqV1_trnI%uo@`cgo[j,op=JKYo[WT`o[Eigp=&Z^o?m-Ugs>c@hp25G
f$<*tp<`cbo?m0Xo[EH^pso>mo[W0Vo@Nrnpt5AprRg_po@ifjo\BK$iS<tZrnQkrjPJkVkMtpgr8I5+
jl-$ooAKT+n_ioon_WflrS7)%n_F)tp"T#jh:_/Ijk'+TqUX3Krn-Gdm+CIRpt>2kn_<Thn_N`lrSR;)
n_a6%p>F-Qmc*Wos5ND*r8Zetn'COLkKW_Erlb,]pri]\pW<KXn&kCHprNHTqoJTRn&G:Erl4`Pq8E*H
pqlU=q8)mBq7lI6q7ZU:qn)m@q7HF5n@A;'rO;[5p9sP"e?neSp9s_)ppg74oXXe/q7HI8q7Z%,q7la@
q8)mDnAG%>qS`3Kpr;gDs2b&WprN6Ppr`TZnB1LKpWWW]qTJr`p!*6Vo$-^Mn'C=VleV9iqV:Poo\B#l
o@j#nr7^ero[rffq:>MqrmgAdp!rccp!`T^lI#=Pn'CmWoZm*Ro$$LEe&q:*qoeQSo?HsRl-K%Lp!NK]
p!Wojq:#Amp!iZbl.5OZpt5Psp"8lho\/rl!o)Mco\8B\qq^r#m+q!amc=9+ki;$ho&9N+hVn"_rSRP1
qV^o$o%rrno%a,sq:tPqo@iokn(I<bn^m<^n($UNmaLXRkLAtNn^d9_o%<B`pY#/lo@riko%j<%p>,8q
o&'&ss5<G+!8u_mmc+!$p>Y;rq;h&+o$?mPkKW_Eq9/c]pWN<Rq8rTXqTATTprN6Ns2OoUn](@Cr5ATR
q8E*Ho"t4=rkSHJrP8EJq7lO8q7ZX;qRcU8lacl%qR?=0q6fh$q6Tk%pT`Y\pTaP"q6TY!qR-1.q7$41
r42U5qRZO8q7H^@qn2d=o"Ot8q7ugBqSMjAs2+TLq8E3Mrl+]Qp;d'MprE3OprWHVr5nBLpriNXrQFrZ
p!*N^rm'oUn]paPmb[<dnD*9_qV:Yro@irlrn7>(p=],kp"/lfo[WZdp=8ldp=&``qU,8hpX&lbqU"TT
pWiKWpWWBTp<**NoZ6sNf>mR*ouZsNp<33SpW`EWps8WZpX&W]pX0&hp<rZ`p=/fdlIPLWpt,2ko\&lj
ptP`#o@r9[!8[/"rn[&!n)!Elki;$hmbn0(rSceqn_iEao%ruooA'2sqV2#'p=o5nkLoL[o[i`do[WT`
s3p\jo$ZmPo$HaNo@!6Zo[Nljpso#fo[i`fk1TC\o@romq;)#)rnR,$o%rrpn_j6%q;C,go]#f.r8[>,
ki;$jo?ZsPkfrhFm*#.GpW<3QprW<PprE<PrQ"HJpr30LrknfSqS`6Jn\Y+<o>(1:o=k%6qRl[:qRZ:/
s1&$<!4hs9qR?@1qR,t&qQp%(qQ]n$f!"qSqQU%+r3H1*o<eD&qR670qRH.-qRZO8!5/3@qRl[<o"Ot8
rkSHIqSE!Epr!!Gq8<$Hq8N0LqT&?MprE3OprWQYq8rKUp<*-Qr65&]pWW<Ts3BoSn]pdQn(n'#mG76d
kM,pio@rljo\'/pq:Y`!q:PAlp"&Z`qUYAjp!i`bp<rZ^pX&c_rm(SkmEbOPpW`HVpWN<RprW9OhoFZq
prN3OpWE6RpWWBVpWi0Pr6YAgp<iieqpG,cp=&`bp=8EYq:GSrp"/ukrn-kro\02sq:bGpjP9din(d9c
nD<Nmki;'imc"-&m,@]tn_irprnd>*oA9&ooA&rlqV(i$o\/K]o[rffp"&fdp!iZ`o[3`ep<h76p!NH\
p!`T`o[WiiqptDkp"8H\o@iikoA'?$p>#8q!8d>(o&&uqr8IA-hr4"_s5Wh4q;UVumH!f`n]p=Bp<<<T
s315\pWE9QpWE<R!6P#WprE?Qr5\<Hq8N0J!6+cPq8;a>q8*$Frk\EGq7lsDoY118q7QO8qRYt&q7-70
q6p(+m'QVqos=:rm^)8eq6g"+q7$10o""S-qmuj?rOi*@qRlX;o"Oq7qS;pCq82gBrPJBJq8E*Jpr<-M
pr<-MprN6PrlY,[mE51Hr65)^p<<6TrQaoWr6=fXn^$UZm+q-ckhH!i!8I,"o@iiirRgnuo[rigp"&`b
pX]&g!7^_lp=&``p<iT\qTo,eld,:Mp<E9Sr6+oZo?-C@m)\M7o?-^Kp<<Q]pW`EWld,:Op<iccr6b5d
p=&]ap=9&kn(.6bs46kpo[rfho\0/rqV(Pqn(dQj!8I"um+q'clK%0hqVq,+mc"3(i8O4an_aB'o\]>u
rnd5%oA&okrS%&$o@i?[o@W`fs4?kno@<B\maKJ0p=&ido$m6\o@ENbo[r<Zo@j&qqV1Vsqq_&&oA/uo
n_`oqqVh2,oAT&pmc+6+n)EQklf@K[s3L2[kfreEr6+u]p<33QrQ4WQpW<3O!6=uWs2auUn&Fk9pr*!G
nA>.?r5/9Gq7ud?qS)^<pq?I8pq-I8rO_g8lFHJqi4%[So!mtqpU^.3pq6C8!5A9Bp:gF<q7l^?q8)mD
nAG4Cr58?Kpr3$Jo#LdMprE0N!6P#Xq8r]ZmE51HpWNW\p<<6Tq9JHRn]q*ZnB^:Sm+q-cm+_6ho\9E#
o@iokrn@"to[rffp"&rhnCI6^q:,Amp!`T^p!NW_qpG&_jj3JBnBLpV_T_Akn]pFGr6P#^p!NE[r6tMj
p!`T`p!r9Wp=K>rrRgnso[rfho@iik!8@"uiS=Fgq:ti%m+pm^jlGUbm,INnro2nqro*A)p##`+n_`ln
o%iikpY5W$o\9E#o%N*VnC[0\ldkFQa49M,maq!]p"A`co%NZho%`im!8R,#o%roonDNuurSZMjmGe!&
oA]9"q;^Stj3R8@k0<\Frlt>ar64lXqo\i[mE51FqoJ`XpW3-Mn](RKpr<'Irl"]Ppr!!GoY^F?pVHU>
pV6%.qn;j?o=b+8oXs4rlFQ#fn@\A+l+[&0r4_p?pV?O>pqlI:pVcO>qo8TSn&P4E!6=iTprW9Qpri?Q
pWN9Sq9Al^p!*'Qp<E*PjNl`?m+hZtmbIHhmG.9eo%F)so\/oio@X)pp"0&kqq'u]o@<H^o@*B\rmUDc
s3^Dbm*MWUn'C@InBpdSo@*?]s3pShp!j&mk19.Uo@X&qp=Suio@iciq:tl%!8HGep>,Q"leULUmc<it
kMtmfpu1r+gu84ioABW+n_ioonD<Zjp>#Q$nD*`lqV1Jme(N:(p"/ohe_&C)mb7KkpY52mnD3`nrS?u"
n_`fno&89\mGd]sqVp\umc<luf?`s3l-94QoZd*R!6kGcq98NTm)f=MpWE6Pp;m'Ms2aQIp;ZpIrl+oU
pr2sFlGN82o>1%6!5\->m_AS4bJ*,Rm_JD0rPJHKrPA0Dl,355p;QaFpW!9TmDnqAqoSfYqo\iYpWDgF
s318]p!!*Rps/l`i6M#@f[&%'lJ:m`!8HDdrS.#"s4[)!o%NZfo%<omp"8ielIPa]nC@3]qpk)`kgS;7
\'jKhm*tm^p=8ier70cWo%3Hbo%EoopY#GtptG8mcJ7jDrSHtuptji`d,a?Lo&BW-rT!8(g#;qgn_rrp
mbe'$nD=#to\SrjleL[Xm+V'bZ.\'hrn?PileLj_mb[Ei!8d5&s538&gYr1lmc!NllJqm)s5`M+dH&Hr
s3L/ZpW`-Op!*N^p!*-Qoum?Wm*#CNpr`KUr6"]SouQRAqoJBLoZ$I@n\g$sho"m#!6+NIo#:4?oZ-LC
prN?SqoJHPoucsNr64TPp!!3Urlk#Zps/i`o[!$Po?[E]aNs;2f&#ZIr7pl!g"c/RnD!Hdp=]>sn(I0^
maq?e^"13Ra48Dbn^m`jmFUgZnCd9ao\9>unD!KgmG.Tpo\Aiimb[lte_]fP^uXV;rSmJ0q;^f#^u=Y<
p>>]'rSZqtkMG+PinU$YkhZ'jk2,@[leq[!n_iZjmbu^Ul/V-kq;_20biH.Wps/W[ld#:Oo$6jOrQP#\
oZZgJp<<-Oo?-gLr6"QOh8nm%p;ZI>mDd5eiQ(T3pW)jGm)\_=o?-.;k03YGqonr^q9ANVqp5)`iQqPN
nB^[Pkg/)2YMT'1!8[5&leV*dr8$&]mb7`sq:kSsle:XW`n:":M:_UVkLf%Ps4HVim+Ug\pY>Mur8$5b
mG7Qoo\J]eptu#,^>@#nj5fglnDrcmg#Dbccf+`Ym,?p]qVU)cVr$q"e_f?Djl-*rp>Y#hki1je!932%
qW-r&p>rdEma&Plo?csPrm9rVp!<T^p!<0Rp!*H\nBL%<r6=cUrQOWOkK<)3n]KY/hT=Hn!6aWLlc]4M
o??7>r64]UnBU^QrQarZo[*H]o$?[LqpFBLe'IO0UYbY#rnckqp"f8slJ:RWmG7ZpmbHmXm+V'ce_96@
m+K&*p"ScdrnQ_lkM4VDrnRM/m+pm^p##;rgu%YYbheoOp>ti*nDrfnr8cr!j5TLcs5MDb`Sp:DbM^=t
p#=$Or8[##jQ$!qmc4B.i8ibVg>q)NVp>@ij3[JHl-T:Qi6_;Gp!<]bmEb:IrQj`R_p/,(qok&Ef$3I)
ld,FSo[!!Qs3U8_l-SqIqp=-Gl-T:R^sC0[f\Y3:pYP5np>58poA/uo^>8G:s4lGdW8-pucJA9PcJA?Q
jPKXgmbZs\o&0&qgu#^"mc:P3f]E+nkN)C!hW2f=kMr)lT&SklnDicoo]+cghrXju!9CoV`T6OLVU+\W
o[)1:q9nBPr6XKOn'V*\kL&,4f$FBBVU4_Vo?cdLjO*>BiR.&@s3^\jiR6<)iR%5Cbg2s=j59+Yj5AbN
rnu\kr85u[p>*O@OP]We!8c\kg>D&Np##8sgu-B5h;6uEVW@C1]B/_JiT9UkkiCpg`T67Da5b_2fAt9>
!9E&!oB"fj]B/nM\`CoZgX"j*f$X*;jjNMEimRVNgX:]%V:+;Ns3ghneC3$thU2/HiR#9ambY5*dbjoY
^YnJ;i8EbUlef&,T&BY-kMY=WeD\a3n_hUJaPQFCR,n2,^ZEDrpZD&.^ZOA6QK@Mr`9-jXaQDRG]&i)8
biGPFi6^'&f$`4"p!^M%e^LbOe'uaobgYe(n']e7iR$K.h9VtTpYO*N_VkCNQf7Gnki0YAe`,lRRGn2)
^>R2lrSG*Ab2gh.]&inQXle3tK'.sQqrY*EeE,lTYN5,t[*R[WnBpCGf@%jkrR?GKK%/r4bL>(krR'<G
i6]ZnnB[T\q;9WX^#8SBT]+qjK]<$jQJq5hdGW1)l/'Y@PiV;pbN67ro&c(tK'1VGYibfE\`M6"h;j(
~>

%%EndBinary
grestore
np
130.933 136.085 mo
130.118 133.569 li
130.868 133.405 li
130.933 136.085 li
126.372 122.01 mo
121.64 107.408 li
129.871 92.8045 li
130.587 121.986 li
126.372 122.01 li
level3{
gsave
clp
[341.667 0 0 410.001 255.833 -5 ]ct
/1 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.972549 .976471 .980392 ]
/C1 [.792157 .85098 .878431 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[341.667 0 0 410.001 255.833 -5 ]ct
clp
/1 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~p\4FVp\4CTp@e4Rp%A"Np%7nKo^qeIoCMSFo()ABo()>@naZ/=nF5r:nF,i7n*f`5mdBN2mHs<.mHs9,
m-O*)lg*m&lg!d#lK[Wul07Hskih6okih3mkND$jk2tggk2k^djlPRajQ,C_j5]1[j5T(Xio8tViSibS
i8EPOi8EMMhr!>KhVR,GhVI#Dh;-oBgt^]?gY:K;gY:H9g=k96g"G'3g"=s0f\"j.f@SX+f%/F'f%/C%
e^`4"eC<!teC2mqe'landaHRldF$@hdF$=fd*U.ccd0q`cd'h]cHa\Zc-=MXbfn;Tbfe2QbKJ)Ob0%lL
~>
<~q"XXZq"XXZp\4FVp\4FVp@e4Rp@e4Rp%A"Np%A"No^qeJo^qeJoCMSFoCMSFo()ABo()ABnaZ/>naZ/>
nF5r:nF5r:n*f`6n*f`6mdBN2mdBN2mHs<.mHs<.m-O**m-O**lg*m&lg*m&lK[["lK[["l07Hsl07Hs
kih6okih6okND$kkND$kk2tggk2tggjlPUcjlPUcjQ,C_jQ,C_j5]1[j5]1[io8tWio8tWiSibSiSibS
i8EPOi8EPOhr!>Khr!>KhVR,GhVR,Gh;-oCh;-oCgt^]?gt^]?gY:K;gY:K;g=k97g=k97g"G'3g"G'3
~>
<~q>'j^q>'j^q>'g\q"XXZq"XXZp\4FVp\4FVp\4CTp@e4Rp@e4Rp%A"Np%A"Np%@tLo^qeJo^qeJoCMSF
oCMSFoCDJCo()ABo()AAnaZ/>naZ/>naQ&;nF5r:nF5r9n*f`6n*f`6n*]W3mdBN2mdBN1mHs<.mHs<.
m-O**m-O**m-O'(lg*m&lg*m&lK[["lK[["lK[Wul07Hsl07Hskih6okih6okih3mkND$kkND$kk2tgg
k2tggk2k^djlPUcjlPUbjQ,C_jQ,C_jQ#:\j5]1[j5]1Zio8tWio8tWio/kTiSibSiSibRi8EPOi8EPO
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /1 /Gradient get_res exec grestore
}if
np
110.678 153.31 mo
108.988 142.523 li
114.267 143.245 li
116.927 151.353 li
110.678 153.31 li
104.593 113.763 mo
104.475 113.716 li
104.381 113.117 li
104.593 113.763 li
level3{
gsave
clp
[341.667 0 0 410.001 255.833 -5 ]ct
/2 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.941176 .952941 .956863 ]
/C1 [.768627 .835294 .862745 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[341.667 0 0 410.001 255.833 -5 ]ct
clp
/2 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~n*f`6n*f]4mdBN2mHs<.mHs9,m-O**lg*m&lg*j$lK[[!l07Hsl0.?pkih6nkND$kkN:phk2tgfjlPUc
jQ,C_jQ,@]j5]1[io8tWio8qUiSibSi8EPOi8EMMhr!>JhVR,GhVI#Dh;-oBgt^]?gtUT<gY:K:g=k97
g"G'3g"G$1f\"j/f@SX+f@SU)f%/F'e^`4#e^`1!eC<!se'ldpe'c[mdaHRkdF$@hdEp7ed*U.ccd0q`
cHa_\cHa\Zc-=MXbfn;Tbfn8RbKJ)Pb0%lLb0%iJaiVZGaN2HDaN)?Aa2c6?`l?$<`l5p9`Pog7`5KU4
~>
<~o()ABo()ABo'u8?naZ/>naZ,<nF5r:nF5o8n*f`6n*f`5mdBN2mdBN1mHs<.mHs<.m-O**m-O**lg*m&
lg*m&lg!d#lK[["lKRQtl07Hsl07Eqkih6okih3mkND$kkND$jk2tggk2tgfjlPUcjlPUcjQ,C_jQ,C_
j5]1[j5]1[j5T(Xio8tWio8qUiSibSiSi_Qi8EPOi8EPNhr!>Khr!>JhVR,GhVR,Gh;-oCh;-oCgt^]?
gt^]?gtUT<gY:K;gY1B8g=k97g=k65g"G'3g"G$1f\"j/f\"j.f@SX+f@SX*f%/F'f%/F'e^`4#e^`4#
~>
<~oCMSFoCMSFoCMSEo()ABo()ABo()>@naZ/>naZ/>nF5r:nF5r:nF5r9n*f`6n*f`6n*f]4mdBN2mdBN2
mHs<.mHs<.mHs<-m-O**m-O**m-O'(lg*m&lg*m&lK[["lK[["lK[[!l07Hsl07Hsl07Eqkih6okih6o
kND$kkND$kkND$jk2tggk2tggk2tdejlPUcjlPUcjQ,C_jQ,C_jQ,C^j5]1[j5]1[j5].Yio8tWio8tW
iSibSiSibSiSibRi8EPOi8EPOi8EMMhr!>Khr!>KhVR,GhVR,GhVR,Fh;-oCh;-oCh;-lAgt^]?gt^]?
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /2 /Gradient get_res exec grestore
}if
np
142.315 102.068 mo
130.284 92.7104 li
153.232 86.2494 li
142.315 102.068 li
level3{
gsave
clp
[341.667 0 0 410.001 255.833 -5 ]ct
/3 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.909804 .92549 .937255 ]
/C1 [.745098 .811765 .843137 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[341.667 0 0 410.001 255.833 -5 ]ct
clp
/3 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~kND$kkND$jk2tggk2k^djlPUbjQ,C_jQ#:\j5]1Zio8tWio/kTiSibRi8EPOi8<GLhr!>JhVR,GhVI#D
h;-oCgt^]?gt^Z=gY:K;g=k97g=k65g"G'3f\"j/f\"g-f@SX+f%/F'f%/C%e^`4#eC<!teC;sre'ldp
daHRldaHRkdF$@hdEp7ed*U.ccd0q`cd'h]cHa_[c-=MXc-4DUbfn;SbKJ)PbK@uMb0%lKaiVZHaiMQE
aN2HDa2c6@a2c3>`l?$<`Pog8`Pod6`5KU4_o'C0_o'@._SX1,_83t(_83q&^qdb$^V@Ou^V@Ls^:q=q
~>
<~lg*m&lg*m&lg!d#lK[["lK[Wul07Hsl07Hrkih6okih6okND$kkND$kkN:phk2tggk2k^djlPUcjlPRa
jQ,C_jQ,C^j5]1[j5]1[io8tWio8tWio/kTiSibSiSi_Qi8EPOi8EMMhr!>Khr!>JhVR,GhVR,Gh;-oC
h;-oCh;$f@gt^]?gt^Z=gY:K;gY:K:g=k97g=k96g"G'3g"G'3f\"j/f\"j/f[na,f@SX+f@SU)f%/F'
f%/F&e^`4#e^`4#eC<!teC<!te'ldpe'ldpe'c[mdaHRldaHOjdF$@hdF$@gd*U.dd*U.dcd0q`cd0q`
~>
<~mdBN2mdBN2mdBN1mHs<.mHs<.mHs9,m-O**m-O**lg*m&lg*m&lg*m%lK[["lK[["lK[Wul07Hsl07Hs
kih6okih6okih6nkND$kkND$kkND!ik2tggk2tggjlPUcjlPUcjlPUbjQ,C_jQ,C_jQ,@]j5]1[j5]1[
io8tWio8tWio8tViSibSiSibSiSi_Qi8EPOi8EPOhr!>Khr!>Khr!>JhVR,GhVR,GhVR)Eh;-oCh;-oC
gt^]?gt^]?gt^]>gY:K;gY:K;gY:H9g=k97g=k97g"G'3g"G'3g"G'2f\"j/f\"j/f\"g-f@SX+f@SX+
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /3 /Gradient get_res exec grestore
}if
np
194.792 93.4683 mo
188.951 83.6438 li
216.3 75.4125 li
194.792 93.4683 li
level3{
gsave
clp
[341.667 0 0 410.001 255.833 -5 ]ct
/4 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.882353 .905882 .917647 ]
/C1 [.721569 .796078 .827451 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[341.667 0 0 410.001 255.833 -5 ]ct
clp
/4 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~i8EPOi8EPNhr!>Khqm5HhVR,Fh;-oCh;$f@gt^]?gY:K;gY:H9g=k97g"G'3g"G$1f\"j/f[na,f@SX*
f%/F'f%&=$e^`4"eC<!teC;sre'ldpdaHRldaHOjdF$@hd*U.dd*U.ccd0q`cd'h]cHa_[c-=MXc-4DU
bfn;TbKJ)PbKJ&Nb0%lLaiVZHaiVWFaN2HDaN)?Aa2c6?`l?$<`l5p9`Pog7`5KU4`5KR2_o'C0_SX1,
_SX.*_83t(^qdb$^qdb#^V@Ou^V7Fr^:q=p]tM+m]tD"j]Y(ni]=Y\e]=YYc]"5Ja\[f8]\[f5[\@B&Y
~>
<~k2tggk2tggk2tdejlPUcjlPUbjQ,C_jQ,C_j5]1[j5]1[j5T(Xio8tWio8qUiSibSiSibRi8EPOi8EPO
hr!>Khr!>Khr!;IhVR,GhVR,Fh;-oCh;-oCgt^]?gt^]?gtUT<gY:K;gY:H9g=k97g=k96g"G'3g"G'3
f\"j/f\"j/f\"g-f@SX+f@SX*f%/F'f%/F'e^`4#e^`4#e^W*ueC<!teC;sre'ldpe'ldodaHRldaHRl
dF$@hdF$@hdF$=fd*U.dd*U.ccd0q`cd0q`cHa_\cHa_\cHXVYc-=MXc-=JVbfn;Tbfn;SbKJ)PbKJ)P
~>
<~l07Hsl07Hsl07Hskih6okih6okih6nkND$kkND$kkND!ik2tggk2tggk2k^djlPUcjlPUcjQ,C_jQ,C_
jQ,C^j5]1[j5]1[j5].Yio8tWio8tWio8qUiSibSiSibSiS`YPi8EPOi8EPOhr!>Khr!>Khr!>JhVR,G
hVR,GhVR)Eh;-oCh;-oCh;$f@gt^]?gt^]?gY:K;gY:K;gY:K:g=k97g=k97g=k96g"G'3g"G'3g"G$1
f\"j/f\"j/f[na,f@SX+f@SX+f%/F'f%/F'f%/F&e^`4#e^`4#e^`1!eC<!teC<!teC2mqe'ldpe'ldp
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /4 /Gradient get_res exec grestore
}if
np
67.896 136.854 mo
90.1754 111.789 li
89.6571 126.217 li
67.9459 136.845 li
67.896 136.854 li
level3{
gsave
clp
[341.667 0 0 410.001 255.833 -5 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[341.667 0 0 410.001 255.833 -5 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
126.742 144.951 mo
114.267 143.245 li
112.368 137.46 li
126.25 134.417 li
126.742 144.951 li
108.988 142.523 mo
100.648 141.382 li
102.592 139.556 li
102.589 139.603 li
108.333 138.344 li
108.988 142.523 li
102.597 139.468 mo
95.4033 132.018 li
103.149 130.656 li
102.597 139.468 li
85.0583 139.25 mo
67.7386 136.882 li
67.896 136.854 li
67.8714 136.882 li
67.9459 136.845 li
87.1906 133.462 li
85.0583 139.25 li
level3{
gsave
clp
[341.667 0 0 410.001 255.833 -5 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[341.667 0 0 410.001 255.833 -5 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
114.267 143.245 mo
108.988 142.523 li
108.333 138.344 li
112.368 137.46 li
114.267 143.245 li
level3{
gsave
clp
[341.667 0 0 410.001 255.833 -5 ]ct
/5 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.894118 .913725 .92549 ]
/C1 [.733333 .803922 .835294 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[341.667 0 0 410.001 255.833 -5 ]ct
clp
/5 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~j5]1[j5]1Zio8tWio/kTiSibRi8EPOi8<GLhr!>KhVR,GhVR)Eh;-oCgt^]?gt^Z=gY:K;gY1B8g=k96
g"G'3g"=s0f\"j.f@SX+f@SU)f%/F'e^`4#e^`1!eC<!te'ldpe'ldodaHRlda?IidF$@gd*U.dd*L%a
cd0q`cHa_\cHa\Zc-=MXbfn;Tbfn8RbKJ)PbK@uMb0%lKaiVZHaiMQEaN2HCa2c6@a2c3>`l?$<`Pog8
`Pod6`5KU4_o'C0_o'C/_SX1,_SO()_83t'^qdb$^q[Y!^V@Ou^:q=q^:q:o]tM+m]Y(ni]Y(kg]=Y\e
~>
<~kih6okih6okih3mkND$kkND$jk2tggk2tggjlPUcjlPUcjlGL`jQ,C_jQ,@]j5]1[j5]1Zio8tWio8tW
iSibSiSibSiSi_Qi8EPOi8EPNhr!>Khr!>KhVR,GhVR,GhVI#Dh;-oCh;-lAgt^]?gt^]>gY:K;gY:K;
g=k97g=k97g=k65g"G'3g"G'2f\"j/f\"j/f@SX+f@SX+f@JO(f%/F'f%/C%e^`4#e^`4"eC<!teC<!t
e'ldpe'ldpe'landaHRldaHRkdF$@hdF$@hd*U.dd*U.dd*L%acd0q`cd0n^cHa_\cHa_[c-=MXc-=MX
~>
<~lg*m&lg*m&lg*m&lK[["lK[["lK[[!l07Hsl07Hsl07Eqkih6okih6oki_-lkND$kkND$kk2tggk2tgg
k2tgfjlPUcjlPUcjlPRajQ,C_jQ,C_jQ,@]j5]1[j5]1[j5T(Xio8tWio8tWiSibSiSibSiSibRi8EPO
i8EPOi8EMMhr!>Khr!>Khqm5HhVR,GhVR,Gh;-oCh;-oCh;-oBgt^]?gt^]?gt^]>gY:K;gY:K;gY:H9
g=k97g=k97g=b04g"G'3g"G'3f\"j/f\"j/f\"j.f@SX+f@SX+f@SU)f%/F'f%/F'f%&=$e^`4#e^`4#
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /5 /Gradient get_res exec grestore
}if
np
67.8714 136.882 mo
67.896 136.854 li
67.9459 136.845 li
67.8714 136.882 li
level3{
gsave
clp
[341.667 0 0 410.001 255.833 -5 ]ct
/6 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.917647 .933333 .941176 ]
/C1 [.74902 .819608 .847059 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[341.667 0 0 410.001 255.833 -5 ]ct
clp
/6 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~l07Hsl07Eqkih6okND$kkND!ik2tggjlPUcjlPRajQ,C_j5]1[j5].Yio8tWiSibSiSi_Qi8EPOhr!>K
hr!;IhVR,Gh;-oCh;-lAgt^]?gY:K;gY:H9g=k97g"G'3g"G$1f\"j/f@SX+f@SU)f%/F'e^`4#e^`1!
eC<!se'ldpe'c[mdaHRkdF$@hdEp7ed*U.ccd0q`cd'h]cHa_[c-=MXc-4DUbfn;SbKJ)PbK@uMb0%lK
aiVZHaiMQEaN2HCa2c6@a2Z-=`l?$;`Pog8`Pf^5`5KU3_o'C0_ns:-_SX1+_83t(_8*k%^qdb#^V@Ou
~>
<~mHs<.mHs<.mHj3+m-O**m-O'(lg*m&lg*m%lK[["lK[["l07Hsl07Hsl0.?pkih6oki_-lkND$kkND!i
k2tggk2tgfjlPUcjlPUcjQ,C_jQ,C_jQ#:\j5]1[j5].Yio8tWio8qUiSibSiSibRi8EPOi8EPOhr!>K
hr!>Khqm5HhVR,GhVR)Eh;-oCh;-oBgt^]?gt^]>gY:K;gY:K;g=k97g=k97g=b04g"G'3g"G$1f\"j/
f\"j.f@SX+f@SX+f%/F'f%/F'e^`4#e^`4#e^W*ueC<!teC;sre'ldpe'ldodaHRldaHRldF$@hdF$@h
~>
<~n*f`6n*f`6n*f`5mdBN2mdBN2mdBK0mHs<.mHs<.m-O**m-O**m-O*)lg*m&lg*m&lg*j$lK[["lK[["
l07Hsl07Hsl07Hrkih6okih6okih3mkND$kkND$kk2tggk2tggk2tgfjlPUcjlPUcjlPRajQ,C_jQ,C_
j5]1[j5]1[j5]1Zio8tWio8tWio8qUiSibSiSibSi8EPOi8EPOi8EPNhr!>Khr!>Khr!;IhVR,GhVR,G
h;-oCh;-oCh;-oBgt^]?gt^]?gt^Z=gY:K;gY:K;g=k97g=k97g=k96g"G'3g"G'3g"G$1f\"j/f\"j/
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /6 /Gradient get_res exec grestore
}if
np
126.25 134.417 mo
125.888 126.659 li
127.742 126.236 li
130.118 133.569 li
126.25 134.417 li
130.868 133.405 mo
130.675 125.567 li
133.255 124.979 li
146.201 130.044 li
130.868 133.405 li
103.149 130.656 mo
104.216 113.615 li
104.475 113.716 li
107.022 129.975 li
103.149 130.656 li
109.755 129.495 mo
104.593 113.763 li
125.678 122.013 li
113.94 122.079 li
125.888 126.659 li
109.755 129.495 li
level3{
gsave
clp
[341.667 0 0 410.001 255.833 -5 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[341.667 0 0 410.001 255.833 -5 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
130.118 133.569 mo
127.742 126.236 li
130.675 125.567 li
130.868 133.405 li
130.118 133.569 li
level3{
gsave
clp
[341.667 0 0 410.001 255.833 -5 ]ct
/7 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.890196 .909804 .921569 ]
/C1 [.729412 .8 .831372 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[341.667 0 0 410.001 255.833 -5 ]ct
clp
/7 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~io8tWio8tViSibSiS`YPi8EPNhr!>Khqm5HhVR,Gh;-oCh;-lAgt^]?gY:K;gY:H9g=k97g=b04g"G'2
f\"j/f[na,f@SX*f%/F'f%/C%e^`4#eC<!teC;sre'ldpdaHRldaHRkdF$@hdEp7ed*U.ccd0q`cd'h]
cHa_\c-=MXc-=JVbfn;TbKJ)PbKJ&Nb0%lLb/qcIaiVZGaN2HDaN)?Aa2c6?`l?$<`l?!:`Pog8`5KU4
`5KR2_o'C0_SX1,_SX1+_83t(_8*k%^qdb#^V@Ou^V7Fr^:q=q]tM+m]tM(k]Y(ni]=Y\e]=YYc]"5Ja
~>
<~kND$kkND$kkND!ik2tggk2tgfjlPUcjlPUcjQ,C_jQ,C_jQ#:\j5]1[j5].Yio8tWio8tViSibSiSibS
i8EPOi8EPOi8EMMhr!>Khr!>JhVR,GhVR,Gh;-oCh;-oCh;$f@gt^]?gt^Z=gY:K;gY:K:g=k97g=k97
g"G'3g"G'3g"G$1f\"j/f\"j.f@SX+f@SX+f%/F'f%/F'f%&=$e^`4#e^`1!eC<!teC<!se'ldpe'ldp
daHRldaHRldaHOjdF$@hdF$@gd*U.dd*U.dcd0q`cd0q`cd'h]cHa_\cHa\Zc-=MXc-=MWbfn;Tbfn;T
~>
<~lK[["lK[["lK[["l07Hsl07Hsl07Hrkih6okih6okih3mkND$kkND$kkN:phk2tggk2tggjlPUcjlPUc
jlPUbjQ,C_jQ,C_jQ,@]j5]1[j5]1[j5].Yio8tWio8tWio/kTiSibSiSibSi8EPOi8EPOi8EPNhr!>K
hr!>Khr!;IhVR,GhVR,GhVI#Dh;-oCh;-oCgt^]?gt^]?gt^]>gY:K;gY:K;gY:K:g=k97g=k97g=k65
g"G'3g"G'3g"=s0f\"j/f\"j/f@SX+f@SX+f@SX*f%/F'f%/F'f%/C%e^`4#e^`4#e^W*ueC<!teC<!t
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /7 /Gradient get_res exec grestore
}if
np
107.022 129.975 mo
104.475 113.716 li
104.593 113.763 li
109.755 129.495 li
107.022 129.975 li
level3{
gsave
clp
[341.667 0 0 410.001 255.833 -5 ]ct
/8 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.870588 .894118 .905882 ]
/C1 [.713725 .788235 .819608 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[341.667 0 0 410.001 255.833 -5 ]ct
clp
/8 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~h;-oCh;-oBgt^]?gtUT<gY:K;g=k97g=k65g"G'3f\"j/f\"j.f@SX+f@JO(f%/F'e^`4#e^`1!eC<!t
e'ldpe'ldodaHRlda?IidF$@hd*U.dd*U+bcd0q`cHa_\cHa_[c-=MXc-4DUbfn;TbKJ)PbKJ&Nb0%lL
aiVZHaiVZGaN2HDaN)?Aa2c6@`l?$<`l?!:`Pog8`5KU4`5KU3_o'C0_ns:-_SX1,_83t(_83q&^qdb$
^V@Ou^V@Ot^:q=q^:h4n]tM+m]Y(ni]Y(kg]=Y\e]"5Ja]"5J`\[f8]\[]/Z\@B&Y\$riU\$rfS[^NWQ
~>
<~j5]1[j5]1[j5].Yio8tWio8tViSibSiSibSiS`YPi8EPOi8EMMhr!>Khr!>KhVR,GhVR,GhVI#Dh;-oC
h;-oBgt^]?gt^]?gY:K;gY:K;gY:H9g=k97g=k96g"G'3g"G'3g"=s0f\"j/f\"g-f@SX+f@SX+f%/F'
f%/F'f%&=$e^`4#e^`4"eC<!teC<!te'ldpe'ldpe'landaHRldaHRkdF$@hdF$@hdEp7ed*U.dd*U+b
cd0q`cd0q`cHa_\cHa_\cHXVYc-=MXc-=MWbfn;Tbfn;TbKJ)PbKJ)PbKJ&Nb0%lLb0%lKaiVZHaiVZH
~>
<~k2tggk2tggk2tggjlPUcjlPUcjlPUcjQ,C_jQ,C_jQ,C^j5]1[j5]1[j5]1Zio8tWio8tWio8tViSibS
iSibSiSi_Qi8EPOi8EPOi8EMMhr!>Khr!>Khr!;IhVR,GhVR,GhVI#Dh;-oCh;-oCh;$f@gt^]?gt^]?
gY:K;gY:K;gY:K;g=k97g=k97g=k97g"G'3g"G'3g"G'2f\"j/f\"j/f\"j.f@SX+f@SX+f@SX*f%/F'
f%/F'f%/C%e^`4#e^`4#e^`1!eC<!teC<!teC;sre'ldpe'ldpe'c[mdaHRldaHRlda?IidF$@hdF$@h
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /8 /Gradient get_res exec grestore
}if
np
102.589 139.603 mo
102.592 139.556 li
102.639 139.511 li
102.597 139.468 li
103.149 130.656 li
107.022 129.975 li
108.333 138.344 li
102.589 139.603 li
112.368 137.46 mo
109.755 129.495 li
125.888 126.659 li
126.25 134.417 li
112.368 137.46 li
level3{
gsave
clp
[341.667 0 0 410.001 255.833 -5 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[341.667 0 0 410.001 255.833 -5 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
108.333 138.344 mo
107.022 129.975 li
109.755 129.495 li
112.368 137.46 li
108.333 138.344 li
level3{
gsave
clp
[341.667 0 0 410.001 255.833 -5 ]ct
/9 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.835294 .870588 .886274 ]
/C1 [.690196 .768627 .803922 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[341.667 0 0 410.001 255.833 -5 ]ct
clp
/9 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~eC<!teC<!se'ldpe'landaHRlda?IidF$@hd*U.dd*U.ccd0q`cd0n^cHa_\cHXVYc-=MXbfn;Tbfn;S
bKJ)PbKJ&Nb0%lLb/qcIaiVZHaN2HDaN2EBa2c6@a2Z-=`l?$<`Pog8`Pog7`5KU4`5KR2_o'C0_ns:-
_SX1,_83t(_83t'^qdb$^qd_"^V@Ou^V7Fr^:q=q]tM+m]tM+l]Y(ni]Xtef]=Y\e]"5Ja]"5J`\[f8]
\[f5[\@B&Y\@8rV\$riU[^NWQ[^NWP[C*EM[C*BK['[3I['R*FZa7!EZEgdAZEgd@Z*CR=Z*CO;Yct@9
~>
<~h;-oCh;-oCh;-lAgt^]?gt^]?gY:K;gY:K;gY:H9g=k97g=k97g"G'3g"G'3g"G$1f\"j/f\"j/f@SX+
f@SX+f@JO(f%/F'f%/F&e^`4#e^`4#e^W*ueC<!teC<!se'ldpe'ldpe'c[mdaHRldaHRkdF$@hdF$@h
d*U.dd*U.dd*U+bcd0q`cd0q`cHa_\cHa_\cHa\Zc-=MXc-=MXbfn;Tbfn;Tbfn8RbKJ)PbKJ)Pb0%lL
b0%lLb/qcIaiVZHaiVZGaN2HDaN2HDaN)?Aa2c6@a2c6?`l?$<`l?$<`l5p9`Pog8`Pog7`5KU4`5KU4
~>
<~iSibSiSibSiSibSiS`YPi8EPOi8EPOi8<GLhr!>Khr!>Khqm5HhVR,GhVR,GhVI#Dh;-oCh;-oCh;$f@
gt^]?gt^]?gt^Z=gY:K;gY:K;gY:H9g=k97g=k97g=k65g"G'3g"G'3g"G$1f\"j/f\"j/f\"g-f@SX+
f@SX+f@SX*f%/F'f%/F'f%/F&e^`4#e^`4#e^`4"eC<!teC<!teC<!se'ldpe'ldpe'ldodaHRldaHRl
daHRldF$@hdF$@hdF$@hd*U.dd*U.dd*U.dcd0q`cd0q`cd0q`cHa_\cHa_\cHa_\c-=MXc-=MXc-=MX
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /9 /Gradient get_res exec grestore
}if
np
56.3874 95.7915 mo
73.1154 89.2198 li
90.441 92.8045 li
56.3874 95.7915 li
level3{
gsave
clp
[341.667 0 0 410.001 255.833 -5 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[341.667 0 0 410.001 255.833 -5 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
81.5458 170.869 mo
84.0921 168.323 li
86.3363 169.23 li
81.5458 170.869 li
91.7312 167.199 mo
86.0103 166.404 li
96.8136 155.601 li
91.7312 167.199 li
level3{
gsave
clp
[341.667 0 0 410.001 255.833 -5 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[341.667 0 0 410.001 255.833 -5 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
122.501 170.475 mo
110.754 167.019 li
115.148 162.679 li
122.501 170.475 li
level3{
gsave
clp
[341.667 0 0 410.001 255.833 -5 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[341.667 0 0 410.001 255.833 -5 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
104.182 112.52 mo
101.653 103.986 li
107.843 105.046 li
104.182 112.52 li
108.847 96.3679 mo
113.741 93.0036 li
112.387 95.768 li
108.847 96.3679 li
level3{
gsave
clp
[341.667 0 0 410.001 255.833 -5 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[341.667 0 0 410.001 255.833 -5 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
120.047 227.691 mo
128.411 193.837 li
138.039 224.08 li
138.874 224.112 li
120.047 227.691 li
level3{
gsave
clp
[341.667 0 0 410.001 255.833 -5 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[341.667 0 0 410.001 255.833 -5 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
164.127 225.081 mo
154.701 224.719 li
152.176 221.584 li
152.903 224.65 li
138.874 224.112 li
152.176 221.584 li
128.411 193.837 li
164.127 225.081 li
level3{
gsave
clp
[341.667 0 0 410.001 255.833 -5 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[341.667 0 0 410.001 255.833 -5 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
138.874 224.112 mo
138.039 224.08 li
128.411 193.837 li
152.176 221.584 li
138.874 224.112 li
level3{
gsave
clp
[341.667 0 0 410.001 255.833 -5 ]ct
/10 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.831372 .862745 .878431 ]
/C1 [.686274 .764706 .796078 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[341.667 0 0 410.001 255.833 -5 ]ct
clp
/10 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~e'ldpe'ldodaHRldaHOjdF$@hdEp7ed*U.dcd0q`cd0q_cHa_\cHa\Zc-=MXc-4DUbfn;TbKJ)PbKJ)O
b0%lLb0%iJaiVZHaiMQEaN2HDa2c6@a2c3>`l?$<`l5p9`Pog8`5KU4`5KU3_o'C0_o'@._SX1,_SO()
_83t(^qdb$^qdb#^V@Ou^V@Ls^:q=q^:h4n]tM+m]Y(ni]Y(nh]=Y\e]=PSb]"5Ja\[f8]\[f8\\@B&Y
\@B#W\$riU\$i`R[^NWQ[C*EM[C*EL['[3I['[0GZa7!EZa-mBZEgdAZ*CR=Z*CR<Yct@9Yct=7YHP.5
~>
<~gY:K;gY:K;gY:K:g=k97g=k97g=b04g"G'3g"G'2f\"j/f\"j/f[na,f@SX+f@SX+f%/F'f%/F'f%/C%
e^`4#e^`4#eC<!teC<!teC;sre'ldpe'ldpe'c[mdaHRldaHRkdF$@hdF$@hdEp7ed*U.dd*U.ccd0q`
cd0q`cd0n^cHa_\cHa_\c-=MXc-=MXc-=JVbfn;Tbfn;TbKJ)PbKJ)PbKJ)Ob0%lLb0%lLb/qcIaiVZH
aiVZGaN2HDaN2HDaN)?Aa2c6@a2c6@`l?$<`l?$<`l?!:`Pog8`Pog8`5KU4`5KU4`5KR2_o'C0_o'C0
~>
<~hr!>Khr!>Khr!>Khqm5HhVR,GhVR,GhVI#Dh;-oCh;-oCh;$f@gt^]?gt^]?gtUT<gY:K;gY:K;gY1B8
g=k97g=k97g=k65g"G'3g"G'3g"G$1f\"j/f\"j/f\"g-f@SX+f@SX+f@SU)f%/F'f%/F'f%/C%e^`4#
e^`4#e^`4"eC<!teC<!teC<!se'ldpe'ldpe'ldodaHRldaHRldaHRkdF$@hdF$@hdF$@gd*U.dd*U.d
d*U.dcd0q`cd0q`cd0q`cHa_\cHa_\cHa_\c-=MXc-=MXc-=MXbfn;Tbfn;Tbfn;TbKJ)PbKJ)PbKJ)P
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /10 /Gradient get_res exec grestore
}if
np
135.713 287.434 mo
143.978 233.887 li
151.437 235.821 li
135.713 287.434 li
level3{
gsave
clp
[341.667 0 0 410.001 255.833 -5 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[341.667 0 0 410.001 255.833 -5 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
121.64 107.408 mo
107.843 105.046 li
112.387 95.768 li
129.871 92.8045 li
121.64 107.408 li
level3{
gsave
clp
[341.667 0 0 410.001 255.833 -5 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[341.667 0 0 410.001 255.833 -5 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
101.653 103.986 mo
82.8735 100.77 li
108.847 96.3679 li
100.995 101.766 li
101.653 103.986 li
level3{
gsave
clp
[341.667 0 0 410.001 255.833 -5 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[341.667 0 0 410.001 255.833 -5 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
107.843 105.046 mo
101.653 103.986 li
100.995 101.766 li
108.847 96.3679 li
112.387 95.768 li
107.843 105.046 li
level3{
gsave
clp
[341.667 0 0 410.001 255.833 -5 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[341.667 0 0 410.001 255.833 -5 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
175.276 84.3076 mo
163.593 78.9971 li
173.506 75.1096 li
175.276 84.3076 li
level3{
gsave
clp
[341.667 0 0 410.001 255.833 -5 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[341.667 0 0 410.001 255.833 -5 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
75.6075 164.904 mo
85.0583 139.25 li
100.648 141.382 li
75.6075 164.904 li
87.1906 133.462 mo
89.8435 126.261 li
95.4033 132.018 li
87.1906 133.462 li
level3{
gsave
clp
[341.667 0 0 410.001 255.833 -5 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[341.667 0 0 410.001 255.833 -5 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
100.648 141.382 mo
85.0583 139.25 li
87.1906 133.462 li
95.4033 132.018 li
102.597 139.468 li
102.592 139.556 li
100.648 141.382 li
level3{
gsave
clp
[341.667 0 0 410.001 255.833 -5 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[341.667 0 0 410.001 255.833 -5 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
102.592 139.556 mo
102.597 139.468 li
102.639 139.511 li
102.592 139.556 li
level3{
gsave
clp
[341.667 0 0 410.001 255.833 -5 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[341.667 0 0 410.001 255.833 -5 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
133.255 124.979 mo
130.636 123.953 li
130.587 121.986 li
146.771 121.896 li
133.255 124.979 li
126.474 122.325 mo
125.678 122.013 li
126.372 122.01 li
126.474 122.325 li
level3{
gsave
clp
[341.667 0 0 410.001 255.833 -5 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[341.667 0 0 410.001 255.833 -5 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
130.636 123.953 mo
126.474 122.325 li
126.372 122.01 li
130.587 121.986 li
130.636 123.953 li
level3{
gsave
clp
[341.667 0 0 410.001 255.833 -5 ]ct
/7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[341.667 0 0 410.001 255.833 -5 ]ct
clp
/7 /Gradient get_res exec grestore
}if
np
125.888 126.659 mo
125.888 126.659 li
113.94 122.079 li
125.678 122.013 li
126.474 122.325 li
127.742 126.236 li
125.888 126.659 li
130.675 125.567 mo
130.636 123.953 li
133.255 124.979 li
130.675 125.567 li
level3{
gsave
clp
[341.667 0 0 410.001 255.833 -5 ]ct
/11 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.847059 .878431 .894118 ]
/C1 [.698039 .776471 .807843 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[341.667 0 0 410.001 255.833 -5 ]ct
clp
/11 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~f@SX+f@SX*f%/F'f%/C%e^`4#e^W*ueC<!se'ldpe'landaHRlda?IidF$@hd*U.dd*U+bcd0q`cd'h]
cHa_\c-=MXc-=MWbfn;Tbfe2QbKJ)Pb0%lLb0%lKaiVZHaiVWFaN2HDa2c6@a2c6?`l?$<`l?!:`Pog8
`5KU4`5KU3_o'C0_o'@._SX1,_SO()_83t'^qdb$^qd_"^V@Ou^V7Fr^:q=q]tM+m]tM(k]Y(ni]Xtef
]=Y\e]"5Ja]"5J`\[f8]\[]/Z\@B&Y\$riU\$riT[^NWQ[^NTO[C*EM['[3I['[3HZa7!EZa6sCZEgdA
~>
<~hr!>Khr!>Khr!;IhVR,GhVR,Gh;-oCh;-oCh;-lAgt^]?gt^]?gY:K;gY:K;gY:H9g=k97g=k97g"G'3
g"G'3g"=s0f\"j/f\"j.f@SX+f@SX+f@JO(f%/F'f%/F&e^`4#e^`4#e^W*ueC<!teC<!se'ldpe'ldp
daHRldaHRldaHOjdF$@hdF$@hd*U.dd*U.dd*U+bcd0q`cd0q`cHa_\cHa_\cHa\Zc-=MXc-=MXbfn;T
bfn;Tbfe2QbKJ)PbKJ)Ob0%lLb0%lLb/qcIaiVZHaiVZGaN2HDaN2HDaN)?Aa2c6@a2c6?`l?$<`l?$<
~>
<~j5]1[j5]1[j5]1[io8tWio8tWio8tWiSibSiSibSiSibRi8EPOi8EPOi8EPNhr!>Khr!>Khr!>JhVR,G
hVR,GhVR)Eh;-oCh;-oCh;-lAgt^]?gt^]?gt^Z=gY:K;gY:K;gY1B8g=k97g=k97g=b04g"G'3g"G'3
f\"j/f\"j/f\"j/f@SX+f@SX+f@SX+f%/F'f%/F'f%/F&e^`4#e^`4#e^`4"eC<!teC<!teC<!se'ldp
e'ldpe'landaHRldaHRldaHOjdF$@hdF$@hdF$=fd*U.dd*U.dd*L%acd0q`cd0q`cd'h]cHa_\cHa_\
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /11 /Gradient get_res exec grestore
}if
np
127.742 126.236 mo
126.474 122.325 li
130.636 123.953 li
130.675 125.567 li
127.742 126.236 li
level3{
gsave
clp
[341.667 0 0 410.001 255.833 -5 ]ct
/12 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.835294 .866667 .882353 ]
/C1 [.686274 .768627 .8 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[341.667 0 0 410.001 255.833 -5 ]ct
clp
/12 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~eC<!teC<!se'ldpe'landaHRlda?IidF$@gd*U.dd*U+bcd0q`cd'h]cHa_\c-=MXc-=JVbfn;Tbfe2Q
bKJ)Pb0%lLb0%lKaiVZHaiMQEaN2HDa2c6@a2c6?`l?$<`l?!:`Pog8`5KU4`5KU3_o'C0_o'@._SX1,
_83t(_83t'^qdb$^qd_"^V@Ou^V7Fr^:q=p]tM+m]tM(k]Y(ni]Xtef]=Y\e]"5Ja]"5G_\[f8]\[]/Z
\@B&Y\$riU\$riT[^NWQ[^ENN[C*EM['[3I['[3HZa7!EZa6sCZEgdAZ*CR=Z*CR<Yct@9Yct=7YHP.5
~>
<~gt^]?gt^]?gt^]>gY:K;gY:K;gY1B8g=k97g=k96g"G'3g"G'3g"=s0f\"j/f\"j/f@SX+f@SX+f@SU)
f%/F'f%/F'e^`4#e^`4#e^`1!eC<!teC<!teC2mqe'ldpe'ldodaHRldaHRlda?IidF$@hdF$@gd*U.d
d*U.dd*U+bcd0q`cd0q`cHa_\cHa_\cHa\Zc-=MXc-=MXbfn;Tbfn;Tbfn;SbKJ)PbKJ)PbK@uMb0%lL
b0%lKaiVZHaiVZHaiMQEaN2HDaN2HDa2c6@a2c6@a2c3>`l?$<`l?$<`Pog8`Pog8`Pod6`5KU4`5KU4
~>
<~i8EPOi8EPOi8EPOi8<GLhr!>Khr!>Khqm5HhVR,GhVR,GhVI#Dh;-oCh;-oCh;$f@gt^]?gt^]?gtUT<
gY:K;gY:K;gY:H9g=k97g=k97g=k65g"G'3g"G'3g"G$1f\"j/f\"j/f\"g-f@SX+f@SX+f@SU)f%/F'
f%/F'f%/F&e^`4#e^`4#e^`4"eC<!teC<!teC<!se'ldpe'ldpe'ldodaHRldaHRldaHRkdF$@hdF$@h
dF$@hd*U.dd*U.dd*U.dcd0q`cd0q`cd0q`cHa_\cHa_\cHa_\c-=MXc-=MXc-=MXbfn;Tbfn;Tbfn;T
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /12 /Gradient get_res exec grestore
}if
np
129.871 253.978 mo
127.747 233.798 li
138.634 243.888 li
129.871 253.978 li
level3{
gsave
clp
[341.667 0 0 410.001 255.833 -5 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[341.667 0 0 410.001 255.833 -5 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
158.283 247.34 mo
152.903 224.65 li
154.701 224.719 li
167.576 240.702 li
158.283 247.34 li
level3{
gsave
clp
[341.667 0 0 410.001 255.833 -5 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[341.667 0 0 410.001 255.833 -5 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
154.701 224.719 mo
152.903 224.65 li
152.176 221.584 li
154.701 224.719 li
level3{
gsave
clp
[341.667 0 0 410.001 255.833 -5 ]ct
/13 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.831372 .862745 .878431 ]
/C1 [.686274 .760784 .796078 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[341.667 0 0 410.001 255.833 -5 ]ct
clp
/13 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~e'ldpe'ldodaHRldaHOjdF$@hdEp7ed*U.dcd0q`cd0q_cHa_\cHa\Zc-=MXc-4DUbfn;TbKJ)PbKJ)O
b0%lLb0%iJaiVZHaiMQEaN2HDa2c6@a2c3>`l?$<`l5p9`Pog8`5KU4`5KU3_o'C0_o'@._SX1,_SO()
_83t(^qdb$^qdb#^V@Ou^V@Ls^:q=q^:h4n]tM+m]Y(ni]Y(nh]=Y\e]=PSb]"5Ja\[f8]\[f8\\@B&Y
\@B#W\$riU\$i`R[^NWQ[C*EM[C*EL['[3I['[0GZa7!EZa-mBZEgdAZ*CR=Z*CR<Yct@9Yct=7YHP.5
~>
<~gY:K;gY:K;gY:H9g=k97g=k97g"G'3g"G'3g"G$1f\"j/f\"j/f@SX+f@SX+f@SU)f%/F'f%/F'e^`4#
e^`4#e^W*ueC<!teC<!se'ldpe'ldpe'c[mdaHRldaHRkdF$@hdF$@hdEp7ed*U.dd*U.ccd0q`cd0q`
cHa_\cHa_\cHa\Zc-=MXc-=MXbfn;Tbfn;Tbfn8RbKJ)PbKJ)Pb0%lLb0%lLb0%iJaiVZHaiVZHaN2HD
aN2HDaN)?Aa2c6@a2c6?`l?$<`l?$<`l5p9`Pog8`Pog7`5KU4`5KU4`5BL1_o'C0_o'C/_SX1,_SX1,
~>
<~hr!>Khr!>Khr!>Khqm5HhVR,GhVR,GhVI#Dh;-oCh;-oCh;$f@gt^]?gt^]?gtUT<gY:K;gY:K;gY1B8
g=k97g=k97g=k65g"G'3g"G'3g"G$1f\"j/f\"j/f\"g-f@SX+f@SX+f@SU)f%/F'f%/F'f%/C%e^`4#
e^`4#e^`4"eC<!teC<!teC<!se'ldpe'ldpe'ldodaHRldaHRldaHRkdF$@hdF$@hdF$@gd*U.dd*U.d
d*U.dcd0q`cd0q`cd0q`cHa_\cHa_\cHa_\c-=MXc-=MXc-=MXbfn;Tbfn;Tbfn;TbKJ)PbKJ)PbKJ)P
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /13 /Gradient get_res exec grestore
}if
np
103.539 176.185 mo
86.3363 169.23 li
91.6359 167.417 li
91.7312 167.199 li
105.337 169.09 li
103.539 176.185 li
84.0921 168.323 mo
75.8584 164.993 li
86.0103 166.404 li
84.0921 168.323 li
level3{
gsave
clp
[341.667 0 0 410.001 255.833 -5 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[341.667 0 0 410.001 255.833 -5 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
86.3363 169.23 mo
84.0921 168.323 li
86.0103 166.404 li
91.7312 167.199 li
91.6359 167.417 li
86.3363 169.23 li
level3{
gsave
clp
[341.667 0 0 410.001 255.833 -5 ]ct
/14 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.862745 .890196 .905882 ]
/C1 [.709804 .784314 .815686 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /14 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[341.667 0 0 410.001 255.833 -5 ]ct
clp
/14 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~gY:K;gY:K:g=k97g=k65g"G'3f\"j/f\"j.f@SX+f@JO(f%/F'e^`4#e^`1!eC<!teC2mqe'ldpdaHRl
daHOjdF$@hdEp7ed*U.ccd0q`cd0n^cHa_\c-=MXc-=MWbfn;Tbfn8RbKJ)Pb0%lLb0%lKaiVZHaiMQE
aN2HDa2c6@a2c3>`l?$<`l5p9`Pog7`5KU4`5KR2_o'C0_ns:-_SX1+_83t(_83q&^qdb$^V@Ou^V@Ot
^:q=q^:h4n]tM+m]Y(ni]Y(nh]=Y\e]=PSb]"5Ja\[f8]\[f5[\@B&Y\@8rV\$riT[^NWQ[^NTO[C*EM
~>
<~io8tWio8tWio8qUiSibSiSibRi8EPOi8EPOi8<GLhr!>Khr!;IhVR,GhVR,Gh;-oCh;-oCh;$f@gt^]?
gt^]>gY:K;gY:K;g=k97g=k97g=k65g"G'3g"G'2f\"j/f\"j/f[na,f@SX+f@SU)f%/F'f%/F'e^`4#
e^`4#e^W*ueC<!teC<!se'ldpe'ldpdaHRldaHRldaHOjdF$@hdF$@gd*U.dd*U.dd*L%acd0q`cd0n^
cHa_\cHa_\c-=MXc-=MXc-4DUbfn;Tbfn;SbKJ)PbKJ)Pb0%lLb0%lLb0%iJaiVZHaiVZGaN2HDaN2HD
~>
<~k2tggk2tggk2tggjlPUcjlPUcjlPUbjQ,C_jQ,C_jQ,@]j5]1[j5]1[j5T(Xio8tWio8tWiSibSiSibS
iSibRi8EPOi8EPOi8EMMhr!>Khr!>Khr!;IhVR,GhVR,GhVI#Dh;-oCh;-oCgt^]?gt^]?gt^]>gY:K;
gY:K;gY:H9g=k97g=k97g=b04g"G'3g"G'3f\"j/f\"j/f\"j.f@SX+f@SX+f@SX*f%/F'f%/F'f%/C%
e^`4#e^`4#e^W*ueC<!teC<!te'ldpe'ldpe'ldodaHRldaHRldaHOjdF$@hdF$@hdEp7ed*U.dd*U.d
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /14 /Gradient get_res exec grestore
}if
np
232.364 177.241 mo
201.032 170.072 li
221.212 158.655 li
232.364 177.241 li
level3{
gsave
clp
[341.667 0 0 410.001 255.833 -5 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[341.667 0 0 410.001 255.833 -5 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
227.717 131.837 mo
227.658 131.701 li
227.742 131.534 li
227.759 131.53 li
227.717 131.837 li
227.562 131.483 mo
220.548 115.507 li
229.311 120.021 li
227.783 131.35 li
227.562 131.483 li
level3{
gsave
clp
[341.667 0 0 410.001 255.833 -5 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[341.667 0 0 410.001 255.833 -5 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
250.021 125.331 mo
265.011 118.716 li
266.75 121.614 li
250.021 125.331 li
266.75 121.614 mo
266.75 121.614 li
266.338 118.13 li
273.786 114.843 li
266.75 121.614 li
273.786 114.843 mo
273.786 114.843 li
level3{
gsave
clp
[341.667 0 0 410.001 255.833 -5 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[341.667 0 0 410.001 255.833 -5 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
282.548 231.408 mo
253.34 224.505 li
252.278 200.076 li
282.548 231.408 li
level3{
gsave
clp
[341.667 0 0 410.001 255.833 -5 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[341.667 0 0 410.001 255.833 -5 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
252.278 200.076 mo
262.368 179.897 li
294.497 178.038 li
252.278 200.076 li
level3{
gsave
clp
[341.667 0 0 410.001 255.833 -5 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[341.667 0 0 410.001 255.833 -5 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
279.627 149.627 mo
267.148 135.554 li
281.619 129.181 li
279.627 149.627 li
level3{
gsave
clp
[341.667 0 0 410.001 255.833 -5 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[341.667 0 0 410.001 255.833 -5 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
241.79 136.483 mo
244.676 126.039 li
249.665 124.12 li
250.021 125.331 li
241.79 136.483 li
246.877 118.075 mo
247.366 116.303 li
247.853 117.958 li
246.877 118.075 li
level3{
gsave
clp
[341.667 0 0 410.001 255.833 -5 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[341.667 0 0 410.001 255.833 -5 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
304.587 116.436 mo
287.328 110.064 li
287.982 110.015 li
287.593 110.064 li
331.878 112.148 li
304.587 116.436 li
347.085 109.758 mo
338.764 106.221 li
397.52 101.832 li
347.085 109.758 li
level3{
gsave
clp
[341.667 0 0 410.001 255.833 -5 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[341.667 0 0 410.001 255.833 -5 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
349.195 173.789 mo
338.043 148.565 li
368.047 169.276 li
349.195 173.789 li
level3{
gsave
clp
[341.667 0 0 410.001 255.833 -5 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[341.667 0 0 410.001 255.833 -5 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
273.786 114.843 mo
273.786 114.843 li
265.404 110.216 li
264.227 100.239 li
257.191 105.682 li
252.868 110.355 li
237.276 107.01 li
264.227 100.239 li
273.786 114.843 li
level3{
gsave
clp
[341.667 0 0 410.001 255.833 -5 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[341.667 0 0 410.001 255.833 -5 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
265.011 118.716 mo
264.768 118.311 li
266.291 117.726 li
266.338 118.13 li
265.011 118.716 li
level3{
gsave
clp
[341.667 0 0 410.001 255.833 -5 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[341.667 0 0 410.001 255.833 -5 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
266.75 121.614 mo
265.011 118.716 li
266.338 118.13 li
266.75 121.614 li
level3{
gsave
clp
[341.667 0 0 410.001 255.833 -5 ]ct
/15 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.917647 .933333 .941176 ]
/C1 [.74902 .815686 .847059 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[341.667 0 0 410.001 255.833 -5 ]ct
clp
/15 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~l07Hsl07Eqkih6okND$kkND!ik2tggjlPUcjlPRajQ,C_j5]1[j5].Yio8tWiSibSiSi_Qi8EPOhr!>K
hr!;IhVR,Gh;-oCh;-lAgt^]?gY:K;gY:H9g=k97g"G'3g"G$1f\"j/f@SX+f@SU)f%/F'e^`4#e^`1!
eC<!se'ldpe'c[mdaHRkdF$@hdEp7ed*U.ccd0q`cd'h]cHa_[c-=MXc-4DUbfn;SbKJ)PbK@uMb0%lK
aiVZHaiMQEaN2HCa2c6@a2Z-=`l?$;`Pog8`Pf^5`5KU3_o'C0_ns:-_SX1+_83t(_8*k%^qdb#^V@Ou
~>
<~mHs<.mHs<.mHj3+m-O**m-O'(lg*m&lg*j$lK[["lK[[!l07Hsl07Hrkih6okih6okND$kkND$kk2tgg
k2tggk2k^djlPUcjlGL`jQ,C_jQ,@]j5]1[j5].Yio8tWio8tViSibSiSibRi8EPOi8EPOhr!>Khr!>K
hVR,GhVR,GhVI#Dh;-oCh;-lAgt^]?gt^Z=gY:K;gY:K:g=k97g=k96g"G'3g"G'3f\"j/f\"j/f@SX+
f@SX+f@JO(f%/F'f%&=$e^`4#e^`1!eC<!teC;sre'ldpe'ldodaHRldaHRkdF$@hdF$@hd*U.dd*U.d
~>
<~n*f`6n*f`6n*f`5mdBN2mdBN2mdBK0mHs<.mHs<.m-O**m-O**m-O*)lg*m&lg*m&lg*j$lK[["lK[["
l07Hsl07Hsl07Hrkih6okih6okih3mkND$kkND$kk2tggk2tggk2tgfjlPUcjlPUcjlPRajQ,C_jQ,C_
j5]1[j5]1[j5]1Zio8tWio8tWio8qUiSibSiSibSi8EPOi8EPOi8EPNhr!>Khr!>Khr!;IhVR,GhVR,G
h;-oCh;-oCh;-oBgt^]?gt^]?gt^Z=gY:K;gY:K;g=k97g=k97g=k96g"G'3g"G'3g"G$1f\"j/f\"j/
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /15 /Gradient get_res exec grestore
}if
np
263.433 116.087 mo
263.043 115.437 li
266.001 115.273 li
266.06 115.771 li
263.433 116.087 li
level3{
gsave
clp
[341.667 0 0 410.001 255.833 -5 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[341.667 0 0 410.001 255.833 -5 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
265.404 110.216 mo
257.191 105.682 li
264.227 100.239 li
265.404 110.216 li
level3{
gsave
clp
[341.667 0 0 410.001 255.833 -5 ]ct
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[341.667 0 0 410.001 255.833 -5 ]ct
clp
/15 /Gradient get_res exec grestore
}if
np
212.509 140.578 mo
227.562 131.483 li
227.658 131.701 li
223.221 140.498 li
212.509 140.578 li
227.778 131.386 mo
227.783 131.35 li
227.802 131.338 li
227.778 131.386 li
level3{
gsave
clp
[341.667 0 0 410.001 255.833 -5 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[341.667 0 0 410.001 255.833 -5 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
227.658 131.701 mo
227.562 131.483 li
227.783 131.35 li
227.778 131.386 li
227.698 131.545 li
227.742 131.534 li
227.658 131.701 li
level3{
gsave
clp
[341.667 0 0 410.001 255.833 -5 ]ct
/16 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.847059 .878431 .890196 ]
/C1 [.698039 .776471 .807843 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[341.667 0 0 410.001 255.833 -5 ]ct
clp
/16 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~f@SX+f@SX*f%/F'f%/C%e^`4#e^W*ueC<!se'ldpe'landaHRlda?IidF$@hd*U.dd*U+bcd0q`cd'h]
cHa_\c-=MXc-=MWbfn;Tbfe2QbKJ)Pb0%lLb0%lKaiVZHaiVWFaN2HDa2c6@a2c6?`l?$<`l?!:`Pog8
`5KU4`5KU3_o'C0_o'@._SX1,_SO()_83t'^qdb$^qd_"^V@Ou^V7Fr^:q=q]tM+m]tM(k]Y(ni]Xtef
]=Y\e]"5Ja]"5J`\[f8]\[]/Z\@B&Y\$riU\$riT[^NWQ[^NTO[C*EM['[3I['[3HZa7!EZa6sCZEgdA
~>
<~hr!>Khr!>Khr!;IhVR,GhVR,Gh;-oCh;-oCh;-lAgt^]?gt^]?gY:K;gY:K;gY:H9g=k97g=k97g"G'3
g"G'3g"=s0f\"j/f\"j.f@SX+f@SX+f@JO(f%/F'f%/F&e^`4#e^`4#e^W*ueC<!teC<!se'ldpe'ldp
daHRldaHRldaHOjdF$@hdF$@hd*U.dd*U.dd*U+bcd0q`cd0q`cHa_\cHa_\cHa\Zc-=MXc-=MXbfn;T
bfn;Tbfe2QbKJ)PbKJ)Ob0%lLb0%lLb/qcIaiVZHaiVZGaN2HDaN2HDaN)?Aa2c6@a2c6?`l?$<`l?$<
~>
<~io8tWio8tWio8tWio/kTiSibSiSibSiS`YPi8EPOi8EPOi8<GLhr!>Khr!>Khqm5HhVR,GhVR,GhVI#D
h;-oCh;-oCh;-lAgt^]?gt^]?gt^Z=gY:K;gY:K;gY:H9g=k97g=k97g=k65g"G'3g"G'3g"G$1f\"j/
f\"j/f\"j.f@SX+f@SX+f@SX*f%/F'f%/F'f%/F&e^`4#e^`4#e^`4"eC<!teC<!teC<!se'ldpe'ldp
e'ldpdaHRldaHRldaHRldF$@hdF$@hdF$@hd*U.dd*U.dd*U.dcd0q`cd0q`cd0q`cHa_\cHa_\cHa_\
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /16 /Gradient get_res exec grestore
}if
np
235.816 129.447 mo
235.694 129.266 li
236.047 119.376 li
246.877 118.075 li
244.676 126.039 li
235.816 129.447 li
249.665 124.12 mo
247.853 117.958 li
263.433 116.087 li
264.768 118.311 li
249.665 124.12 li
231.791 123.453 mo
229.576 120.153 li
233.712 119.657 li
231.791 123.453 li
level3{
gsave
clp
[341.667 0 0 410.001 255.833 -5 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[341.667 0 0 410.001 255.833 -5 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
244.676 126.039 mo
246.877 118.075 li
247.853 117.958 li
249.665 124.12 li
244.676 126.039 li
level3{
gsave
clp
[341.667 0 0 410.001 255.833 -5 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[341.667 0 0 410.001 255.833 -5 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
266.291 117.726 mo
266.06 115.771 li
273.786 114.843 li
266.291 117.726 li
level3{
gsave
clp
[341.667 0 0 410.001 255.833 -5 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[341.667 0 0 410.001 255.833 -5 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
264.768 118.311 mo
263.433 116.087 li
266.06 115.771 li
266.291 117.726 li
264.768 118.311 li
level3{
gsave
clp
[341.667 0 0 410.001 255.833 -5 ]ct
/7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[341.667 0 0 410.001 255.833 -5 ]ct
clp
/7 /Gradient get_res exec grestore
}if
np
315.208 130.244 mo
273.786 114.843 li
304.587 116.436 li
315.208 130.244 li
level3{
gsave
clp
[341.667 0 0 410.001 255.833 -5 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[341.667 0 0 410.001 255.833 -5 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
252.278 200.076 mo
232.364 177.241 li
232.662 176.576 li
232.595 177.142 li
239.345 162.067 li
246.166 182.113 li
245.375 183.216 li
246.465 182.992 li
252.278 200.076 li
level3{
gsave
clp
[341.667 0 0 410.001 255.833 -5 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[341.667 0 0 410.001 255.833 -5 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
232.662 176.576 mo
235.904 149.32 li
239.52 161.676 li
239.345 162.067 li
239.268 161.841 li
232.662 176.576 li
level3{
gsave
clp
[341.667 0 0 410.001 255.833 -5 ]ct
/17 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.85098 .882353 .894118 ]
/C1 [.701961 .776471 .811765 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /17 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[341.667 0 0 410.001 255.833 -5 ]ct
clp
/17 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~f\"j/f\"j.f@SX+f@SU)f%/F'f%&=$e^`4"eC<!teC;sre'ldpe'c[mdaHRldF$@hdF$=fd*U.dd*L%a
cd0q`cHa_\cHa_[c-=MXc-4DUbfn;TbKJ)PbKJ)Ob0%lLb0%iJaiVZHaN2HDaN2HCa2c6@a2c3>`l?$<
`Pog8`Pog7`5KU4`5KR2_o'C0_ns:-_SX1+_83t(_83q&^qdb$^q[Y!^V@Ou^:q=q^:q:o]tM+m]tD"j
]Y(ni]=Y\e]=Y\d]"5Ja]",A^\[f8]\@B&Y\@B&X\$riU\$rfS[^NWQ[C*EM[C*EL['[3I['[0GZa7!E
~>
<~i8EPOi8EPOi8EMMhr!>Khr!>JhVR,GhVR,GhVI#Dh;-oCh;-lAgt^]?gt^]?gY:K;gY:K;gY1B8g=k97
g=k96g"G'3g"G'3f\"j/f\"j/f\"g-f@SX+f@SX*f%/F'f%/F'f%&=$e^`4#e^`1!eC<!teC<!te'ldp
e'ldpe'c[mdaHRldaHRkdF$@hdF$@hd*U.dd*U.dd*U+bcd0q`cd0q_cHa_\cHa_\cHXVYc-=MXc-=JV
bfn;Tbfn;TbKJ)PbKJ)PbK@uMb0%lLb0%lKaiVZHaiVZHaN2HDaN2HDaN2EBa2c6@a2c6?`l?$<`l?$<
~>
<~j5]1[j5]1[j5]1[j5T(Xio8tWio8tWio/kTiSibSiSibSiS`YPi8EPOi8EPOi8<GLhr!>Khr!>Khqm5H
hVR,GhVR,GhVR)Eh;-oCh;-oCh;-lAgt^]?gt^]?gt^Z=gY:K;gY:K;gY:H9g=k97g=k97g=k65g"G'3
g"G'3g"G'2f\"j/f\"j/f\"j.f@SX+f@SX+f@SX*f%/F'f%/F'f%/F&e^`4#e^`4#e^`4"eC<!teC<!t
eC<!te'ldpe'ldpe'ldpdaHRldaHRldaHRldF$@hdF$@hdF$@hd*U.dd*U.dd*U.dcd0q`cd0q`cd0q`
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /17 /Gradient get_res exec grestore
}if
np
232.595 177.142 mo
232.662 176.576 li
239.268 161.841 li
239.345 162.067 li
232.595 177.142 li
level3{
gsave
clp
[341.667 0 0 410.001 255.833 -5 ]ct
/18 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.823529 .858823 .87451 ]
/C1 [.682353 .760784 .792157 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /18 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[341.667 0 0 410.001 255.833 -5 ]ct
clp
/18 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~dF$@hdF$@hd*U.dd*U.ccd0q`cd0n^cHa_\cHXVYc-=MXbfn;Tbfn;SbKJ)PbKJ&Nb0%lLb/qcIaiVZH
aN2HDaN2HDa2c6@a2c6?`l?$<`l?!:`Pog8`Pf^5`5KU4_o'C0_o'C/_SX1,_SX.*_83t(_8*k%^qdb$
^V@Ou^V@Ou^:q=q^:q=p]tM+m]tM(k]Y(ni]Xtef]=Y\e]"5Ja]"5J`\[f8]\[f5[\@B&Y\@8rV\$riU
[^NWQ[^NWQ[C*EM[C*EL['[3I['[0GZa7!EZa-mBZEgdAZ*CR=Z*CR<Yct@9Yct=7YHP.5YHG%2Y-+q1
~>
<~g=k97g=k97g=k96g"G'3g"G'3g"=s0f\"j/f\"j.f@SX+f@SX+f@JO(f%/F'f%/F'e^`4#e^`4#e^`1!
eC<!teC<!te'ldpe'ldpe'landaHRldaHRlda?IidF$@hdF$@gd*U.dd*U.dd*L%acd0q`cd0q_cHa_\
cHa_\cHa\Zc-=MXc-=MXbfn;Tbfn;Tbfn8RbKJ)PbKJ)Pb0%lLb0%lLb0%lKaiVZHaiVZHaiMQEaN2HD
aN2HCa2c6@a2c6@a2Z-=`l?$<`l?$<`Pog8`Pog8`Pod6`5KU4`5KU4_o'C0_o'C0_o'@._SX1,_SX1,
~>
<~hVR,GhVR,GhVR,GhVI#Dh;-oCh;-oCh;$f@gt^]?gt^]?gtUT<gY:K;gY:K;gY1B8g=k97g=k97g=b04
g"G'3g"G'3g"G$1f\"j/f\"j/f\"g-f@SX+f@SX+f@SU)f%/F'f%/F'f%/C%e^`4#e^`4#e^`1!eC<!t
eC<!teC<!se'ldpe'ldpe'ldodaHRldaHRldaHRkdF$@hdF$@hdF$@gd*U.dd*U.dd*U.ccd0q`cd0q`
cd0q`cHa_\cHa_\cHa_\c-=MXc-=MXc-=MXbfn;Tbfn;Tbfn;TbKJ)PbKJ)PbKJ)Pb0%lLb0%lLb0%lL
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /18 /Gradient get_res exec grestore
}if
np
357.692 192.376 mo
368.047 169.408 li
371.499 183.747 li
357.692 192.376 li
level3{
gsave
clp
[341.667 0 0 410.001 255.833 -5 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[341.667 0 0 410.001 255.833 -5 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
418.63 262.608 mo
391.706 245.045 li
414.708 247.346 li
418.63 262.608 li
level3{
gsave
clp
[341.667 0 0 410.001 255.833 -5 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[341.667 0 0 410.001 255.833 -5 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
362.67 212.291 mo
354.306 195.363 li
368.445 208.308 li
362.67 212.291 li
level3{
gsave
clp
[341.667 0 0 410.001 255.833 -5 ]ct
/17 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[341.667 0 0 410.001 255.833 -5 ]ct
clp
/17 /Gradient get_res exec grestore
}if
np
355.302 113.25 mo
331.878 112.148 li
347.085 109.758 li
355.302 113.25 li
287.982 110.015 mo
334.06 104.222 li
338.764 106.221 li
287.982 110.015 li
level3{
gsave
clp
[341.667 0 0 410.001 255.833 -5 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[341.667 0 0 410.001 255.833 -5 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
331.878 112.148 mo
287.593 110.064 li
287.982 110.015 li
338.764 106.221 li
347.085 109.758 li
331.878 112.148 li
level3{
gsave
clp
[341.667 0 0 410.001 255.833 -5 ]ct
/7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[341.667 0 0 410.001 255.833 -5 ]ct
clp
/7 /Gradient get_res exec grestore
}if
np
227.759 131.53 mo
227.764 131.491 li
227.858 131.305 li
227.802 131.338 li
231.791 123.453 li
235.694 129.266 li
235.683 129.58 li
227.759 131.53 li
233.712 119.657 mo
236.214 114.71 li
236.047 119.376 li
233.712 119.657 li
level3{
gsave
clp
[341.667 0 0 410.001 255.833 -5 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[341.667 0 0 410.001 255.833 -5 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
227.742 131.534 mo
227.764 131.491 li
227.759 131.53 li
227.742 131.534 li
level3{
gsave
clp
[341.667 0 0 410.001 255.833 -5 ]ct
/14 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[341.667 0 0 410.001 255.833 -5 ]ct
clp
/14 /Gradient get_res exec grestore
}if
np
227.764 131.491 mo
227.778 131.386 li
227.802 131.338 li
227.858 131.305 li
227.764 131.491 li
level3{
gsave
clp
[341.667 0 0 410.001 255.833 -5 ]ct
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[341.667 0 0 410.001 255.833 -5 ]ct
clp
/15 /Gradient get_res exec grestore
}if
np
227.698 131.545 mo
227.778 131.386 li
227.764 131.491 li
227.742 131.534 li
227.698 131.545 li
level3{
gsave
clp
[341.667 0 0 410.001 255.833 -5 ]ct
/19 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.831372 .866667 .882353 ]
/C1 [.686274 .764706 .8 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /19 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[341.667 0 0 410.001 255.833 -5 ]ct
clp
/19 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~e'ldpe'ldodaHRldaHOjdF$@hdEp7ed*U.dcd0q`cd0q_cHa_\cHa\Zc-=MXc-4DUbfn;TbKJ)PbKJ)O
b0%lLb0%iJaiVZHaiMQEaN2HDa2c6@a2c3>`l?$<`l5p9`Pog8`5KU4`5KU3_o'C0_o'@._SX1,_SO()
_83t(^qdb$^qdb#^V@Ou^V@Ls^:q=q^:h4n]tM+m]Y(ni]Y(nh]=Y\e]=PSb]"5Ja\[f8]\[f8\\@B&Y
\@B#W\$riU\$i`R[^NWQ[C*EM[C*EL['[3I['[0GZa7!EZa-mBZEgdAZ*CR=Z*CR<Yct@9Yct=7YHP.5
~>
<~gt^]?gt^]?gt^Z=gY:K;gY:K;g=k97g=k97g=k65g"G'3g"G'3f\"j/f\"j/f\"g-f@SX+f@SX+f%/F'
f%/F'f%&=$e^`4#e^`4"eC<!teC<!teC2mqe'ldpe'ldodaHRldaHRlda?IidF$@hdF$@gd*U.dd*U.d
cd0q`cd0q`cd0n^cHa_\cHa_\c-=MXc-=MXc-=JVbfn;Tbfn;TbKJ)PbKJ)PbKJ&Nb0%lLb0%lLaiVZH
aiVZHaiMQEaN2HDaN2HCa2c6@a2c6@a2Z-=`l?$<`l?$;`Pog8`Pog8`Pf^5`5KU4`5KU3_o'C0_o'C0
~>
<~i8EPOi8EPOi8EPOi8<GLhr!>Khr!>Khqm5HhVR,GhVR,GhVI#Dh;-oCh;-oCh;$f@gt^]?gt^]?gtUT<
gY:K;gY:K;gY:H9g=k97g=k97g=k65g"G'3g"G'3g"G$1f\"j/f\"j/f\"g-f@SX+f@SX+f@SU)f%/F'
f%/F'f%/F&e^`4#e^`4#e^`4"eC<!teC<!teC<!se'ldpe'ldpe'ldodaHRldaHRldaHRkdF$@hdF$@h
dF$@hd*U.dd*U.dd*U.dcd0q`cd0q`cd0q`cHa_\cHa_\cHa_\c-=MXc-=MXc-=MXbfn;Tbfn;Tbfn;T
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /19 /Gradient get_res exec grestore
}if
np
235.694 129.266 mo
231.791 123.453 li
233.712 119.657 li
236.047 119.376 li
235.694 129.266 li
level3{
gsave
clp
[341.667 0 0 410.001 255.833 -5 ]ct
/7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[341.667 0 0 410.001 255.833 -5 ]ct
clp
/7 /Gradient get_res exec grestore
}if
np
247.366 116.303 mo
252.868 110.355 li
261.047 112.11 li
263.043 115.437 li
247.366 116.303 li
266.001 115.273 mo
265.747 113.118 li
273.786 114.843 li
266.001 115.273 li
level3{
gsave
clp
[341.667 0 0 410.001 255.833 -5 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[341.667 0 0 410.001 255.833 -5 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
273.786 114.843 mo
265.747 113.118 li
265.404 110.216 li
273.786 114.843 li
261.047 112.11 mo
252.868 110.355 li
257.191 105.682 li
261.047 112.11 li
level3{
gsave
clp
[341.667 0 0 410.001 255.833 -5 ]ct
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[341.667 0 0 410.001 255.833 -5 ]ct
clp
/15 /Gradient get_res exec grestore
}if
np
263.043 115.437 mo
261.047 112.11 li
265.747 113.118 li
266.001 115.273 li
263.043 115.437 li
level3{
gsave
clp
[341.667 0 0 410.001 255.833 -5 ]ct
/20 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.941176 .952941 .956863 ]
/C1 [.768627 .835294 .858823 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /20 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[341.667 0 0 410.001 255.833 -5 ]ct
clp
/20 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~n*f`6n*f]4mdBN2mHs<.mHs9,m-O**lg*m&lg*j$lK[[!l07Hsl0.?pkih6nkND$kkN:phk2tgfjlPUc
jQ,C_jQ,@]j5]1[io8tWio8qUiSibSi8EPOi8EMMhr!>JhVR,GhVI#Dh;-oBgt^]?gtUT<gY:K:g=k97
g"G'3g"G$1f\"j/f@SX+f@SU)f%/F'e^`4#e^`1!eC<!se'ldpe'c[mdaHRkdF$@hdEp7ed*U.ccd0q`
cHa_\cHa\Zc-=MXbfn;Tbfn8RbKJ)Pb0%lLb0%iJaiVZGaN2HDaN)?Aa2c6?`l?$<`l5p9`Pog7`5KU4
~>
<~o()ABo()ABo'u8?naZ/>naZ,<nF5r:nF5o8n*f`6n*f`5mdBN2mdBN1mHs<.mHs<.m-O**m-O**lg*m&
lg*m&lg!d#lK[["lKRQtl07Hsl07Eqkih6okih3mkND$kkND$jk2tggk2tgfjlPUcjlPUcjQ,C_jQ,C_
j5]1[j5]1[j5T(Xio8tWio8qUiSibSiSi_Qi8EPOi8EPNhr!>Khr!>JhVR,GhVR,Gh;-oCh;-oCgt^]?
gt^]?gtUT<gY:K;gY1B8g=k97g=k65g"G'3g"G$1f\"j/f\"j.f@SX+f@SX*f%/F'f%/F'e^`4#e^`4#
~>
<~oCMSFoCMSFoCMSEo()ABo()ABo'u8?naZ/>naZ/=nF5r:nF5r:nF,i7n*f`6n*f`6mdBN2mdBN2mdBK0
mHs<.mHs<.m-O**m-O**m-O'(lg*m&lg*m&lg!d#lK[["lK[[!l07Hsl07Hsl0.?pkih6okih6nkND$k
kND$kkND!ik2tggk2tggjlPUcjlPUcjlPRajQ,C_jQ,C_j5]1[j5]1[j5]1Zio8tWio8tWio/kTiSibS
iSibRi8EPOi8EPOi8<GLhr!>Khr!>KhVR,GhVR,GhVR)Eh;-oCh;-oCgt^]?gt^]?gt^Z=gY:K;gY:K;
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /20 /Gradient get_res exec grestore
}if
np
265.747 113.118 mo
261.047 112.11 li
257.191 105.682 li
265.404 110.216 li
265.747 113.118 li
level3{
gsave
clp
[341.667 0 0 410.001 255.833 -5 ]ct
/21 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.894118 .917647 .92549 ]
/C1 [.737255 .803922 .835294 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /21 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[341.667 0 0 410.001 255.833 -5 ]ct
clp
/21 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~j5]1[j5]1Zio8tWio/kTiSibSi8EPOi8EMMhr!>KhVR,GhVR,Fh;-oCh;$f@gt^]?gY:K;gY:H9g=k97
g"G'3g"G'2f\"j/f[na,f@SX+f%/F'f%/C%e^`4#eC<!teC<!se'ldpe'c[mdaHRldF$@hdF$=fd*U.d
cd0q`cd0q_cHa_\cHXVYc-=MXbfn;Tbfn8RbKJ)Pb0%lLb0%lKaiVZHaiMQEaN2HDa2c6@a2c3>`l?$<
`Pog8`Pog7`5KU4`5BL1_o'C0_SX1,_SX.*_83t(^qdb$^qdb#^V@Ou^V7Fr^:q=q]tM+m]tM(k]Y(ni
~>
<~l07Hsl07Hsl0.?pkih6okih3mkND$kkND$jk2tggk2tggjlPUcjlPUcjlGL`jQ,C_jQ#:\j5]1[j5].Y
io8tWio8tViSibSiSibSi8EPOi8EPOi8<GLhr!>Khr!;IhVR,GhVR)Eh;-oCh;-oBgt^]?gt^]?gY:K;
gY:K;gY1B8g=k97g=k65g"G'3g"G'2f\"j/f\"j.f@SX+f@SX+f%/F'f%/F'f%&=$e^`4#e^`1!eC<!t
eC<!se'ldpe'ldpdaHRldaHRldF$@hdF$@hdEp7ed*U.dd*U+bcd0q`cd0q_cHa_\cHa_\c-=MXc-=MX
~>
<~lg*m&lg*m&lg*m&lK[["lK[["lK[[!l07Hsl07Hsl07Eqkih6okih6oki_-lkND$kkND$kk2tggk2tgg
k2tgfjlPUcjlPUcjlPRajQ,C_jQ,C_jQ,@]j5]1[j5]1[j5T(Xio8tWio8tWiSibSiSibSiSibRi8EPO
i8EPOi8EMMhr!>Khr!>Khqm5HhVR,GhVR,Gh;-oCh;-oCh;-oBgt^]?gt^]?gt^]>gY:K;gY:K;gY:H9
g=k97g=k97g=b04g"G'3g"G'3f\"j/f\"j/f\"j.f@SX+f@SX+f@SU)f%/F'f%/F'f%&=$e^`4#e^`4#
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /21 /Gradient get_res exec grestore
}if
np
266.75 129.845 mo
261.97 126.526 li
271.263 125.464 li
266.75 129.845 li
level3{
gsave
clp
[341.667 0 0 410.001 255.833 -5 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[341.667 0 0 410.001 255.833 -5 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
329.015 189.455 mo
321.58 175.117 li
338.043 148.299 li
329.015 189.455 li
level3{
gsave
clp
[341.667 0 0 410.001 255.833 -5 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[341.667 0 0 410.001 255.833 -5 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
246.465 182.992 mo
246.166 182.113 li
258.518 164.894 li
261.904 179.83 li
246.465 182.992 li
level3{
gsave
clp
[341.667 0 0 410.001 255.833 -5 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[341.667 0 0 410.001 255.833 -5 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
245.375 183.216 mo
246.166 182.113 li
246.465 182.992 li
245.375 183.216 li
level3{
gsave
clp
[341.667 0 0 410.001 255.833 -5 ]ct
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[341.667 0 0 410.001 255.833 -5 ]ct
clp
/15 /Gradient get_res exec grestore
}if
np
89.2774 126.909 mo
70.4865 146.799 li
85.9792 140.003 li
89.2774 126.909 li
cp
68.8491 147.953 mo
90.0365 125.526 li
86.3175 140.289 li
68.8491 147.953 li
cp
.615686 .733333 .788235 rgb
f
70.1886 147.559 mo
76.8579 156.119 li
101.045 140.193 li
70.1886 147.559 li
cp
76.7254 156.921 mo
69.147 147.194 li
104.212 138.823 li
76.7254 156.921 li
cp
f
67.8146 136.78 mo
69.6874 146.431 li
75.4109 122.311 li
67.8146 136.78 li
cp
69.6482 148.321 mo
67.397 136.718 li
67.4295 136.656 li
76.5291 119.324 li
69.6482 148.321 li
cp
f
90.0178 126.857 mo
96.8571 154.939 li
102.821 139.586 li
90.0178 126.857 li
cp
96.7697 156.264 mo
89.2962 125.578 li
103.286 139.488 li
96.7697 156.264 li
cp
f
89.9566 112.335 mo
68.6916 136.258 li
89.4624 126.091 li
89.9566 112.335 li
cp
67.0508 137.505 mo
90.3941 111.244 li
89.8515 126.344 li
67.0508 137.505 li
cp
f
76.2942 120.792 mo
85.7301 138.711 li
82.694 101.96 li
76.2942 120.792 li
cp
86.5667 141.581 mo
75.6459 120.843 li
83.0531 99.0488 li
86.5667 141.581 li
cp
f
104.381 113.384 mo
90.3345 125.881 li
113.309 121.363 li
104.381 113.384 li
cp
88.9795 126.554 mo
104.381 112.85 li
114.172 121.6 li
88.9795 126.554 li
cp
f
92.1011 127.109 mo
126.542 144.375 li
130.246 136.225 li
92.1011 127.109 li
cp
126.828 145.187 mo
87.213 125.326 li
131.09 135.812 li
126.828 145.187 li
cp
f
102.744 139.438 mo
116.836 151.02 li
125.522 127.084 li
102.744 139.438 li
cp
117.018 151.685 mo
102.034 139.37 li
126.255 126.234 li
117.018 151.685 li
cp
f
121.767 107.249 mo
114.211 121.037 li
129.7 113.67 li
121.767 107.249 li
cp
113.27 121.925 mo
121.647 106.638 li
130.441 113.759 li
113.27 121.925 li
cp
f
86.1642 140.52 mo
77.1441 156.304 li
96.4455 155.419 li
86.1642 140.52 li
cp
76.4392 156.735 mo
86.1325 139.772 li
97.1813 155.784 li
76.4392 156.735 li
cp
f
83.1273 100.53 mo
89.9853 111.13 li
90.2349 93.2982 li
83.1273 100.53 li
cp
90.3653 112.45 mo
82.6197 100.479 li
90.6474 92.3107 li
90.3653 112.45 li
cp
f
74.6671 107.157 mo
89.5966 125.667 li
100.869 102.949 li
74.6671 107.157 li
cp
89.7174 126.768 mo
73.5555 106.73 li
101.919 102.176 li
89.7174 126.768 li
cp
f
63.0826 104.236 mo
89.6653 111.445 li
73.1234 89.5609 li
63.0826 104.236 li
cp
90.6853 112.134 mo
62.4377 104.474 li
73.1077 88.8792 li
90.6853 112.134 li
cp
f
90.5098 111.607 mo
103.957 112.308 li
101.663 92.2332 li
90.5098 111.607 li
cp
104.406 112.731 mo
89.8407 111.972 li
101.922 90.9858 li
104.406 112.731 li
cp
f
114.069 92.9848 mo
120.85 105.676 li
117.025 85.5089 li
114.069 92.9848 li
cp
122.165 109.405 mo
113.412 93.0224 li
117.228 83.3715 li
122.165 109.405 li
cp
f
107.352 87.9705 mo
128.687 92.0166 li
117.1 84.6594 li
107.352 87.9705 li
cp
130.657 92.7957 mo
105.791 88.0796 li
117.153 84.221 li
117.233 84.2723 li
130.657 92.7957 li
cp
f
101.228 101.848 mo
104.228 111.973 li
113.228 93.5978 li
101.228 101.848 li
cp
104.136 113.066 mo
100.764 101.684 li
114.254 92.4095 li
104.136 113.066 li
cp
f
102.508 91.2891 mo
113.756 121.028 li
114.137 93.9582 li
102.508 91.2891 li
cp
114.124 123.129 mo
101.872 90.7349 li
114.539 93.6424 li
114.537 93.8031 li
114.124 123.129 li
cp
f
73.1331 89.4271 mo
57.7437 95.4727 li
89.0725 92.7245 li
73.1331 89.4271 li
cp
55.0313 96.1101 mo
73.098 89.013 li
73.156 89.025 li
91.8098 92.8845 li
55.0313 96.1101 li
cp
f
49.7765 101.216 mo
48.2794 110.01 li
62.1259 104.397 li
49.7765 101.216 li
cp
47.767 110.648 mo
49.4565 100.722 li
63.3943 104.313 li
47.767 110.648 li
cp
f
56.4387 96.0027 mo
50.2156 100.762 li
80.7819 100.335 li
56.4387 96.0027 li
cp
49.0173 101.177 mo
56.3362 95.5801 li
56.4225 95.5952 li
82.9085 100.308 li
82.8764 100.704 li
49.0173 101.177 li
cp
f
90.9032 92.9353 mo
100.839 101.372 li
101.964 91.2479 li
90.9032 92.9353 li
cp
101.152 102.16 mo
89.9791 92.6736 li
102.417 90.7762 li
101.152 102.16 li
cp
f
142.221 102.432 mo
130.578 113.506 li
145.61 113.236 li
142.221 102.432 li
cp
129.562 113.923 mo
142.409 101.703 li
146.149 113.624 li
129.562 113.923 li
cp
f
147.092 78.8163 mo
116.573 92.9824 li
140.2 86.5184 li
147.092 78.8163 li
cp
114.391 93.9923 mo
114.254 93.6194 li
148.678 77.6413 li
140.419 86.8718 li
140.362 86.8872 li
114.391 93.9923 li
cp
f
147.862 78.5533 mo
140.769 86.4801 li
152.868 86.0626 li
147.862 78.5533 li
cp
139.85 86.9101 mo
147.908 77.9042 li
153.595 86.4359 li
139.85 86.9101 li
cp
f
161.715 79.4879 mo
141.624 86.4505 li
153.161 86.0526 li
161.715 79.4879 li
cp
138.995 86.9397 mo
163.909 78.3063 li
153.302 86.446 li
153.238 86.4485 li
138.995 86.9397 li
cp
f
150.287 78.1372 mo
162.782 78.6962 li
171.734 75.526 li
150.287 78.1372 li
cp
162.842 79.0979 mo
162.803 79.0958 li
147.876 78.428 li
147.861 78.0313 li
175.278 74.6935 li
162.842 79.0979 li
cp
f
117.651 84.5373 mo
129.66 92.1628 li
147.095 78.5917 li
117.651 84.5373 li
cp
129.684 92.6495 mo
129.565 92.5741 li
116.602 84.3431 li
148.675 77.8659 li
129.684 92.6495 li
cp
f
129.54 93.0782 mo
122.671 105.599 li
139.297 87.5034 li
129.54 93.0782 li
cp
120.742 108.288 mo
129.245 92.7882 li
141.322 85.8868 li
120.742 108.288 li
cp
f
130.717 92.7953 mo
142.271 101.781 li
152.754 86.5905 li
130.717 92.7953 li
cp
142.359 102.354 mo
129.85 92.6253 li
153.709 85.9081 li
142.359 102.354 li
cp
f
140.549 86.993 mo
142.48 101.796 li
162.003 94.7164 li
140.549 86.993 li
cp
142.149 102.339 mo
140.07 86.3972 li
163.175 94.7148 li
142.149 102.339 li
cp
f
153.391 87.6143 mo
155.438 105.008 li
162.19 94.7765 li
153.391 87.6143 li
cp
155.036 106.702 mo
152.626 86.221 li
162.987 94.6548 li
155.036 106.702 li
cp
f
140.569 86.7039 mo
154.793 104.961 li
147.787 78.6367 li
140.569 86.7039 li
cp
155.681 106.749 mo
140.05 86.6864 li
147.982 77.8208 li
155.681 106.749 li
cp
f
146.031 113.25 mo
159.615 115.131 li
142.688 102.592 li
146.031 113.25 li
cp
161.106 115.739 mo
145.727 113.61 li
141.942 101.544 li
161.106 115.739 li
cp
f
146.953 121.728 mo
154.465 123.149 li
146.141 114.013 li
146.953 121.728 li
cp
155.563 123.762 mo
146.588 122.065 li
145.618 112.847 li
155.563 123.762 li
cp
f
126.278 126.923 mo
131.261 135.243 li
145.54 129.993 li
126.278 126.923 li
cp
131.089 135.73 mo
125.498 126.395 li
147.111 129.84 li
131.089 135.73 li
cp
f
131.253 114.986 mo
146.151 129.469 li
146.564 122.02 li
131.253 114.986 li
cp
146.5 130.364 mo
129.315 113.657 li
146.977 121.772 li
146.5 130.364 li
cp
f
129.832 114.995 mo
103.775 138.426 li
125.726 126.52 li
129.832 114.995 li
cp
101.004 140.382 mo
130.735 113.647 li
126.051 126.798 li
125.983 126.834 li
101.004 140.382 li
cp
f
115 122.272 mo
125.903 126.451 li
144.958 122.105 li
115 122.272 li
cp
125.874 126.866 mo
112.879 121.885 li
148.583 121.687 li
125.874 126.866 li
cp
f
113.94 121.28 mo
130.953 135.924 li
129.886 114.017 li
113.94 121.28 li
cp
131.397 136.831 mo
113.209 121.176 li
130.255 113.412 li
131.397 136.831 li
cp
f
114.247 123.304 mo
117.172 150.828 li
126.29 144.687 li
114.247 123.304 li
cp
116.683 151.878 mo
113.347 120.489 li
127.08 144.874 li
116.683 151.878 li
cp
f
104.958 115.515 mo
110.839 153.051 li
116.675 151.223 li
104.958 115.515 li
cp
110.517 153.569 mo
104.184 113.148 li
104.57 113.055 li
117.179 151.482 li
110.517 153.569 li
cp
f
110.945 153.435 mo
114.664 162.468 li
116.671 151.641 li
110.945 153.435 li
cp
114.809 163.868 mo
110.412 153.185 li
117.183 151.064 li
114.809 163.868 li
cp
f
96.2067 156.489 mo
82.2939 170.403 li
91.4886 167.257 li
96.2067 156.489 li
cp
80.7982 171.335 mo
97.42 154.713 li
91.7827 167.577 li
80.7982 171.335 li
cp
f
70.2511 148.449 mo
75.6167 163.902 li
76.5833 156.577 li
70.2511 148.449 li
cp
75.7917 165.621 mo
69.0844 146.304 li
77 156.463 li
75.7917 165.621 li
cp
f
77.177 157.05 mo
81.6719 170.616 li
91.2107 167.352 li
77.177 157.05 li
cp
81.4202 171.122 mo
76.4063 155.99 li
92.0606 167.482 li
81.4202 171.122 li
cp
f
82.0835 170.896 mo
93.4731 176.095 li
91.4923 167.677 li
82.0835 170.896 li
cp
94.0472 176.795 mo
81.0086 170.842 li
91.779 167.157 li
94.0472 176.795 li
cp
f
105.12 169.196 mo
94.4838 176.206 li
103.428 175.723 li
105.12 169.196 li
cp
93.0365 176.684 mo
105.766 168.293 li
103.741 176.104 li
93.0365 176.684 li
cp
f
103.899 176.265 mo
107.012 186.564 li
108.928 178.421 li
103.899 176.265 li
cp
107.06 188.099 mo
103.27 175.562 li
109.392 178.187 li
107.06 188.099 li
cp
f
93.9385 176.334 mo
105.804 186.063 li
92.0398 168.265 li
93.9385 176.334 li
cp
108.269 188.599 mo
93.5818 176.556 li
91.2315 166.569 li
108.269 188.599 li
cp
f
107.195 187.167 mo
114.441 189.1 li
104.054 176.78 li
107.195 187.167 li
cp
115.562 189.811 mo
106.878 187.495 li
106.845 187.389 li
103.114 175.047 li
115.562 189.811 li
cp
f
102.568 140.522 mo
97.1184 155.349 li
110.353 153.162 li
102.568 140.522 li
cp
96.5084 155.853 mo
102.477 139.614 li
111.003 153.458 li
96.5084 155.853 li
cp
f
174.593 75.431 mo
188.726 84.1652 li
194.118 75.8327 li
174.593 75.431 li
cp
188.91 84.9811 mo
172.418 74.7885 li
195.201 75.2576 li
188.91 84.9811 li
cp
f
164.104 79.0104 mo
175.008 83.9669 li
173.355 75.3826 li
164.104 79.0104 li
cp
175.544 84.6485 mo
163.082 78.9837 li
173.656 74.8369 li
175.544 84.6485 li
cp
f
175.428 84.5011 mo
172.434 94.9819 li
188.404 84.0019 li
175.428 84.5011 li
cp
171.746 95.9377 mo
175.124 84.1144 li
175.269 84.1086 li
189.763 83.5511 li
171.746 95.9377 li
cp
f
172.543 95.7514 mo
178.738 104.424 li
183.942 97.9813 li
172.543 95.7514 li
cp
178.719 105.082 mo
171.637 95.1681 li
184.667 97.7171 li
178.719 105.082 li
cp
f
189.136 84.2406 mo
184.646 97.461 li
194.374 92.7219 li
189.136 84.2406 li
cp
183.962 98.2376 mo
189.031 83.3123 li
194.945 92.887 li
183.962 98.2376 li
cp
f
195.294 75.7289 mo
209.734 85.3556 li
216.067 75.2222 li
195.294 75.7289 li
cp
209.854 85.9147 mo
194.025 75.3614 li
216.797 74.8064 li
209.854 85.9147 li
cp
f
189.637 84.1044 mo
194.766 92.4087 li
208.444 85.0811 li
189.637 84.1044 li
cp
194.553 93.2003 mo
188.53 83.4486 li
210.614 84.596 li
194.553 93.2003 li
cp
f
189.24 83.9357 mo
184.691 97.3301 li
215.271 75.5955 li
189.24 83.9357 li
cp
183.917 98.3684 mo
188.927 83.6173 li
189.023 83.5869 li
217.594 74.4331 li
183.917 98.3684 li
cp
f
73.8726 107.376 mo
76.0329 120.005 li
82.2902 101.387 li
73.8726 107.376 li
cp
75.9071 121.63 mo
73.4376 107.197 li
83.0585 100.352 li
75.9071 121.63 li
cp
f
49.1736 110.064 mo
49.1736 110.809 48.5695 111.413 47.8242 111.413 cv
47.0789 111.413 46.4748 110.809 46.4748 110.064 cv
46.4748 109.318 47.0789 108.714 47.8242 108.714 cv
48.5695 108.714 49.1736 109.318 49.1736 110.064 cv
cp
f
51.0323 101.301 mo
51.0323 102.046 50.4281 102.651 49.6829 102.651 cv
48.9377 102.651 48.3335 102.046 48.3335 101.301 cv
48.3335 100.556 48.9377 99.9519 49.6829 99.9519 cv
50.4281 99.9519 51.0323 100.556 51.0323 101.301 cv
cp
f
64.043 104.753 mo
64.043 105.498 63.4388 106.102 62.6936 106.102 cv
61.9484 106.102 61.3442 105.498 61.3442 104.753 cv
61.3442 104.008 61.9484 103.404 62.6936 103.404 cv
63.4388 103.404 64.043 104.008 64.043 104.753 cv
cp
f
75.1951 107.143 mo
75.1951 107.888 74.5909 108.492 73.8457 108.492 cv
73.1004 108.492 72.4963 107.888 72.4963 107.143 cv
72.4963 106.398 73.1004 105.793 73.8457 105.793 cv
74.5909 105.793 75.1951 106.398 75.1951 107.143 cv
cp
f
77.3192 120.685 mo
77.3192 121.43 76.7151 122.034 75.9699 122.034 cv
75.2246 122.034 74.6205 121.43 74.6205 120.685 cv
74.6205 119.939 75.2246 119.335 75.9699 119.335 cv
76.7151 119.335 77.3192 119.939 77.3192 120.685 cv
cp
.439216 .611765 .694118 rgb
f
91.6576 111.922 mo
91.6576 112.667 91.0535 113.272 90.3082 113.272 cv
89.5629 113.272 88.9588 112.667 88.9588 111.922 cv
88.9588 111.177 89.5629 110.573 90.3082 110.573 cv
91.0535 110.573 91.6576 111.177 91.6576 111.922 cv
cp
.615686 .733333 .788235 rgb
f
122.99 107.408 mo
122.99 108.154 122.385 108.758 121.64 108.758 cv
120.895 108.758 120.291 108.154 120.291 107.408 cv
120.291 106.663 120.895 106.059 121.64 106.059 cv
122.385 106.059 122.99 106.663 122.99 107.408 cv
cp
f
131.619 113.781 mo
131.619 114.526 131.015 115.13 130.27 115.13 cv
129.524 115.13 128.92 114.526 128.92 113.781 cv
128.92 113.036 129.524 112.432 130.27 112.432 cv
131.015 112.432 131.619 113.036 131.619 113.781 cv
cp
f
143.833 102.363 mo
143.833 103.109 143.229 103.713 142.484 103.713 cv
141.739 103.713 141.134 103.109 141.134 102.363 cv
141.134 101.618 141.739 101.014 142.484 101.014 cv
143.229 101.014 143.833 101.618 143.833 102.363 cv
cp
f
102.743 102.164 mo
102.743 102.909 102.139 103.514 101.394 103.514 cv
100.649 103.514 100.044 102.909 100.044 102.164 cv
100.044 101.419 100.649 100.815 101.394 100.815 cv
102.139 100.815 102.743 101.419 102.743 102.164 cv
cp
f
114.891 121.68 mo
114.891 122.426 114.287 123.03 113.542 123.03 cv
112.796 123.03 112.192 122.426 112.192 121.68 cv
112.192 120.935 112.796 120.331 113.542 120.331 cv
114.287 120.331 114.891 120.935 114.891 121.68 cv
cp
f
91.1929 126.261 mo
91.1929 127.006 90.5888 127.61 89.8435 127.61 cv
89.0983 127.61 88.4942 127.006 88.4942 126.261 cv
88.4942 125.515 89.0983 124.911 89.8435 124.911 cv
90.5888 124.911 91.1929 125.515 91.1929 126.261 cv
cp
f
87.6083 140.201 mo
87.6083 140.946 87.0042 141.55 86.259 141.55 cv
85.5137 141.55 84.9096 140.946 84.9096 140.201 cv
84.9096 139.455 85.5137 138.851 86.259 138.851 cv
87.0042 138.851 87.6083 139.455 87.6083 140.201 cv
cp
f
103.938 139.603 mo
103.938 140.348 103.334 140.953 102.589 140.953 cv
101.843 140.953 101.239 140.348 101.239 139.603 cv
101.239 138.858 101.843 138.254 102.589 138.254 cv
103.334 138.254 103.938 138.858 103.938 139.603 cv
cp
f
147.551 130.044 mo
147.551 130.79 146.946 131.394 146.201 131.394 cv
145.456 131.394 144.852 130.79 144.852 130.044 cv
144.852 129.299 145.456 128.695 146.201 128.695 cv
146.946 128.695 147.551 129.299 147.551 130.044 cv
cp
f
148.148 122.079 mo
148.148 122.824 147.544 123.428 146.799 123.428 cv
146.053 123.428 145.449 122.824 145.449 122.079 cv
145.449 121.333 146.053 120.729 146.799 120.729 cv
147.544 120.729 148.148 121.333 148.148 122.079 cv
cp
f
155.915 123.871 mo
155.915 124.616 155.31 125.22 154.565 125.22 cv
153.82 125.22 153.216 124.616 153.216 123.871 cv
153.216 123.126 153.82 122.521 154.565 122.521 cv
155.31 122.521 155.915 123.126 155.915 123.871 cv
cp
f
161.747 115.669 mo
161.747 116.414 161.143 117.018 160.398 117.018 cv
159.653 117.018 159.048 116.414 159.048 115.669 cv
159.048 114.923 159.653 114.319 160.398 114.319 cv
161.143 114.319 161.747 114.923 161.747 115.669 cv
cp
f
156.407 105.437 mo
156.407 106.182 155.802 106.786 155.057 106.786 cv
154.312 106.786 153.708 106.182 153.708 105.437 cv
153.708 104.691 154.312 104.087 155.057 104.087 cv
155.802 104.087 156.407 104.691 156.407 105.437 cv
cp
f
147.351 113.715 mo
147.351 114.46 146.747 115.064 146.002 115.064 cv
145.257 115.064 144.653 114.46 144.653 113.715 cv
144.653 112.969 145.257 112.365 146.002 112.365 cv
146.747 112.365 147.351 112.969 147.351 113.715 cv
cp
f
105.73 112.918 mo
105.73 113.663 105.126 114.267 104.381 114.267 cv
103.636 114.267 103.032 113.663 103.032 112.918 cv
103.032 112.173 103.636 111.569 104.381 111.569 cv
105.126 111.569 105.73 112.173 105.73 112.918 cv
cp
f
127.238 126.659 mo
127.238 127.404 126.634 128.008 125.889 128.008 cv
125.143 128.008 124.539 127.404 124.539 126.659 cv
124.539 125.914 125.143 125.309 125.889 125.309 cv
126.634 125.309 127.238 125.914 127.238 126.659 cv
cp
f
84.2229 100.77 mo
84.2229 101.515 83.6188 102.12 82.8735 102.12 cv
82.1282 102.12 81.5241 101.515 81.5241 100.77 cv
81.5241 100.025 82.1282 99.4208 82.8735 99.4208 cv
83.6188 99.4208 84.2229 100.025 84.2229 100.77 cv
cp
f
57.9359 96.2563 mo
57.9359 97.0015 57.3318 97.6056 56.5866 97.6056 cv
55.8413 97.6056 55.2372 97.0015 55.2372 96.2563 cv
55.2372 95.511 55.8413 94.9069 56.5866 94.9069 cv
57.3318 94.9069 57.9359 95.511 57.9359 96.2563 cv
cp
f
74.3984 89.6181 mo
74.3984 90.3634 73.7943 90.9675 73.0491 90.9675 cv
72.3038 90.9675 71.6997 90.3634 71.6997 89.6181 cv
71.6997 88.8729 72.3038 88.2687 73.0491 88.2687 cv
73.7943 88.2687 74.3984 88.8729 74.3984 89.6181 cv
cp
f
91.9231 93.07 mo
91.9231 93.8152 91.3189 94.4193 90.5738 94.4193 cv
89.8285 94.4193 89.2243 93.8152 89.2243 93.07 cv
89.2243 92.3247 89.8285 91.7206 90.5738 91.7206 cv
91.3189 91.7206 91.9231 92.3247 91.9231 93.07 cv
cp
f
103.606 91.2113 mo
103.606 91.9565 103.002 92.5607 102.257 92.5607 cv
101.512 92.5607 100.907 91.9565 100.907 91.2113 cv
100.907 90.4661 101.512 89.8619 102.257 89.8619 cv
103.002 89.8619 103.606 90.4661 103.606 91.2113 cv
cp
f
115.555 93.601 mo
115.555 94.3463 114.951 94.9504 114.205 94.9504 cv
113.46 94.9504 112.856 94.3463 112.856 93.601 cv
112.856 92.8558 113.46 92.2517 114.205 92.2517 cv
114.951 92.2517 115.555 92.8558 115.555 93.601 cv
cp
.439216 .611765 .694118 rgb
f
108.386 88.025 mo
108.386 88.7702 107.781 89.3744 107.036 89.3744 cv
106.291 89.3744 105.687 88.7702 105.687 88.025 cv
105.687 87.2798 106.291 86.6756 107.036 86.6756 cv
107.781 86.6756 108.386 87.2798 108.386 88.025 cv
cp
.615686 .733333 .788235 rgb
f
118.476 84.8387 mo
118.476 85.5839 117.871 86.188 117.126 86.188 cv
116.381 86.188 115.777 85.5839 115.777 84.8387 cv
115.777 84.0935 116.381 83.4893 117.126 83.4893 cv
117.871 83.4893 118.476 84.0935 118.476 84.8387 cv
cp
f
131.221 92.8044 mo
131.221 93.5497 130.617 94.1539 129.871 94.1539 cv
129.126 94.1539 128.522 93.5497 128.522 92.8044 cv
128.522 92.0592 129.126 91.455 129.871 91.455 cv
130.617 91.455 131.221 92.0592 131.221 92.8044 cv
cp
f
141.975 86.631 mo
141.975 87.3763 141.37 87.9804 140.625 87.9804 cv
139.88 87.9804 139.276 87.3763 139.276 86.631 cv
139.276 85.8857 139.88 85.2816 140.625 85.2816 cv
141.37 85.2816 141.975 85.8857 141.975 86.631 cv
cp
f
154.591 86.6579 mo
154.591 87.4031 153.987 88.0072 153.242 88.0072 cv
152.497 88.0072 151.892 87.4031 151.892 86.6579 cv
151.892 85.9126 152.497 85.3085 153.242 85.3085 cv
153.987 85.3085 154.591 85.9126 154.591 86.6579 cv
cp
.439216 .611765 .694118 rgb
f
164.079 94.995 mo
164.079 95.7403 163.475 96.3444 162.73 96.3444 cv
161.985 96.3444 161.381 95.7403 161.381 94.995 cv
161.381 94.2498 161.985 93.6456 162.73 93.6456 cv
163.475 93.6456 164.079 94.2498 164.079 94.995 cv
cp
.615686 .733333 .788235 rgb
f
149.144 78.6653 mo
149.144 79.4105 148.54 80.0146 147.794 80.0146 cv
147.049 80.0146 146.445 79.4105 146.445 78.6653 cv
146.445 77.92 147.049 77.3159 147.794 77.3159 cv
148.54 77.3159 149.144 77.92 149.144 78.6653 cv
cp
f
174.833 75.479 mo
174.833 76.2242 174.229 76.8284 173.484 76.8284 cv
172.739 76.8284 172.135 76.2242 172.135 75.479 cv
172.135 74.7337 172.739 74.1296 173.484 74.1296 cv
174.229 74.1296 174.833 74.7337 174.833 75.479 cv
cp
f
164.677 79.0635 mo
164.677 79.8088 164.073 80.4129 163.328 80.4129 cv
162.582 80.4129 161.978 79.8088 161.978 79.0635 cv
161.978 78.3183 162.582 77.7142 163.328 77.7142 cv
164.073 77.7142 164.677 78.3183 164.677 79.0635 cv
cp
f
176.825 84.4404 mo
176.825 85.1857 176.221 85.7898 175.475 85.7898 cv
174.73 85.7898 174.126 85.1857 174.126 84.4404 cv
174.126 83.6951 174.73 83.091 175.475 83.091 cv
176.221 83.091 176.825 83.6951 176.825 84.4404 cv
cp
f
173.357 95.6604 mo
173.357 96.4057 172.752 97.0098 172.007 97.0098 cv
171.262 97.0098 170.658 96.4057 170.658 95.6604 cv
170.658 94.9153 171.262 94.3111 172.007 94.3111 cv
172.752 94.3111 173.357 94.9153 173.357 95.6604 cv
cp
f
179.977 105.26 mo
179.977 106.005 179.373 106.609 178.628 106.609 cv
177.882 106.609 177.278 106.005 177.278 105.26 cv
177.278 104.514 177.882 103.91 178.628 103.91 cv
179.373 103.91 179.977 104.514 179.977 105.26 cv
cp
.439216 .611765 .694118 rgb
f
185.942 98.1696 mo
185.942 98.9148 185.338 99.519 184.593 99.519 cv
183.848 99.519 183.244 98.9148 183.244 98.1696 cv
183.244 97.4244 183.848 96.8202 184.593 96.8202 cv
185.338 96.8202 185.942 97.4244 185.942 98.1696 cv
cp
.615686 .733333 .788235 rgb
f
196.142 93.4018 mo
196.142 94.1471 195.537 94.7513 194.792 94.7513 cv
194.047 94.7513 193.443 94.1471 193.443 93.4018 cv
193.443 92.6567 194.047 92.0525 194.792 92.0525 cv
195.537 92.0525 196.142 92.6567 196.142 93.4018 cv
cp
f
211.077 85.237 mo
211.077 85.9822 210.473 86.5864 209.728 86.5864 cv
208.983 86.5864 208.379 85.9822 208.379 85.237 cv
208.379 84.4918 208.983 83.8876 209.728 83.8876 cv
210.473 83.8876 211.077 84.4918 211.077 85.237 cv
cp
f
217.661 75.4502 mo
217.661 76.1954 217.057 76.7995 216.312 76.7995 cv
215.567 76.7995 214.963 76.1954 214.963 75.4502 cv
214.963 74.7049 215.567 74.1008 216.312 74.1008 cv
217.057 74.1008 217.661 74.7049 217.661 75.4502 cv
cp
f
195.942 75.6781 mo
195.942 76.4233 195.338 77.0275 194.593 77.0275 cv
193.848 77.0275 193.244 76.4233 193.244 75.6781 cv
193.244 74.9329 193.848 74.3287 194.593 74.3287 cv
195.338 74.3287 195.942 74.9329 195.942 75.6781 cv
cp
f
190.566 84.0422 mo
190.566 84.7874 189.961 85.3915 189.216 85.3915 cv
188.471 85.3915 187.867 84.7874 187.867 84.0422 cv
187.867 83.2969 188.471 82.6928 189.216 82.6928 cv
189.961 82.6928 190.566 83.2969 190.566 84.0422 cv
cp
f
69.0879 136.882 mo
69.0879 137.627 68.4838 138.231 67.7386 138.231 cv
66.9933 138.231 66.3892 137.627 66.3892 136.882 cv
66.3892 136.136 66.9933 135.532 67.7386 135.532 cv
68.4838 135.532 69.0879 136.136 69.0879 136.882 cv
cp
f
71.2121 147.503 mo
71.2121 148.248 70.608 148.852 69.8628 148.852 cv
69.1175 148.852 68.5134 148.248 68.5134 147.503 cv
68.5134 146.757 69.1175 146.153 69.8628 146.153 cv
70.608 146.153 71.2121 146.757 71.2121 147.503 cv
cp
f
77.0537 164.762 mo
77.0537 165.507 76.4496 166.111 75.7043 166.111 cv
74.9591 166.111 74.3549 165.507 74.3549 164.762 cv
74.3549 164.016 74.9591 163.412 75.7043 163.412 cv
76.4496 163.412 77.0537 164.016 77.0537 164.762 cv
cp
f
78.1158 156.53 mo
78.1158 157.276 77.5117 157.88 76.7664 157.88 cv
76.0212 157.88 75.417 157.276 75.417 156.53 cv
75.417 155.785 76.0212 155.181 76.7664 155.181 cv
77.5117 155.181 78.1158 155.785 78.1158 156.53 cv
cp
f
83.1608 170.869 mo
83.1608 171.614 82.5567 172.218 81.8114 172.218 cv
81.0661 172.218 80.462 171.614 80.462 170.869 cv
80.462 170.123 81.0661 169.519 81.8114 169.519 cv
82.5567 169.519 83.1608 170.123 83.1608 170.869 cv
cp
f
95.1094 176.445 mo
95.1094 177.19 94.5052 177.794 93.7601 177.794 cv
93.0148 177.794 92.4107 177.19 92.4107 176.445 cv
92.4107 175.7 93.0148 175.095 93.7601 175.095 cv
94.5052 175.095 95.1094 175.7 95.1094 176.445 cv
cp
f
106.925 169.076 mo
106.925 169.822 106.321 170.426 105.576 170.426 cv
104.831 170.426 104.226 169.822 104.226 169.076 cv
104.226 168.331 104.831 167.727 105.576 167.727 cv
106.321 167.727 106.925 168.331 106.925 169.076 cv
cp
f
105.133 176.046 mo
105.133 176.792 104.529 177.396 103.784 177.396 cv
103.038 177.396 102.434 176.792 102.434 176.046 cv
102.434 175.301 103.038 174.697 103.784 174.697 cv
104.529 174.697 105.133 175.301 105.133 176.046 cv
cp
f
110.908 178.635 mo
110.908 179.381 110.304 179.985 109.559 179.985 cv
108.814 179.985 108.209 179.381 108.209 178.635 cv
108.209 177.89 108.814 177.286 109.559 177.286 cv
110.304 177.286 110.908 177.89 110.908 178.635 cv
cp
f
108.12 187.398 mo
108.12 188.143 107.516 188.747 106.771 188.747 cv
106.025 188.747 105.421 188.143 105.421 187.398 cv
105.421 186.652 106.025 186.048 106.771 186.048 cv
107.516 186.048 108.12 186.652 108.12 187.398 cv
cp
f
116.285 189.787 mo
116.285 190.533 115.681 191.137 114.936 191.137 cv
114.19 191.137 113.586 190.533 113.586 189.787 cv
113.586 189.042 114.19 188.438 114.936 188.438 cv
115.681 188.438 116.285 189.042 116.285 189.787 cv
cp
f
93.2507 167.151 mo
93.2507 167.897 92.6466 168.501 91.9013 168.501 cv
91.1561 168.501 90.552 167.897 90.552 167.151 cv
90.552 166.406 91.1561 165.802 91.9013 165.802 cv
92.6466 165.802 93.2507 166.406 93.2507 167.151 cv
cp
f
98.2957 155.734 mo
98.2957 156.479 97.6916 157.083 96.9463 157.083 cv
96.2011 157.083 95.597 156.479 95.597 155.734 cv
95.597 154.989 96.2011 154.384 96.9463 154.384 cv
97.6916 154.384 98.2957 154.989 98.2957 155.734 cv
cp
f
111.837 153.344 mo
111.837 154.089 111.233 154.693 110.488 154.693 cv
109.743 154.693 109.139 154.089 109.139 153.344 cv
109.139 152.599 109.743 151.995 110.488 151.995 cv
111.233 151.995 111.837 152.599 111.837 153.344 cv
cp
f
116.351 162.637 mo
116.351 163.383 115.747 163.987 115.002 163.987 cv
114.257 163.987 113.653 163.383 113.653 162.637 cv
113.653 161.892 114.257 161.288 115.002 161.288 cv
115.747 161.288 116.351 161.892 116.351 162.637 cv
cp
f
118.21 151.485 mo
118.21 152.231 117.606 152.835 116.861 152.835 cv
116.115 152.835 115.511 152.231 115.511 151.485 cv
115.511 150.74 116.115 150.136 116.861 150.136 cv
117.606 150.136 118.21 150.74 118.21 151.485 cv
cp
f
128.034 144.847 mo
128.034 145.593 127.43 146.197 126.685 146.197 cv
125.94 146.197 125.336 145.593 125.336 144.847 cv
125.336 144.102 125.94 143.498 126.685 143.498 cv
127.43 143.498 128.034 144.102 128.034 144.847 cv
cp
f
132.283 136.085 mo
132.283 136.83 131.679 137.434 130.933 137.434 cv
130.188 137.434 129.584 136.83 129.584 136.085 cv
129.584 135.34 130.188 134.736 130.933 134.736 cv
131.679 134.736 132.283 135.34 132.283 136.085 cv
cp
f
64.043 104.753 mo
64.043 105.498 63.4388 106.102 62.6936 106.102 cv
61.9484 106.102 61.3442 105.498 61.3442 104.753 cv
61.3442 104.008 61.9484 103.404 62.6936 103.404 cv
63.4388 103.404 64.043 104.008 64.043 104.753 cv
cp
.517647 .666667 .733333 rgb
f
91.6576 111.922 mo
91.6576 112.667 91.0535 113.272 90.3082 113.272 cv
89.5629 113.272 88.9588 112.667 88.9588 111.922 cv
88.9588 111.177 89.5629 110.573 90.3082 110.573 cv
91.0535 110.573 91.6576 111.177 91.6576 111.922 cv
cp
f
131.619 113.781 mo
131.619 114.526 131.015 115.13 130.27 115.13 cv
129.524 115.13 128.92 114.526 128.92 113.781 cv
128.92 113.036 129.524 112.432 130.27 112.432 cv
131.015 112.432 131.619 113.036 131.619 113.781 cv
cp
f
143.833 102.363 mo
143.833 103.109 143.229 103.713 142.484 103.713 cv
141.739 103.713 141.134 103.109 141.134 102.363 cv
141.134 101.618 141.739 101.014 142.484 101.014 cv
143.229 101.014 143.833 101.618 143.833 102.363 cv
cp
f
91.1929 126.261 mo
91.1929 127.006 90.5888 127.61 89.8435 127.61 cv
89.0983 127.61 88.4942 127.006 88.4942 126.261 cv
88.4942 125.515 89.0983 124.911 89.8435 124.911 cv
90.5888 124.911 91.1929 125.515 91.1929 126.261 cv
cp
f
103.938 139.603 mo
103.938 140.348 103.334 140.953 102.589 140.953 cv
101.843 140.953 101.239 140.348 101.239 139.603 cv
101.239 138.858 101.843 138.254 102.589 138.254 cv
103.334 138.254 103.938 138.858 103.938 139.603 cv
cp
f
161.747 115.669 mo
161.747 116.414 161.143 117.018 160.398 117.018 cv
159.653 117.018 159.048 116.414 159.048 115.669 cv
159.048 114.923 159.653 114.319 160.398 114.319 cv
161.143 114.319 161.747 114.923 161.747 115.669 cv
cp
f
156.407 105.437 mo
156.407 106.182 155.802 106.786 155.057 106.786 cv
154.312 106.786 153.708 106.182 153.708 105.437 cv
153.708 104.691 154.312 104.087 155.057 104.087 cv
155.802 104.087 156.407 104.691 156.407 105.437 cv
cp
f
105.73 112.918 mo
105.73 113.663 105.126 114.267 104.381 114.267 cv
103.636 114.267 103.032 113.663 103.032 112.918 cv
103.032 112.173 103.636 111.569 104.381 111.569 cv
105.126 111.569 105.73 112.173 105.73 112.918 cv
cp
f
91.9231 93.07 mo
91.9231 93.8152 91.3189 94.4193 90.5738 94.4193 cv
89.8285 94.4193 89.2243 93.8152 89.2243 93.07 cv
89.2243 92.3247 89.8285 91.7206 90.5738 91.7206 cv
91.3189 91.7206 91.9231 92.3247 91.9231 93.07 cv
cp
f
118.476 84.8387 mo
118.476 85.5839 117.871 86.188 117.126 86.188 cv
116.381 86.188 115.777 85.5839 115.777 84.8387 cv
115.777 84.0935 116.381 83.4893 117.126 83.4893 cv
117.871 83.4893 118.476 84.0935 118.476 84.8387 cv
cp
f
131.221 92.8044 mo
131.221 93.5497 130.617 94.1539 129.871 94.1539 cv
129.126 94.1539 128.522 93.5497 128.522 92.8044 cv
128.522 92.0592 129.126 91.455 129.871 91.455 cv
130.617 91.455 131.221 92.0592 131.221 92.8044 cv
cp
f
176.825 84.4404 mo
176.825 85.1857 176.221 85.7898 175.475 85.7898 cv
174.73 85.7898 174.126 85.1857 174.126 84.4404 cv
174.126 83.6951 174.73 83.091 175.475 83.091 cv
176.221 83.091 176.825 83.6951 176.825 84.4404 cv
cp
f
196.142 93.4018 mo
196.142 94.1471 195.537 94.7513 194.792 94.7513 cv
194.047 94.7513 193.443 94.1471 193.443 93.4018 cv
193.443 92.6567 194.047 92.0525 194.792 92.0525 cv
195.537 92.0525 196.142 92.6567 196.142 93.4018 cv
cp
f
217.661 75.4502 mo
217.661 76.1954 217.057 76.7995 216.312 76.7995 cv
215.567 76.7995 214.963 76.1954 214.963 75.4502 cv
214.963 74.7049 215.567 74.1008 216.312 74.1008 cv
217.057 74.1008 217.661 74.7049 217.661 75.4502 cv
cp
f
190.566 84.0422 mo
190.566 84.7874 189.961 85.3915 189.216 85.3915 cv
188.471 85.3915 187.867 84.7874 187.867 84.0422 cv
187.867 83.2969 188.471 82.6928 189.216 82.6928 cv
189.961 82.6928 190.566 83.2969 190.566 84.0422 cv
cp
f
77.0537 164.762 mo
77.0537 165.507 76.4496 166.111 75.7043 166.111 cv
74.9591 166.111 74.3549 165.507 74.3549 164.762 cv
74.3549 164.016 74.9591 163.412 75.7043 163.412 cv
76.4496 163.412 77.0537 164.016 77.0537 164.762 cv
cp
f
78.1158 156.53 mo
78.1158 157.276 77.5117 157.88 76.7664 157.88 cv
76.0212 157.88 75.417 157.276 75.417 156.53 cv
75.417 155.785 76.0212 155.181 76.7664 155.181 cv
77.5117 155.181 78.1158 155.785 78.1158 156.53 cv
cp
f
106.925 169.076 mo
106.925 169.822 106.321 170.426 105.576 170.426 cv
104.831 170.426 104.226 169.822 104.226 169.076 cv
104.226 168.331 104.831 167.727 105.576 167.727 cv
106.321 167.727 106.925 168.331 106.925 169.076 cv
cp
f
105.133 176.046 mo
105.133 176.792 104.529 177.396 103.784 177.396 cv
103.038 177.396 102.434 176.792 102.434 176.046 cv
102.434 175.301 103.038 174.697 103.784 174.697 cv
104.529 174.697 105.133 175.301 105.133 176.046 cv
cp
f
98.2957 155.734 mo
98.2957 156.479 97.6916 157.083 96.9463 157.083 cv
96.2011 157.083 95.597 156.479 95.597 155.734 cv
95.597 154.989 96.2011 154.384 96.9463 154.384 cv
97.6916 154.384 98.2957 154.989 98.2957 155.734 cv
cp
f
128.034 144.847 mo
128.034 145.593 127.43 146.197 126.685 146.197 cv
125.94 146.197 125.336 145.593 125.336 144.847 cv
125.336 144.102 125.94 143.498 126.685 143.498 cv
127.43 143.498 128.034 144.102 128.034 144.847 cv
cp
f
63.1022 104.711 mo
104.114 112.744 li
90.5307 93.2174 li
63.1022 104.711 li
cp
104.648 113.092 mo
104.358 113.035 li
62.2847 104.795 li
90.6165 92.9224 li
90.6715 93.0016 li
104.648 113.092 li
cp
f
90.0807 126.397 mo
102.422 139.128 li
104.241 113.212 li
90.0807 126.397 li
cp
102.623 139.679 mo
89.7391 126.389 li
104.521 112.624 li
102.623 139.679 li
cp
f
103.005 139.698 mo
126.54 144.769 li
90.6519 112.262 li
103.005 139.698 li
cp
127.361 145.191 mo
126.926 145.097 li
102.836 139.906 li
102.812 139.851 li
89.9645 111.317 li
90.3886 111.701 li
127.361 145.191 li
cp
f
129.996 93.264 mo
130.518 113.352 li
154.779 105.395 li
129.996 93.264 li
cp
130.287 113.679 mo
129.747 92.8757 li
155.413 105.439 li
130.287 113.679 li
cp
f
143.055 102.498 mo
160.558 115.216 li
155.018 105.52 li
143.055 102.498 li
cp
161.318 116.063 mo
141.912 101.963 li
155.174 105.314 li
155.2 105.358 li
161.318 116.063 li
cp
f
117.546 85.051 mo
130.573 113.841 li
142.297 102.247 li
117.546 85.051 li
cp
130.497 114.252 mo
116.971 84.361 li
117.327 84.6077 li
142.67 102.215 li
142.568 102.316 li
130.497 114.252 li
cp
f
129.746 93.3119 mo
105.741 112.226 li
141.81 102.11 li
129.746 93.3119 li
cp
103.021 113.61 mo
129.732 92.5628 li
143.157 102.352 li
103.021 113.61 li
cp
f
189.131 83.7144 mo
194.823 93.2861 li
215.779 75.6943 li
189.131 83.7144 li
cp
194.762 93.6502 mo
188.77 83.5735 li
188.916 83.5294 li
216.821 75.131 li
194.762 93.6502 li
cp
f
76.7988 165.245 mo
103.457 176.023 li
105.189 169.191 li
76.7988 165.245 li
cp
103.621 176.347 mo
74.918 164.742 li
105.486 168.991 li
103.621 176.347 li
cp
f
76.8716 156.646 mo
75.8492 164.57 li
96.2992 155.879 li
76.8716 156.646 li
cp
75.5592 164.953 mo
76.6608 156.415 li
76.7617 156.411 li
97.5933 155.589 li
75.5592 164.953 li
cp
f
89.8899 126.481 mo
75.8946 164.471 li
102.469 139.507 li
89.8899 126.481 li
cp
75.3204 165.338 mo
89.7974 126.041 li
89.9294 126.178 li
102.809 139.516 li
75.3204 165.338 li
cp
f
118.242 190.042 mo
116.723 197.637 li
135.736 186.599 li
125.409 183.703 li
118.242 190.042 li
cp
116.159 198.426 mo
117.878 189.833 li
117.928 189.788 li
125.307 183.26 li
125.411 183.29 li
136.751 186.47 li
116.159 198.426 li
cp
.615686 .733333 .788235 rgb
f
118.563 189.915 mo
128.107 193.509 li
125.256 183.842 li
118.563 189.915 li
cp
128.715 194.164 mo
117.813 190.058 li
125.459 183.12 li
128.715 194.164 li
cp
f
116.85 197.901 mo
124.47 204.771 li
128.093 194.153 li
116.85 197.901 li
cp
124.652 205.471 mo
116.076 197.739 li
128.729 193.521 li
124.652 205.471 li
cp
f
128.899 193.654 mo
143.706 194.151 li
136.24 186.81 li
128.899 193.654 li
cp
144.714 194.583 mo
127.923 194.02 li
136.248 186.259 li
144.714 194.583 li
cp
f
144.434 194.567 mo
145.386 202.787 li
149.08 194.567 li
144.434 194.567 li
cp
145.157 204.269 mo
143.986 194.168 li
149.695 194.168 li
145.157 204.269 li
cp
f
124.674 205.57 mo
120.368 227.103 li
132.654 215.197 li
124.674 205.57 li
cp
119.726 228.28 mo
124.448 204.672 li
133.196 215.227 li
119.726 228.28 li
cp
f
111.613 210.55 mo
119.551 226.066 li
116.304 199.004 li
111.613 210.55 li
cp
120.543 229.316 mo
110.956 210.579 li
116.621 196.636 li
120.543 229.316 li
cp
f
125.042 204.85 mo
151.782 221.111 li
145.138 203.735 li
125.042 204.85 li
cp
152.569 222.056 mo
123.739 204.524 li
145.406 203.321 li
145.458 203.457 li
152.569 222.056 li
cp
f
133.356 215.564 mo
140.367 227.834 li
151.679 221.629 li
133.356 215.564 li
cp
140.215 228.37 mo
140.118 228.201 li
132.494 214.859 li
152.672 221.539 li
140.215 228.37 li
cp
f
120.634 227.902 mo
127.775 233.567 li
139.41 228.284 li
120.634 227.902 li
cp
127.719 234.03 mo
119.46 227.48 li
141.172 227.92 li
127.719 234.03 li
cp
f
149.677 195.237 mo
152.216 220.027 li
154.756 203.702 li
149.677 195.237 li
cp
152.135 223.141 mo
149.098 193.498 li
155.171 203.621 li
155.16 203.692 li
152.135 223.141 li
cp
f
155.619 204.418 mo
163.982 223.617 li
163.039 209.011 li
155.619 204.418 li
cp
164.797 226.985 mo
154.308 202.905 li
163.616 208.666 li
164.797 226.985 li
cp
f
171.567 211.767 mo
164.863 224.815 li
175.277 219.112 li
171.567 211.767 li
cp
163.916 225.788 mo
171.57 210.889 li
175.806 219.277 li
163.916 225.788 li
cp
f
163.634 209.139 mo
170.105 229.049 li
171.358 211.473 li
163.634 209.139 li
cp
170.358 231.114 mo
163.02 208.538 li
171.778 211.183 li
170.358 231.114 li
cp
f
174.967 219.917 mo
155.442 235.783 li
170.086 229.924 li
174.967 219.917 li
cp
153.158 237.124 mo
176.116 218.471 li
170.377 230.238 li
170.305 230.266 li
153.158 237.124 li
cp
f
169.695 230.738 mo
159.083 246.506 li
167.199 240.564 li
169.695 230.738 li
cp
157.482 248.173 mo
170.646 228.611 li
167.55 240.801 li
157.482 248.173 li
cp
f
152.417 221.866 mo
154.437 236.005 li
164.031 225.4 li
152.417 221.866 li
cp
154.163 236.902 mo
151.934 221.302 li
164.748 225.202 li
154.163 236.902 li
cp
f
154.257 236.917 mo
142.913 256.075 li
158.038 247.251 li
154.257 236.917 li
cp
141.789 257.192 mo
154.342 235.99 li
158.527 247.428 li
158.383 247.511 li
141.789 257.192 li
cp
f
142.922 257.083 mo
150.046 266.909 li
153.731 261.503 li
142.922 257.083 li
cp
150.056 267.6 mo
141.78 256.184 li
154.337 261.322 li
150.056 267.6 li
cp
f
139.158 244.182 mo
153.947 261.012 li
158.027 247.497 li
139.158 244.182 li
cp
154.121 261.813 mo
138.11 243.594 li
158.538 247.182 li
154.121 261.813 li
cp
f
140.456 228.433 mo
138.869 243.556 li
153.877 236.433 li
140.456 228.433 li
cp
138.399 244.22 mo
140.125 227.771 li
154.722 236.473 li
138.399 244.22 li
cp
f
128.001 234.305 mo
130.021 253.501 li
138.357 243.903 li
128.001 234.305 li
cp
129.721 254.454 mo
127.493 233.292 li
138.91 243.873 li
129.721 254.454 li
cp
f
130.17 254.347 mo
130.17 266.608 li
141.695 256.799 li
130.17 254.347 li
cp
129.572 267.901 mo
129.572 253.609 li
143.007 256.468 li
129.572 267.901 li
cp
f
130.244 267.818 mo
135.798 286.752 li
142.867 278.168 li
130.244 267.818 li
cp
135.628 287.586 mo
129.498 266.691 li
143.428 278.113 li
135.628 287.586 li
cp
f
142.574 257.281 mo
143.323 277.493 li
149.811 267.262 li
142.574 257.281 li
cp
142.972 278.789 mo
142.128 255.986 li
150.292 267.247 li
150.22 267.361 li
142.972 278.789 li
cp
f
136.501 287.423 mo
148.235 294.699 li
143.307 287.892 li
136.501 287.423 li
cp
149.743 296.102 mo
134.926 286.915 li
143.52 287.507 li
143.574 287.583 li
149.743 296.102 li
cp
f
131.992 258.458 mo
143.068 286.04 li
142.851 278.222 li
131.992 258.458 li
cp
143.758 289.36 mo
129.594 254.089 li
130.133 253.834 li
143.444 278.06 li
143.758 289.36 li
cp
f
111.134 166.923 mo
121.851 170.076 li
115.143 162.964 li
111.134 166.923 li
cp
123.151 170.874 mo
110.373 167.114 li
115.153 162.394 li
123.151 170.874 li
cp
f
122.42 170.238 mo
128.065 172.086 li
116.467 163.977 li
122.42 170.238 li
cp
130.5 173.301 mo
122.166 170.549 li
113.449 161.381 li
130.5 173.301 li
cp
f
130.823 172.86 mo
130.823 173.605 130.218 174.21 129.473 174.21 cv
128.728 174.21 128.124 173.605 128.124 172.86 cv
128.124 172.115 128.728 171.511 129.473 171.511 cv
130.218 171.511 130.823 172.115 130.823 172.86 cv
cp
f
123.919 170.603 mo
123.919 171.348 123.315 171.953 122.57 171.953 cv
121.824 171.953 121.22 171.348 121.22 170.603 cv
121.22 169.858 121.824 169.254 122.57 169.254 cv
123.315 169.254 123.919 169.858 123.919 170.603 cv
cp
f
112.103 167.019 mo
112.103 167.764 111.499 168.368 110.754 168.368 cv
110.008 168.368 109.404 167.764 109.404 167.019 cv
109.404 166.273 110.008 165.669 110.754 165.669 cv
111.499 165.669 112.103 166.273 112.103 167.019 cv
cp
.439216 .611765 .694118 rgb
f
126.707 183.481 mo
126.707 184.226 126.103 184.831 125.357 184.831 cv
124.612 184.831 124.008 184.226 124.008 183.481 cv
124.008 182.736 124.612 182.132 125.357 182.132 cv
126.103 182.132 126.707 182.736 126.707 183.481 cv
cp
.615686 .733333 .788235 rgb
f
119.538 189.987 mo
119.538 190.732 118.934 191.336 118.188 191.336 cv
117.443 191.336 116.839 190.732 116.839 189.987 cv
116.839 189.241 117.443 188.637 118.188 188.637 cv
118.934 188.637 119.538 189.241 119.538 189.987 cv
cp
f
117.812 197.82 mo
117.812 198.565 117.208 199.169 116.462 199.169 cv
115.717 199.169 115.113 198.565 115.113 197.82 cv
115.113 197.074 115.717 196.47 116.462 196.47 cv
117.208 196.47 117.812 197.074 117.812 197.82 cv
cp
.439216 .611765 .694118 rgb
f
112.634 210.565 mo
112.634 211.31 112.03 211.914 111.285 211.914 cv
110.539 211.914 109.935 211.31 109.935 210.565 cv
109.935 209.819 110.539 209.215 111.285 209.215 cv
112.03 209.215 112.634 209.819 112.634 210.565 cv
cp
.615686 .733333 .788235 rgb
f
125.91 205.121 mo
125.91 205.867 125.306 206.471 124.561 206.471 cv
123.816 206.471 123.212 205.867 123.212 205.121 cv
123.212 204.376 123.816 203.772 124.561 203.772 cv
125.306 203.772 125.91 204.376 125.91 205.121 cv
cp
f
129.76 193.837 mo
129.76 194.582 129.156 195.186 128.411 195.186 cv
127.666 195.186 127.062 194.582 127.062 193.837 cv
127.062 193.091 127.666 192.487 128.411 192.487 cv
129.156 192.487 129.76 193.091 129.76 193.837 cv
cp
f
137.593 186.535 mo
137.593 187.28 136.989 187.884 136.244 187.884 cv
135.499 187.884 134.895 187.28 134.895 186.535 cv
134.895 185.789 135.499 185.185 136.244 185.185 cv
136.989 185.185 137.593 185.789 137.593 186.535 cv
cp
f
145.559 194.368 mo
145.559 195.113 144.955 195.717 144.21 195.717 cv
143.465 195.717 142.86 195.113 142.86 194.368 cv
142.86 193.622 143.465 193.018 144.21 193.018 cv
144.955 193.018 145.559 193.622 145.559 194.368 cv
cp
f
150.737 194.368 mo
150.737 195.113 150.133 195.717 149.388 195.717 cv
148.642 195.717 148.038 195.113 148.038 194.368 cv
148.038 193.622 148.642 193.018 149.388 193.018 cv
150.133 193.018 150.737 193.622 150.737 194.368 cv
cp
f
156.313 203.661 mo
156.313 204.406 155.709 205.01 154.963 205.01 cv
154.218 205.01 153.614 204.406 153.614 203.661 cv
153.614 202.916 154.218 202.312 154.963 202.312 cv
155.709 202.312 156.313 202.916 156.313 203.661 cv
cp
f
146.621 203.528 mo
146.621 204.274 146.017 204.878 145.272 204.878 cv
144.527 204.878 143.922 204.274 143.922 203.528 cv
143.922 202.783 144.527 202.179 145.272 202.179 cv
146.017 202.179 146.621 202.783 146.621 203.528 cv
cp
f
134.274 215.211 mo
134.274 215.957 133.67 216.561 132.925 216.561 cv
132.18 216.561 131.576 215.957 131.576 215.211 cv
131.576 214.466 132.18 213.862 132.925 213.862 cv
133.67 213.862 134.274 214.466 134.274 215.211 cv
cp
f
121.396 227.691 mo
121.396 228.436 120.792 229.04 120.047 229.04 cv
119.302 229.04 118.698 228.436 118.698 227.691 cv
118.698 226.946 119.302 226.342 120.047 226.342 cv
120.792 226.342 121.396 226.946 121.396 227.691 cv
cp
f
129.097 233.798 mo
129.097 234.543 128.492 235.148 127.747 235.148 cv
127.002 235.148 126.398 234.543 126.398 233.798 cv
126.398 233.053 127.002 232.449 127.747 232.449 cv
128.492 232.449 129.097 233.053 129.097 233.798 cv
cp
.439216 .611765 .694118 rgb
f
141.842 228.488 mo
141.842 229.233 141.238 229.837 140.492 229.837 cv
139.747 229.837 139.143 229.233 139.143 228.488 cv
139.143 227.742 139.747 227.138 140.492 227.138 cv
141.238 227.138 141.842 227.742 141.842 228.488 cv
cp
.615686 .733333 .788235 rgb
f
153.525 221.584 mo
153.525 222.329 152.921 222.933 152.176 222.933 cv
151.43 222.933 150.826 222.329 150.826 221.584 cv
150.826 220.839 151.43 220.235 152.176 220.235 cv
152.921 220.235 153.525 220.839 153.525 221.584 cv
cp
f
164.677 208.839 mo
164.677 209.584 164.073 210.188 163.328 210.188 cv
162.582 210.188 161.978 209.584 161.978 208.839 cv
161.978 208.094 162.582 207.489 163.328 207.489 cv
164.073 207.489 164.677 208.094 164.677 208.839 cv
cp
f
172.908 211.76 mo
172.908 212.505 172.304 213.109 171.559 213.109 cv
170.814 213.109 170.209 212.505 170.209 211.76 cv
170.209 211.014 170.814 210.41 171.559 210.41 cv
172.304 210.41 172.908 211.014 172.908 211.76 cv
cp
f
176.891 219.194 mo
176.891 219.94 176.287 220.544 175.542 220.544 cv
174.796 220.544 174.192 219.94 174.192 219.194 cv
174.192 218.449 174.796 217.845 175.542 217.845 cv
176.287 217.845 176.891 218.449 176.891 219.194 cv
cp
f
165.739 225.301 mo
165.739 226.047 165.135 226.651 164.39 226.651 cv
163.644 226.651 163.04 226.047 163.04 225.301 cv
163.04 224.556 163.644 223.952 164.39 223.952 cv
165.135 223.952 165.739 224.556 165.739 225.301 cv
cp
f
171.581 230.081 mo
171.581 230.826 170.976 231.43 170.231 231.43 cv
169.486 231.43 168.882 230.826 168.882 230.081 cv
168.882 229.336 169.486 228.731 170.231 228.731 cv
170.976 228.731 171.581 229.336 171.581 230.081 cv
cp
f
168.925 240.702 mo
168.925 241.447 168.321 242.051 167.576 242.051 cv
166.831 242.051 166.227 241.447 166.227 240.702 cv
166.227 239.957 166.831 239.352 167.576 239.352 cv
168.321 239.352 168.925 239.957 168.925 240.702 cv
cp
f
155.649 236.453 mo
155.649 237.199 155.045 237.803 154.3 237.803 cv
153.554 237.803 152.95 237.199 152.95 236.453 cv
152.95 235.708 153.554 235.104 154.3 235.104 cv
155.045 235.104 155.649 235.708 155.649 236.453 cv
cp
f
159.632 247.34 mo
159.632 248.085 159.028 248.689 158.283 248.689 cv
157.537 248.689 156.933 248.085 156.933 247.34 cv
156.933 246.595 157.537 245.991 158.283 245.991 cv
159.028 245.991 159.632 246.595 159.632 247.34 cv
cp
f
139.983 243.888 mo
139.983 244.633 139.379 245.237 138.634 245.237 cv
137.888 245.237 137.284 244.633 137.284 243.888 cv
137.284 243.143 137.888 242.539 138.634 242.539 cv
139.379 242.539 139.983 243.143 139.983 243.888 cv
cp
f
131.221 253.978 mo
131.221 254.723 130.617 255.327 129.871 255.327 cv
129.126 255.327 128.522 254.723 128.522 253.978 cv
128.522 253.233 129.126 252.629 129.871 252.629 cv
130.617 252.629 131.221 253.233 131.221 253.978 cv
cp
f
143.7 256.633 mo
143.7 257.378 143.096 257.983 142.351 257.983 cv
141.606 257.983 141.002 257.378 141.002 256.633 cv
141.002 255.888 141.606 255.284 142.351 255.284 cv
143.096 255.284 143.7 255.888 143.7 256.633 cv
cp
f
155.384 261.413 mo
155.384 262.158 154.779 262.762 154.034 262.762 cv
153.289 262.762 152.685 262.158 152.685 261.413 cv
152.685 260.667 153.289 260.063 154.034 260.063 cv
154.779 260.063 155.384 260.667 155.384 261.413 cv
cp
.439216 .611765 .694118 rgb
f
151.401 267.254 mo
151.401 267.999 150.797 268.604 150.051 268.604 cv
149.306 268.604 148.702 267.999 148.702 267.254 cv
148.702 266.509 149.306 265.905 150.051 265.905 cv
150.797 265.905 151.401 266.509 151.401 267.254 cv
cp
.615686 .733333 .788235 rgb
f
131.221 267.254 mo
131.221 267.999 130.617 268.604 129.871 268.604 cv
129.126 268.604 128.522 267.999 128.522 267.254 cv
128.522 266.509 129.126 265.905 129.871 265.905 cv
130.617 265.905 131.221 266.509 131.221 267.254 cv
cp
f
144.497 278.141 mo
144.497 278.886 143.893 279.49 143.148 279.49 cv
142.402 279.49 141.798 278.886 141.798 278.141 cv
141.798 277.396 142.402 276.791 143.148 276.791 cv
143.893 276.791 144.497 277.396 144.497 278.141 cv
cp
f
137.062 287.169 mo
137.062 287.914 136.458 288.518 135.713 288.518 cv
134.968 288.518 134.364 287.914 134.364 287.169 cv
134.364 286.423 134.968 285.819 135.713 285.819 cv
136.458 285.819 137.062 286.423 137.062 287.169 cv
cp
f
144.763 287.7 mo
144.763 288.445 144.158 289.049 143.413 289.049 cv
142.668 289.049 142.064 288.445 142.064 287.7 cv
142.064 286.954 142.668 286.35 143.413 286.35 cv
144.158 286.35 144.763 286.954 144.763 287.7 cv
cp
f
150.339 295.4 mo
150.339 296.145 149.734 296.749 148.989 296.749 cv
148.244 296.749 147.64 296.145 147.64 295.4 cv
147.64 294.655 148.244 294.05 148.989 294.05 cv
149.734 294.05 150.339 294.655 150.339 295.4 cv
cp
f
128.806 194.302 mo
132.991 214.659 li
144.752 203.463 li
128.806 194.302 li
cp
132.622 215.834 mo
127.955 193.124 li
145.744 203.343 li
132.622 215.834 li
cp
.517647 .666667 .733333 rgb
f
128.441 194.325 mo
120.287 227.535 li
151.842 221.39 li
128.441 194.325 li
cp
119.966 227.841 mo
120.01 227.66 li
128.32 193.819 li
128.471 193.994 li
152.292 221.545 li
152.09 221.585 li
119.966 227.841 li
cp
f
152.203 221.573 mo
154.309 236.313 li
175.249 219.116 li
152.203 221.573 li
cp
154.132 236.768 mo
151.931 221.361 li
152.055 221.348 li
176.019 218.794 li
154.132 236.768 li
cp
f
138.917 243.616 mo
142.259 255.949 li
151.711 222.292 li
138.917 243.616 li
cp
142.255 256.848 mo
138.66 243.581 li
138.686 243.536 li
152.423 220.642 li
142.255 256.848 li
cp
f
138.948 243.656 mo
149.969 266.753 li
154.072 236.739 li
138.948 243.656 li
cp
150.098 267.578 mo
138.628 243.54 li
138.739 243.49 li
154.368 236.341 li
154.339 236.556 li
150.098 267.578 li
cp
f
142.388 256.376 mo
149.931 266.82 li
152.132 222.559 li
142.388 256.376 li
cp
150.136 267.511 mo
142.127 256.421 li
142.142 256.365 li
152.473 220.512 li
150.136 267.511 li
cp
f
120.361 227.625 mo
153.823 236.313 li
132.806 215.415 li
120.361 227.625 li
cp
154.618 236.767 mo
119.892 227.75 li
120.042 227.603 li
132.807 215.078 li
154.618 236.767 li
cp
f
145.592 204.009 mo
152.381 221.406 li
175.219 218.881 li
145.592 204.009 li
cp
152.225 221.665 mo
152.192 221.579 li
145.143 203.515 li
145.421 203.656 li
176.049 219.029 li
175.647 219.074 li
152.225 221.665 li
cp
f
129.76 193.837 mo
129.76 194.582 129.156 195.186 128.411 195.186 cv
127.666 195.186 127.062 194.582 127.062 193.837 cv
127.062 193.091 127.666 192.487 128.411 192.487 cv
129.156 192.487 129.76 193.091 129.76 193.837 cv
cp
f
146.621 203.528 mo
146.621 204.274 146.017 204.878 145.272 204.878 cv
144.527 204.878 143.922 204.274 143.922 203.528 cv
143.922 202.783 144.527 202.179 145.272 202.179 cv
146.017 202.179 146.621 202.783 146.621 203.528 cv
cp
.439216 .611765 .694118 rgb
f
134.274 215.211 mo
134.274 215.957 133.67 216.561 132.925 216.561 cv
132.18 216.561 131.576 215.957 131.576 215.211 cv
131.576 214.466 132.18 213.862 132.925 213.862 cv
133.67 213.862 134.274 214.466 134.274 215.211 cv
cp
.517647 .666667 .733333 rgb
f
121.396 227.691 mo
121.396 228.436 120.792 229.04 120.047 229.04 cv
119.302 229.04 118.698 228.436 118.698 227.691 cv
118.698 226.946 119.302 226.342 120.047 226.342 cv
120.792 226.342 121.396 226.946 121.396 227.691 cv
cp
f
153.525 221.584 mo
153.525 222.329 152.921 222.933 152.176 222.933 cv
151.43 222.933 150.826 222.329 150.826 221.584 cv
150.826 220.839 151.43 220.235 152.176 220.235 cv
152.921 220.235 153.525 220.839 153.525 221.584 cv
cp
f
176.891 219.194 mo
176.891 219.94 176.287 220.544 175.542 220.544 cv
174.796 220.544 174.192 219.94 174.192 219.194 cv
174.192 218.449 174.796 217.845 175.542 217.845 cv
176.287 217.845 176.891 218.449 176.891 219.194 cv
cp
f
155.649 236.453 mo
155.649 237.199 155.045 237.803 154.3 237.803 cv
153.554 237.803 152.95 237.199 152.95 236.453 cv
152.95 235.708 153.554 235.104 154.3 235.104 cv
155.045 235.104 155.649 235.708 155.649 236.453 cv
cp
f
139.983 243.888 mo
139.983 244.633 139.379 245.237 138.634 245.237 cv
137.888 245.237 137.284 244.633 137.284 243.888 cv
137.284 243.143 137.888 242.539 138.634 242.539 cv
139.379 242.539 139.983 243.143 139.983 243.888 cv
cp
f
143.7 256.633 mo
143.7 257.378 143.096 257.983 142.351 257.983 cv
141.606 257.983 141.002 257.378 141.002 256.633 cv
141.002 255.888 141.606 255.284 142.351 255.284 cv
143.096 255.284 143.7 255.888 143.7 256.633 cv
cp
f
151.401 267.254 mo
151.401 267.999 150.797 268.604 150.051 268.604 cv
149.306 268.604 148.702 267.999 148.702 267.254 cv
148.702 266.509 149.306 265.905 150.051 265.905 cv
150.797 265.905 151.401 266.509 151.401 267.254 cv
cp
f
137.062 287.169 mo
137.062 287.914 136.458 288.518 135.713 288.518 cv
134.968 288.518 134.364 287.914 134.364 287.169 cv
134.364 286.423 134.968 285.819 135.713 285.819 cv
136.458 285.819 137.062 286.423 137.062 287.169 cv
cp
f
126.108 126.817 mo
130.989 135.934 li
145.757 130.091 li
126.108 126.817 li
cp
130.879 136.235 mo
125.668 126.501 li
146.645 129.997 li
130.879 136.235 li
cp
.239216 .372549 .435294 rgb
f
125.841 126.822 mo
103.184 139.409 li
130.746 135.988 li
125.841 126.822 li
cp
101.993 139.797 mo
125.936 126.496 li
131.121 136.182 li
130.948 136.204 li
101.993 139.797 li
cp
f
70.1127 147.565 mo
91.8523 166.948 li
102.394 139.773 li
70.1127 147.565 li
cp
91.9506 167.355 mo
91.8219 167.241 li
69.6128 147.44 li
69.8348 147.386 li
102.783 139.433 li
102.7 139.646 li
91.9506 167.355 li
cp
f
104.325 113.786 mo
102.718 139.452 li
145.791 130.012 li
104.325 113.786 li
cp
102.459 139.754 mo
104.106 113.444 li
104.259 113.504 li
146.611 130.077 li
146.226 130.161 li
102.459 139.754 li
cp
f
91.9852 167.065 mo
102.82 175.176 li
69.9528 139.464 li
91.9852 167.065 li
cp
103.712 176.142 mo
91.8081 167.226 li
67.6453 136.956 li
67.8266 136.801 li
103.871 175.966 li
103.712 176.142 li
cp
f
102.818 139.776 mo
115.013 162.405 li
126.546 145.03 li
102.818 139.776 li
cp
114.991 162.87 mo
114.897 162.694 li
102.359 139.43 li
102.614 139.486 li
126.938 144.872 li
126.841 145.017 li
114.991 162.87 li
cp
f
121.77 107.421 mo
130.794 135.267 li
129.762 93.2407 li
121.77 107.421 li
cp
131.073 136.903 mo
121.51 107.396 li
129.98 92.3682 li
129.991 92.8015 li
131.073 136.903 li
cp
f
83.4789 100.995 mo
125.712 126.413 li
121.541 107.513 li
83.4789 100.995 li
cp
126.065 126.905 mo
125.827 126.761 li
82.2681 100.545 li
121.74 107.304 li
121.757 107.383 li
126.065 126.905 li
cp
f
83.5851 100.771 mo
121.577 107.276 li
129.644 92.964 li
83.5851 100.771 li
cp
121.703 107.541 mo
82.1618 100.77 li
82.8535 100.652 li
130.098 92.6449 li
121.703 107.541 li
cp
f
57.8753 96.5989 mo
103.092 113.078 li
82.831 100.885 li
57.8753 96.5989 li
cp
104.175 113.727 mo
56.5458 96.3685 li
56.6071 96.1385 li
82.9352 100.668 li
104.277 113.512 li
104.175 113.727 li
cp
f
154.695 106.09 mo
131.302 135.811 li
146.107 129.953 li
154.695 106.09 li
cp
130.566 136.359 mo
130.84 136.011 li
155.419 104.783 li
146.295 130.135 li
146.245 130.156 li
130.566 136.359 li
cp
f
68.5128 136.867 mo
126.616 144.813 li
125.776 126.8 li
68.5128 136.867 li
cp
126.868 145.089 mo
126.726 145.069 li
66.9646 136.896 li
67.7179 136.764 li
126.001 126.518 li
126.868 145.089 li
cp
f
67.9128 136.775 mo
102.386 139.467 li
82.8839 101.055 li
67.9128 136.775 li
cp
102.791 139.739 mo
102.579 139.722 li
67.5645 136.988 li
67.6287 136.835 li
82.8631 100.486 li
82.9802 100.716 li
102.791 139.739 li
cp
f
104.871 114.323 mo
126.721 144.716 li
130.786 136.117 li
104.871 114.323 li
cp
126.763 145.185 mo
126.645 145.02 li
103.56 112.907 li
131.081 136.053 li
131.042 136.136 li
126.763 145.185 li
cp
f
117.524 131.38 mo
130.719 135.885 li
124.861 122.112 li
117.524 131.38 li
cp
131.148 136.284 mo
117.127 131.497 li
124.924 121.648 li
131.148 136.284 li
cp
f
189.178 84.2119 mo
172.466 95.4952 li
194.594 93.3015 li
189.178 84.2119 li
cp
171.548 95.826 mo
189.254 83.8727 li
194.991 93.5024 li
194.804 93.5207 li
171.548 95.826 li
cp
f
129.97 92.9878 mo
126.039 126.401 li
154.828 105.455 li
129.97 92.9878 li
cp
125.738 126.916 mo
125.77 126.645 li
129.772 92.6212 li
129.925 92.6978 li
155.286 105.418 li
125.738 126.916 li
cp
f
128.471 194.091 mo
120.208 227.539 li
151.95 221.505 li
128.471 194.091 li
cp
119.886 227.844 mo
119.931 227.663 li
128.35 193.583 li
128.502 193.759 li
152.4 221.663 li
152.198 221.701 li
119.886 227.844 li
cp
f
152.413 222.07 mo
158.358 247.139 li
167.403 240.678 li
152.413 222.07 li
cp
158.207 247.54 mo
158.166 247.367 li
151.937 221.098 li
167.748 240.725 li
167.646 240.799 li
158.207 247.54 li
cp
f
130.195 254.295 mo
149.946 267.373 li
152.037 222.002 li
130.195 254.295 li
cp
150.165 267.805 mo
149.99 267.689 li
129.862 254.362 li
129.929 254.262 li
152.314 221.166 li
150.165 267.805 li
cp
f
151.496 235.714 mo
166.57 240.272 li
138.983 224.749 li
151.496 235.714 li
cp
168.582 241.131 mo
151.358 235.911 li
137.095 223.412 li
168.582 241.131 li
cp
f
144.401 234.119 mo
157.746 246.671 li
151.36 235.924 li
144.401 234.119 li
cp
158.819 248.008 mo
143.557 233.654 li
151.515 235.718 li
151.54 235.76 li
158.819 248.008 li
cp
f
138.418 224.334 mo
158.198 247.06 li
160.146 231.621 li
138.418 224.334 li
cp
158.368 247.62 mo
158.193 247.418 li
137.661 223.827 li
160.408 231.456 li
160.395 231.554 li
158.368 247.62 li
cp
f
129.771 253.9 mo
150 267.408 li
158.086 247.506 li
129.771 253.9 li
cp
150.111 267.77 mo
149.99 267.688 li
129.175 253.79 li
129.447 253.729 li
158.479 247.173 li
150.111 267.77 li
cp
f
120.599 227.84 mo
157.958 247.038 li
147.061 229.267 li
120.599 227.84 li
cp
158.608 247.641 mo
119.495 227.542 li
147.2 229.035 li
147.232 229.089 li
158.608 247.641 li
cp
f
163.617 227.165 mo
136.328 286.386 li
150.475 266.934 li
163.617 227.165 li
cp
135.81 287.504 mo
135.605 287.384 li
164.287 225.14 li
164.509 225.227 li
150.679 267.059 li
135.81 287.504 li
cp
f
152.341 221.757 mo
155.165 233.31 li
164.156 225.244 li
152.341 221.757 li
cp
155.027 233.755 mo
152.01 221.411 li
152.209 221.469 li
164.634 225.136 li
155.027 233.755 li
cp
f
138.128 223.965 mo
163.794 224.949 li
128.655 194.209 li
138.128 223.965 li
cp
164.46 225.214 mo
164.122 225.2 li
137.951 224.196 li
137.925 224.117 li
128.167 193.465 li
164.46 225.214 li
cp
f
144.076 234.036 mo
136.086 285.798 li
151.287 235.905 li
144.076 234.036 li
cp
135.827 287.469 mo
135.595 287.416 li
143.881 233.738 li
151.587 235.737 li
151.551 235.856 li
135.827 287.469 li
cp
f
220.461 108.016 mo
212.989 117.638 li
220.221 115.229 li
220.461 108.016 li
cp
211.869 118.431 mo
220.901 106.801 li
220.61 115.519 li
211.869 118.431 li
cp
.615686 .733333 .788235 rgb
f
220.618 115.227 mo
225.685 116.743 li
220.767 107.977 li
220.618 115.227 li
cp
226.514 117.407 mo
220.214 115.521 li
220.399 106.507 li
226.514 117.407 li
cp
f
220.589 115.637 mo
220.176 119.714 li
225.772 117.266 li
220.589 115.637 li
cp
219.711 120.352 mo
220.242 115.111 li
226.906 117.204 li
219.711 120.352 li
cp
f
220.068 124.249 mo
227.862 131.218 li
229.061 120.352 li
220.068 124.249 li
cp
228.173 132.031 mo
219.339 124.131 li
229.532 119.714 li
228.173 132.031 li
cp
f
213.502 131.992 mo
222.823 140.722 li
222.157 132.14 li
213.502 131.992 li
cp
223.3 141.714 mo
212.475 131.577 li
222.526 131.749 li
223.3 141.714 li
cp
f
213.177 131.982 mo
212.734 140.11 li
221.896 131.908 li
213.177 131.982 li
cp
212.284 141.047 mo
212.8 131.587 li
222.948 131.501 li
212.284 141.047 li
cp
f
227.368 131.833 mo
213.233 140.374 li
223.098 140.3 li
227.368 131.833 li
cp
211.785 140.783 mo
228.347 130.777 li
223.344 140.697 li
211.785 140.783 li
cp
f
226.201 117.501 mo
227.712 129.998 li
229.085 120.11 li
226.201 117.501 li
cp
227.684 133.091 mo
225.677 116.49 li
229.509 119.956 li
227.684 133.091 li
cp
f
229.634 120.025 mo
240.852 127.858 li
236.121 115.033 li
229.634 120.025 li
cp
241.666 128.911 mo
228.96 120.041 li
236.307 114.387 li
241.666 128.911 li
cp
f
236.183 129.305 mo
241.799 135.876 li
241.082 128.229 li
236.183 129.305 li
cp
242.313 137.09 mo
235.448 129.058 li
241.436 127.743 li
242.313 137.09 li
cp
f
241.951 136.169 mo
240.9 141.66 li
246.625 136.636 li
241.951 136.169 li
cp
240.291 142.725 mo
241.629 135.736 li
247.577 136.331 li
240.291 142.725 li
cp
f
235.983 115.609 mo
228.071 131.248 li
235.489 129.422 li
235.983 115.609 li
cp
227.325 131.842 mo
236.445 113.812 li
235.877 129.737 li
227.325 131.842 li
cp
f
230.169 103.938 mo
237.247 106.989 li
238.223 99.6667 li
230.169 103.938 li
cp
237.572 107.563 mo
229.249 103.975 li
238.72 98.9526 li
237.572 107.563 li
cp
f
246.032 91.3804 mo
238.983 99.0471 li
251.226 97.5635 li
246.032 91.3804 li
cp
237.959 99.5721 mo
246.045 90.777 li
252.004 97.8701 li
237.959 99.5721 li
cp
f
237.757 107.271 mo
243.063 110.89 li
243.304 103.292 li
237.757 107.271 li
cp
243.438 111.627 mo
237.062 107.28 li
243.728 102.497 li
243.438 111.627 li
cp
f
246.208 91.7154 mo
243.961 102.242 li
251.294 97.3926 li
246.208 91.7154 li
cp
243.071 103.547 mo
245.869 90.4421 li
252.201 97.5093 li
243.071 103.547 li
cp
f
252.261 97.3593 mo
264.183 99.9679 li
261.203 91.6466 li
252.261 97.3593 li
cp
264.802 100.51 mo
251.234 97.5426 li
261.409 91.042 li
264.802 100.51 li
cp
f
246.491 91.2853 mo
251.785 97.1943 li
261.018 91.5316 li
246.491 91.2853 li
cp
251.71 97.7076 mo
245.586 90.8721 li
262.391 91.1566 li
251.71 97.7076 li
cp
f
249.363 103.946 mo
256.887 105.645 li
251.791 97.8797 li
249.363 103.946 li
cp
257.76 106.251 mo
248.82 104.232 li
251.704 97.0222 li
257.76 106.251 li
cp
f
257.762 105.854 mo
266.975 108.188 li
264.395 100.572 li
257.762 105.854 li
cp
267.587 108.753 mo
256.885 106.043 li
264.59 99.9067 li
267.587 108.753 li
cp
f
243.279 103.657 mo
236.775 114.182 li
242.924 110.871 li
243.279 103.657 li
cp
235.654 115.238 mo
243.753 102.132 li
243.311 111.115 li
235.654 115.238 li
cp
f
247.27 116.548 mo
258.226 118.271 li
250.471 110.27 li
247.27 116.548 li
cp
259.341 118.85 mo
246.666 116.856 li
250.369 109.592 li
259.341 118.85 li
cp
f
257.165 105.953 mo
258.917 118.093 li
266.927 108.581 li
257.165 105.953 li
cp
258.65 119.028 mo
256.685 105.411 li
267.635 108.36 li
258.65 119.028 li
cp
f
250.619 109.777 mo
250.619 124.346 li
256.568 106.134 li
250.619 109.777 li
cp
250.221 126.848 mo
250.221 109.554 li
257.283 105.23 li
250.221 126.848 li
cp
f
236.929 115.014 mo
249.535 124.804 li
247.21 116.482 li
236.929 115.014 li
cp
250.243 125.858 mo
235.499 114.407 li
247.523 116.125 li
250.243 125.858 li
cp
f
241.677 128.066 mo
250.324 134.983 li
249.706 125.596 li
241.677 128.066 li
cp
250.781 135.859 mo
240.841 127.907 li
250.072 125.067 li
250.087 125.318 li
250.781 135.859 li
cp
f
251.048 135.998 mo
251.993 141.904 li
256.01 135.525 li
251.048 135.998 li
cp
251.766 143.011 mo
250.588 135.641 li
256.778 135.052 li
251.766 143.011 li
cp
f
250.283 125.57 mo
256.391 134.921 li
261.629 126.692 li
250.283 125.57 li
cp
256.396 135.656 mo
249.495 125.092 li
262.312 126.36 li
256.396 135.656 li
cp
f
273.433 115.217 mo
262.509 126.264 li
271.101 125.282 li
273.433 115.217 li
cp
261.431 126.788 mo
274.138 113.937 li
271.426 125.646 li
261.431 126.788 li
cp
f
259.013 118.598 mo
261.942 125.918 li
266.822 109.324 li
259.013 118.598 li
cp
261.999 127.134 mo
258.555 118.523 li
267.739 107.617 li
261.999 127.134 li
cp
f
262.518 126.664 mo
266.728 129.588 li
270.705 125.728 li
262.518 126.664 li
cp
266.77 130.102 mo
261.423 126.388 li
271.821 125.2 li
266.77 130.102 li
cp
f
256.817 135.582 mo
259.426 142.817 li
266.069 135.463 li
256.817 135.582 li
cp
259.203 143.957 mo
255.97 134.995 li
267.429 134.848 li
259.203 143.957 li
cp
f
267.561 135.082 mo
270.147 142.351 li
277.293 134.836 li
267.561 135.082 li
cp
269.989 143.095 mo
267.001 134.698 li
278.245 134.413 li
269.989 143.095 li
cp
f
271.788 125.859 mo
277.764 134.273 li
281.178 129.151 li
271.788 125.859 li
cp
277.774 134.976 mo
270.738 125.069 li
281.794 128.946 li
277.774 134.976 li
cp
f
267.079 135.775 mo
259.834 143.142 li
269.78 142.283 li
267.079 135.775 li
cp
258.794 143.632 mo
267.216 135.067 li
270.356 142.633 li
258.794 143.632 li
cp
f
270.235 142.832 mo
269.495 151.105 li
278.755 149.253 li
270.235 142.832 li
cp
269.05 151.6 mo
269.901 142.083 li
279.704 149.47 li
269.05 151.6 li
cp
f
274.265 114.63 mo
290.487 124.262 li
287.446 110.321 li
274.265 114.63 li
cp
291.072 125.072 mo
273.306 114.524 li
287.741 109.805 li
291.072 125.072 li
cp
f
267.652 108.3 mo
287.239 109.836 li
278.277 93.7053 li
267.652 108.3 li
cp
287.948 110.291 mo
266.91 108.641 li
278.322 92.9661 li
287.948 110.291 li
cp
f
294.646 94.2773 mo
288.132 109.562 li
309.931 102.045 li
294.646 94.2773 li
cp
287.055 110.565 mo
294.348 93.4557 li
311.457 102.151 li
287.055 110.565 li
cp
f
288.242 110.618 mo
306.043 142.711 li
304.038 116.385 li
288.242 110.618 li
cp
306.847 145.391 mo
286.944 109.508 li
304.604 115.956 li
304.618 116.148 li
306.847 145.391 li
cp
f
293.731 86.901 mo
280.351 92.6683 li
301.804 87.8242 li
293.731 86.901 li
cp
278.344 93.5298 mo
278.22 93.1528 li
293.671 86.4934 li
293.723 86.4993 li
304.183 87.6951 li
278.344 93.5298 li
cp
f
294.776 93.6732 mo
308.84 100.82 li
294.085 87.448 li
294.776 93.6732 li
cp
312.548 103.375 mo
294.218 94.0598 li
293.316 85.9464 li
312.548 103.375 li
cp
f
303.267 87.848 mo
310.567 101.44 li
312.581 83.3169 li
303.267 87.848 li
cp
310.822 102.756 mo
302.72 87.6713 li
313.056 82.6428 li
313.017 83.0019 li
310.822 102.756 li
cp
f
291.066 109.928 mo
353.652 112.873 li
334.017 104.528 li
291.066 109.928 li
cp
356.952 113.627 mo
287.579 110.362 li
287.556 109.767 li
334.102 103.916 li
334.176 103.947 li
356.952 113.627 li
cp
f
267.619 108.515 mo
273.781 114.3 li
293.401 94.6803 li
267.619 108.515 li
cp
273.79 114.854 mo
266.943 108.426 li
295.593 93.0528 li
273.79 114.854 li
cp
f
290.972 124.782 mo
290.484 132.825 li
303.403 116.982 li
290.972 124.782 li
cp
290.012 134.035 mo
290.587 124.553 li
290.674 124.499 li
305.239 115.359 li
290.012 134.035 li
cp
f
287.558 110.861 mo
282.347 127.984 li
290.288 123.765 li
287.558 110.861 li
cp
281.687 128.786 mo
287.628 109.265 li
290.74 123.976 li
281.687 128.786 li
cp
f
278.039 134.581 mo
284.86 139.819 li
281.937 128.856 li
278.039 134.581 li
cp
285.547 140.848 mo
277.498 134.668 li
282.097 127.913 li
285.547 140.848 li
cp
f
267.997 156.567 mo
272.675 161.245 li
278.706 149.921 li
267.997 156.567 li
cp
272.773 161.906 mo
267.361 156.494 li
279.753 148.802 li
272.773 161.906 li
cp
f
278.012 135.062 mo
279.373 148.784 li
284.935 140.378 li
278.012 135.062 li
cp
279.086 149.938 mo
277.525 134.187 li
285.472 140.288 li
279.086 149.938 li
cp
f
290.191 133.71 mo
295.152 144.377 li
305.818 143.88 li
290.191 133.71 li
cp
294.904 144.787 mo
294.847 144.666 li
289.244 132.618 li
307.072 144.221 li
294.904 144.787 li
cp
f
287.074 153.94 mo
295.841 157.968 li
285.653 141.618 li
287.074 153.94 li
cp
297.401 159.342 mo
286.519 154.342 li
284.754 139.049 li
297.401 159.342 li
cp
f
285.895 140.879 mo
296.237 157.474 li
295.276 144.006 li
285.895 140.879 li
cp
297.005 159.835 mo
284.512 139.788 li
295.842 143.565 li
297.005 159.835 li
cp
f
315.346 130.133 mo
307.27 143.102 li
332.476 122.057 li
315.346 130.133 li
cp
305.62 144.999 mo
315.07 129.823 li
315.123 129.798 li
335.114 120.373 li
305.62 144.999 li
cp
f
273.114 161.809 mo
281.244 174.258 li
290.899 163.333 li
273.114 161.809 li
cp
281.196 174.914 mo
281.054 174.695 li
272.334 161.342 li
291.722 163.004 li
281.196 174.914 li
cp
f
280.282 150.261 mo
290.438 161.869 li
286.643 154.28 li
280.282 150.261 li
cp
292.183 164.468 mo
278.177 148.461 li
286.95 154.002 li
286.975 154.052 li
292.183 164.468 li
cp
f
291.577 163.438 mo
294.816 177.39 li
299.799 165.432 li
291.577 163.438 li
cp
294.708 178.685 mo
291.044 162.899 li
300.346 165.154 li
300.257 165.369 li
294.708 178.685 li
cp
f
281.475 174.857 mo
282.963 182.543 li
294.121 178.08 li
281.475 174.857 li
cp
282.664 183.092 mo
280.965 174.316 li
295.404 177.996 li
282.664 183.092 li
cp
f
264.858 100.387 mo
267.375 107.818 li
276.972 94.1869 li
264.858 100.387 li
cp
267.187 109.123 mo
264.127 100.091 li
278.852 92.5537 li
267.187 109.123 li
cp
f
313.596 82.9515 mo
325.533 92.8982 li
330.382 83.0753 li
313.596 82.9515 li
cp
325.733 93.8423 mo
311.932 82.3415 li
331.34 82.4853 li
325.733 93.8423 li
cp
f
331.108 83.0902 mo
334.172 103.629 li
343.307 87.8413 li
331.108 83.0902 li
cp
333.947 104.815 mo
330.613 82.4703 li
343.884 87.6388 li
343.768 87.8397 li
333.947 104.815 li
cp
f
326.456 92.9815 mo
355.146 113.194 li
352.667 90.5037 li
326.456 92.9815 li
cp
355.637 114.028 mo
355.277 113.774 li
325.346 92.6865 li
353.021 90.0704 li
353.042 90.2654 li
355.637 114.028 li
cp
f
310.57 102.185 mo
314.965 129.074 li
325.566 93.2653 li
310.57 102.185 li
cp
314.853 130.856 mo
310.133 101.982 li
326.236 92.4028 li
314.853 130.856 li
cp
f
333.743 120.762 mo
344.3 130.063 li
334.23 105.172 li
333.743 120.762 li
cp
345.302 131.476 mo
333.34 120.937 li
333.342 120.843 li
333.89 103.272 li
345.302 131.476 li
cp
f
296.961 158.506 mo
311.731 160.798 li
306.383 144.5 li
296.961 158.506 li
cp
312.312 161.291 mo
296.281 158.804 li
306.508 143.602 li
312.312 161.291 li
cp
f
307.178 144.008 mo
319.684 146.759 li
343.307 131.497 li
307.178 144.008 li
cp
319.76 147.184 mo
305.713 144.094 li
346.295 130.041 li
319.76 147.184 li
cp
f
319.875 146.783 mo
336.893 148.053 li
315.271 130.516 li
319.875 146.783 li
cp
338.131 148.545 mo
319.569 147.16 li
319.53 147.026 li
314.546 129.414 li
338.131 148.545 li
cp
f
312.299 160.952 mo
320.565 164.709 li
319.564 147.675 li
312.299 160.952 li
cp
321.002 165.345 mo
311.744 161.137 li
319.88 146.268 li
321.002 165.345 li
cp
f
345.439 88.433 mo
352.845 90.0834 li
363.435 87.7742 li
345.439 88.433 li
cp
352.843 90.4908 mo
352.801 90.4817 li
342.329 88.148 li
365.65 87.2947 li
365.7 87.6884 li
352.843 90.4908 li
cp
f
364.781 88.0418 mo
355.972 112.583 li
366.509 99.6505 li
364.781 88.0418 li
cp
354.811 114.639 mo
364.941 86.4151 li
366.929 99.7654 li
354.811 114.639 li
cp
f
365.754 87.7289 mo
382.395 105.105 li
379.214 90.6654 li
365.754 87.7289 li
cp
383.437 107.056 mo
363.969 86.728 li
379.716 90.1637 li
383.437 107.056 li
cp
f
379.766 90.1954 mo
396.852 101.503 li
398.611 92.7082 li
379.766 90.1954 li
cp
397.127 102.162 mo
396.88 101.999 li
378.101 89.5721 li
399.085 92.3699 li
397.127 102.162 li
cp
f
383.805 105.979 mo
394.733 107.193 li
396.919 101.365 li
383.805 105.979 li
cp
394.997 107.623 mo
382.027 106.182 li
397.591 100.706 li
394.997 107.623 li
cp
f
400.528 92.8349 mo
414.763 97.1055 li
421.169 94.0211 li
400.528 92.8349 li
cp
414.797 97.5314 mo
414.723 97.5093 li
397.168 92.2432 li
422.729 93.7119 li
414.797 97.5314 li
cp
f
414.698 97.5635 mo
404.218 101.612 li
417.08 101.374 li
414.698 97.5635 li
cp
401.975 102.052 mo
414.862 97.0734 li
417.79 101.759 li
401.975 102.052 li
cp
f
397.489 100.867 mo
402.765 101.586 li
398.928 93.1932 li
397.489 100.867 li
cp
403.428 102.079 mo
397.021 101.205 li
398.768 91.8849 li
403.428 102.079 li
cp
f
403.244 102.355 mo
402.286 111.94 li
407.079 107.387 li
403.244 102.355 li
cp
401.783 112.967 mo
402.949 101.31 li
407.612 107.43 li
401.783 112.967 li
cp
f
403.349 101.948 mo
409.689 119.698 li
414.507 97.6376 li
403.349 101.948 li
cp
409.78 121.141 mo
402.844 101.717 li
415.053 96.9993 li
409.78 121.141 li
cp
f
402.317 112.459 mo
409.419 119.807 li
407.216 107.806 li
402.317 112.459 li
cp
410.049 121.032 mo
401.752 112.447 li
401.897 112.309 li
407.474 107.011 li
410.049 121.032 li
cp
f
367.41 100.194 mo
379.916 114.451 li
382.668 106.197 li
367.41 100.194 li
cp
380.075 115.235 mo
366.029 99.2221 li
383.165 105.964 li
383.105 106.143 li
380.075 115.235 li
cp
f
380.64 115.388 mo
390.448 133.043 li
392.41 119.556 li
380.64 115.388 li
cp
390.785 134.879 mo
379.351 114.298 li
393.072 119.157 li
390.785 134.879 li
cp
f
355.741 114.55 mo
360.894 147.127 li
364.385 128.424 li
355.741 114.55 li
cp
360.862 149.471 mo
355.042 112.672 li
364.805 128.345 li
360.862 149.471 li
cp
f
365.157 128.711 mo
374.217 138.777 li
389.315 133.996 li
365.157 128.711 li
cp
374.092 139.235 mo
364.034 128.058 li
390.857 133.925 li
374.092 139.235 li
cp
f
374.403 138.821 mo
382.69 139.323 li
379.928 115.969 li
374.403 138.821 li
cp
383.142 139.75 mo
373.905 139.191 li
380.063 113.717 li
383.142 139.75 li
cp
f
383.188 139.578 mo
388.356 146.96 li
389.833 134.41 li
383.188 139.578 li
cp
388.629 148.045 mo
382.645 139.496 li
390.339 133.512 li
388.629 148.045 li
cp
f
374.621 139.93 mo
381.269 163.564 li
383.238 151.008 li
374.621 139.93 li
cp
381.379 165.429 mo
373.687 138.081 li
383.658 150.9 li
381.379 165.429 li
cp
f
361.174 148.536 mo
368.388 168.89 li
383.846 151.371 li
361.174 148.536 li
cp
368.238 169.661 mo
368.125 169.342 li
360.582 148.061 li
384.643 151.069 li
368.238 169.661 li
cp
f
338.339 148.1 mo
360.418 148.1 li
345.014 131.668 li
338.339 148.1 li
cp
361.338 148.498 mo
337.747 148.498 li
344.879 130.943 li
361.338 148.498 li
cp
f
344.826 165.908 mo
367.518 168.968 li
338.451 148.824 li
344.826 165.908 li
cp
369.107 169.583 mo
344.536 166.271 li
337.635 147.774 li
369.107 169.583 li
cp
f
349.056 174.394 mo
365.859 175.382 li
345.102 166.487 li
349.056 174.394 li
cp
368.111 175.914 mo
348.803 174.778 li
344.259 165.692 li
368.111 175.914 li
cp
f
368.028 169.668 mo
356.196 176.429 li
366.82 175.463 li
368.028 169.668 li
cp
354.409 176.992 mo
368.598 168.883 li
367.15 175.833 li
354.409 176.992 li
cp
f
359.447 182.001 mo
369.81 182.882 li
356.141 177.37 li
359.447 182.001 li
cp
373.718 183.815 mo
359.122 182.572 li
354.464 176.05 li
373.718 183.815 li
cp
f
359.744 182.285 mo
366.182 187.769 li
366.658 176.324 li
359.744 182.285 li
cp
366.727 189.018 mo
358.825 182.288 li
367.313 174.972 li
366.727 189.018 li
cp
f
355.622 177.501 mo
357.694 191.316 li
359.076 182.336 li
355.622 177.501 li
cp
357.689 193.968 mo
354.982 175.919 li
359.494 182.236 li
357.689 193.968 li
cp
f
357.901 192.593 mo
363.619 200.692 li
359.33 183.302 li
357.901 192.593 li
cp
364.51 202.647 mo
357.482 192.691 li
357.495 192.611 li
359.24 181.271 li
364.51 202.647 li
cp
f
321.767 174.95 mo
331.889 176.926 li
321.026 165.569 li
321.767 174.95 li
cp
333.044 177.557 mo
321.394 175.284 li
320.541 164.485 li
333.044 177.557 li
cp
f
329.245 189.374 mo
335.108 193.527 li
332.421 178.137 li
329.245 189.374 li
cp
335.666 194.411 mo
328.785 189.537 li
332.512 176.347 li
335.666 194.411 li
cp
f
321.809 175.125 mo
328.938 188.875 li
337.596 149.408 li
321.809 175.125 li
cp
329.092 190.036 mo
321.352 175.109 li
321.41 175.013 li
338.49 147.19 li
329.092 190.036 li
cp
f
321.785 165.248 mo
332.479 176.96 li
344.192 166.267 li
321.785 165.248 li
cp
332.454 177.523 mo
320.843 164.806 li
345.17 165.912 li
332.454 177.523 li
cp
f
132.813 136.085 mo
132.813 137.123 131.972 137.965 130.933 137.965 cv
129.895 137.965 129.054 137.123 129.054 136.085 cv
129.054 135.047 129.895 134.205 130.933 134.205 cv
131.972 134.205 132.813 135.047 132.813 136.085 cv
cp
.239216 .372549 .435294 rgb
f
71.6367 147.503 mo
71.6367 148.482 70.8425 149.276 69.8628 149.276 cv
68.8831 149.276 68.0889 148.482 68.0889 147.503 cv
68.0889 146.523 68.8831 145.729 69.8628 145.729 cv
70.8425 145.729 71.6367 146.523 71.6367 147.503 cv
cp
f
129.423 193.837 mo
129.423 194.396 128.97 194.849 128.411 194.849 cv
127.852 194.849 127.399 194.396 127.399 193.837 cv
127.399 193.278 127.852 192.825 128.411 192.825 cv
128.97 192.825 129.423 193.278 129.423 193.837 cv
cp
f
121.059 227.691 mo
121.059 228.25 120.606 228.703 120.047 228.703 cv
119.488 228.703 119.035 228.25 119.035 227.691 cv
119.035 227.132 119.488 226.679 120.047 226.679 cv
120.606 226.679 121.059 227.132 121.059 227.691 cv
cp
f
168.588 240.702 mo
168.588 241.121 168.135 241.714 167.576 241.714 cv
167.017 241.714 166.564 241.261 166.564 240.702 cv
166.564 240.143 167.017 239.69 167.576 239.69 cv
168.135 239.69 168.588 240.283 168.588 240.702 cv
cp
f
166.375 225.19 mo
166.375 226.01 165.489 227.169 164.395 227.169 cv
163.302 227.169 162.415 226.283 162.415 225.19 cv
162.415 224.096 163.302 223.21 164.395 223.21 cv
165.489 223.21 166.375 224.37 166.375 225.19 cv
cp
f
137.767 287.434 mo
137.767 288.285 136.847 289.488 135.713 289.488 cv
134.579 289.488 133.659 288.569 133.659 287.434 cv
133.659 286.3 134.579 285.38 135.713 285.38 cv
136.847 285.38 137.767 286.583 137.767 287.434 cv
cp
f
155.765 233.665 mo
155.765 233.942 155.465 234.334 155.096 234.334 cv
154.727 234.334 154.428 234.035 154.428 233.665 cv
154.428 233.296 154.727 232.997 155.096 232.997 cv
155.465 232.997 155.765 233.388 155.765 233.665 cv
cp
f
152.244 235.959 mo
152.244 236.236 151.944 236.627 151.575 236.627 cv
151.206 236.627 150.907 236.328 150.907 235.959 cv
150.907 235.589 151.206 235.29 151.575 235.29 cv
151.944 235.29 152.244 235.682 152.244 235.959 cv
cp
f
144.509 234.025 mo
144.509 234.302 144.21 234.693 143.84 234.693 cv
143.471 234.693 143.172 234.394 143.172 234.025 cv
143.172 233.656 143.471 233.357 143.84 233.357 cv
144.21 233.357 144.509 233.748 144.509 234.025 cv
cp
f
138.708 224.218 mo
138.708 224.495 138.408 224.887 138.039 224.887 cv
137.67 224.887 137.371 224.588 137.371 224.218 cv
137.371 223.849 137.67 223.55 138.039 223.55 cv
138.408 223.55 138.708 223.941 138.708 224.218 cv
cp
f
159.295 247.34 mo
159.295 247.899 158.841 248.352 158.283 248.352 cv
157.724 248.352 157.271 247.899 157.271 247.34 cv
157.271 246.781 157.724 246.328 158.283 246.328 cv
158.841 246.328 159.295 246.781 159.295 247.34 cv
cp
f
151.401 267.254 mo
151.401 267.999 150.797 268.604 150.051 268.604 cv
149.306 268.604 148.702 267.999 148.702 267.254 cv
148.702 266.509 149.306 265.905 150.051 265.905 cv
150.797 265.905 151.401 266.509 151.401 267.254 cv
cp
f
127.518 126.659 mo
127.518 127.559 126.789 128.289 125.889 128.289 cv
124.988 128.289 124.259 127.559 124.259 126.659 cv
124.259 125.759 124.988 125.029 125.889 125.029 cv
126.789 125.029 127.518 125.759 127.518 126.659 cv
cp
f
147.551 130.044 mo
147.551 130.79 146.946 131.394 146.201 131.394 cv
145.456 131.394 144.852 130.79 144.852 130.044 cv
144.852 129.299 145.456 128.695 146.201 128.695 cv
146.946 128.695 147.551 129.299 147.551 130.044 cv
cp
f
154.183 221.584 mo
154.183 222.693 153.284 223.592 152.176 223.592 cv
151.066 223.592 150.168 222.693 150.168 221.584 cv
150.168 220.475 151.066 219.576 152.176 219.576 cv
153.284 219.576 154.183 220.475 154.183 221.584 cv
cp
f
103.938 139.603 mo
103.938 140.162 103.148 140.953 102.589 140.953 cv
101.843 140.953 101.239 140.348 101.239 139.603 cv
101.239 138.858 101.843 138.254 102.589 138.254 cv
103.334 138.254 103.938 138.858 103.938 139.603 cv
cp
f
68.7506 136.882 mo
68.7506 137.44 68.2975 137.894 67.7386 137.894 cv
67.1796 137.894 66.7265 137.44 66.7265 136.882 cv
66.7265 136.323 67.1796 135.87 67.7386 135.87 cv
68.2975 135.87 68.7506 136.323 68.7506 136.882 cv
cp
f
93.6859 167.151 mo
93.6859 168.137 92.887 168.936 91.9013 168.936 cv
90.9158 168.936 90.1168 168.137 90.1168 167.151 cv
90.1168 166.166 90.9158 165.367 91.9013 165.367 cv
92.887 165.367 93.6859 166.166 93.6859 167.151 cv
cp
f
131.221 253.978 mo
131.221 254.723 130.617 255.327 129.871 255.327 cv
129.126 255.327 128.522 254.723 128.522 253.978 cv
128.522 253.233 129.126 252.629 129.871 252.629 cv
130.617 252.629 131.221 253.233 131.221 253.978 cv
cp
f
156.069 105.437 mo
156.069 105.996 155.616 106.449 155.057 106.449 cv
154.498 106.449 154.045 105.996 154.045 105.437 cv
154.045 104.878 154.498 104.425 155.057 104.425 cv
155.616 104.425 156.069 104.878 156.069 105.437 cv
cp
f
127.754 144.951 mo
127.754 145.51 127.301 145.963 126.742 145.963 cv
126.183 145.963 125.73 145.51 125.73 144.951 cv
125.73 144.392 126.183 143.939 126.742 143.939 cv
127.301 143.939 127.754 144.392 127.754 144.951 cv
cp
f
57.5986 96.2563 mo
57.5986 96.8152 57.1455 97.2683 56.5866 97.2683 cv
56.0276 97.2683 55.5745 96.8152 55.5745 96.2563 cv
55.5745 95.6973 56.0276 95.2442 56.5866 95.2442 cv
57.1455 95.2442 57.5986 95.6973 57.5986 96.2563 cv
cp
f
173.019 95.6604 mo
173.019 96.2194 172.566 96.6725 172.007 96.6725 cv
171.448 96.6725 170.995 96.2194 170.995 95.6604 cv
170.995 95.1015 171.448 94.6484 172.007 94.6484 cv
172.566 94.6484 173.019 95.1015 173.019 95.6604 cv
cp
f
195.804 93.4018 mo
195.804 93.9608 195.351 94.4139 194.792 94.4139 cv
194.233 94.4139 193.78 93.9608 193.78 93.4018 cv
193.78 92.8429 194.233 92.3898 194.792 92.3898 cv
195.351 92.3898 195.804 92.8429 195.804 93.4018 cv
cp
f
190.228 84.0422 mo
190.228 84.6011 189.775 85.0542 189.216 85.0542 cv
188.657 85.0542 188.204 84.6011 188.204 84.0422 cv
188.204 83.4832 188.657 83.0301 189.216 83.0301 cv
189.775 83.0301 190.228 83.4832 190.228 84.0422 cv
cp
f
122.652 107.408 mo
122.652 107.967 122.199 108.42 121.64 108.42 cv
121.081 108.42 120.628 107.967 120.628 107.408 cv
120.628 106.849 121.081 106.396 121.64 106.396 cv
122.199 106.396 122.652 106.849 122.652 107.408 cv
cp
f
130.883 92.8044 mo
130.883 93.3634 130.43 93.8165 129.871 93.8165 cv
129.312 93.8165 128.859 93.3634 128.859 92.8044 cv
128.859 92.2455 129.312 91.7924 129.871 91.7924 cv
130.43 91.7924 130.883 92.2455 130.883 92.8044 cv
cp
f
83.8855 100.77 mo
83.8855 101.329 83.4324 101.782 82.8735 101.782 cv
82.3146 101.782 81.8615 101.329 81.8615 100.77 cv
81.8615 100.211 82.3146 99.7582 82.8735 99.7582 cv
83.4324 99.7582 83.8855 100.211 83.8855 100.77 cv
cp
f
105.393 113.117 mo
105.393 113.676 104.94 114.129 104.381 114.129 cv
103.822 114.129 103.369 113.676 103.369 113.117 cv
103.369 112.558 103.822 112.105 104.381 112.105 cv
104.94 112.105 105.393 112.558 105.393 113.117 cv
cp
f
117.958 131.438 mo
117.958 131.897 117.585 132.27 117.126 132.27 cv
116.667 132.27 116.295 131.897 116.295 131.438 cv
116.295 130.979 116.667 130.607 117.126 130.607 cv
117.585 130.607 117.958 130.979 117.958 131.438 cv
cp
f
125.724 121.68 mo
125.724 122.139 125.352 122.512 124.893 122.512 cv
124.434 122.512 124.062 122.139 124.062 121.68 cv
124.062 121.221 124.434 120.849 124.893 120.849 cv
125.352 120.849 125.724 121.221 125.724 121.68 cv
cp
f
134.486 132.832 mo
134.486 133.291 134.114 133.664 133.655 133.664 cv
133.196 133.664 132.824 133.291 132.824 132.832 cv
132.824 132.373 133.196 132.001 133.655 132.001 cv
134.114 132.001 134.486 132.373 134.486 132.832 cv
cp
f
121.542 127.455 mo
121.542 127.915 121.17 128.287 120.711 128.287 cv
120.252 128.287 119.879 127.915 119.879 127.455 cv
119.879 126.996 120.252 126.624 120.711 126.624 cv
121.17 126.624 121.542 126.996 121.542 127.455 cv
cp
f
127.083 134.426 mo
127.083 134.885 126.711 135.257 126.252 135.257 cv
125.793 135.257 125.421 134.885 125.421 134.426 cv
125.421 133.966 125.793 133.594 126.252 133.594 cv
126.711 133.594 127.083 133.966 127.083 134.426 cv
cp
f
103.818 130.841 mo
103.818 131.3 103.446 131.672 102.987 131.672 cv
102.528 131.672 102.156 131.3 102.156 130.841 cv
102.156 130.382 102.528 130.01 102.987 130.01 cv
103.446 130.01 103.818 130.382 103.818 130.841 cv
cp
f
121.343 135.819 mo
121.343 136.279 120.971 136.651 120.512 136.651 cv
120.053 136.651 119.68 136.279 119.68 135.819 cv
119.68 135.36 120.053 134.988 120.512 134.988 cv
120.971 134.988 121.343 135.36 121.343 135.819 cv
cp
f
76.1374 146.374 mo
76.1374 146.833 75.7652 147.205 75.306 147.205 cv
74.8469 147.205 74.4747 146.833 74.4747 146.374 cv
74.4747 145.915 74.8469 145.543 75.306 145.543 cv
75.7652 145.543 76.1374 145.915 76.1374 146.374 cv
cp
f
139.067 126.858 mo
139.067 127.317 138.695 127.689 138.235 127.689 cv
137.776 127.689 137.404 127.317 137.404 126.858 cv
137.404 126.399 137.776 126.027 138.235 126.027 cv
138.695 126.027 139.067 126.399 139.067 126.858 cv
cp
f
116.014 162.637 mo
116.014 163.196 115.561 163.649 115.002 163.649 cv
114.443 163.649 113.99 163.196 113.99 162.637 cv
113.99 162.079 114.443 161.625 115.002 161.625 cv
115.561 161.625 116.014 162.079 116.014 162.637 cv
cp
f
104.796 176.046 mo
104.796 176.605 104.343 177.058 103.784 177.058 cv
103.225 177.058 102.772 176.605 102.772 176.046 cv
102.772 175.488 103.225 175.034 103.784 175.034 cv
104.343 175.034 104.796 175.488 104.796 176.046 cv
cp
f
213.847 140.804 mo
213.847 141.549 213.243 142.154 212.498 142.154 cv
211.752 142.154 211.148 141.549 211.148 140.804 cv
211.148 140.059 211.752 139.455 212.498 139.455 cv
213.243 139.455 213.847 140.059 213.847 140.804 cv
cp
.615686 .733333 .788235 rgb
f
214.33 132.102 mo
214.33 132.847 213.726 133.452 212.981 133.452 cv
212.235 133.452 211.631 132.847 211.631 132.102 cv
211.631 131.357 212.235 130.753 212.981 130.753 cv
213.726 130.753 214.33 131.357 214.33 132.102 cv
cp
f
223.623 132.102 mo
223.623 132.847 223.019 133.452 222.274 133.452 cv
221.529 133.452 220.925 132.847 220.925 132.102 cv
220.925 131.357 221.529 130.753 222.274 130.753 cv
223.019 130.753 223.623 131.357 223.623 132.102 cv
cp
f
224.42 140.864 mo
224.42 141.61 223.816 142.214 223.071 142.214 cv
222.325 142.214 221.721 141.61 221.721 140.864 cv
221.721 140.119 222.325 139.515 223.071 139.515 cv
223.816 139.515 224.42 140.119 224.42 140.864 cv
cp
.439216 .611765 .694118 rgb
f
229.199 131.571 mo
229.199 132.316 228.595 132.92 227.85 132.92 cv
227.105 132.92 226.501 132.316 226.501 131.571 cv
226.501 130.826 227.105 130.222 227.85 130.222 cv
228.595 130.222 229.199 130.826 229.199 131.571 cv
cp
.615686 .733333 .788235 rgb
f
237.165 129.447 mo
237.165 130.192 236.561 130.796 235.816 130.796 cv
235.071 130.796 234.466 130.192 234.466 129.447 cv
234.466 128.702 235.071 128.098 235.816 128.098 cv
236.561 128.098 237.165 128.702 237.165 129.447 cv
cp
f
243.254 136.177 mo
243.254 136.922 242.649 137.526 241.904 137.526 cv
241.159 137.526 240.555 136.922 240.555 136.177 cv
240.555 135.432 241.159 134.828 241.904 134.828 cv
242.649 134.828 243.254 135.432 243.254 136.177 cv
cp
f
248.466 136.856 mo
248.466 137.601 247.862 138.206 247.117 138.206 cv
246.371 138.206 245.767 137.601 245.767 136.856 cv
245.767 136.111 246.371 135.507 247.117 135.507 cv
247.862 135.507 248.466 136.111 248.466 136.856 cv
cp
f
241.945 142.192 mo
241.945 142.937 241.341 143.541 240.595 143.541 cv
239.85 143.541 239.246 142.937 239.246 142.192 cv
239.246 141.447 239.85 140.843 240.595 140.843 cv
241.341 140.843 241.945 141.447 241.945 142.192 cv
cp
f
221.234 124.402 mo
221.234 125.147 220.63 125.751 219.884 125.751 cv
219.139 125.751 218.535 125.147 218.535 124.402 cv
218.535 123.657 219.139 123.053 219.884 123.053 cv
220.63 123.053 221.234 123.657 221.234 124.402 cv
cp
f
230.793 120.153 mo
230.793 120.899 230.189 121.503 229.443 121.503 cv
228.698 121.503 228.094 120.899 228.094 120.153 cv
228.094 119.408 228.698 118.804 229.443 118.804 cv
230.189 118.804 230.793 119.408 230.793 120.153 cv
cp
f
221.499 119.888 mo
221.499 120.633 220.895 121.237 220.15 121.237 cv
219.405 121.237 218.8 120.633 218.8 119.888 cv
218.8 119.143 219.405 118.539 220.15 118.539 cv
220.895 118.539 221.499 119.143 221.499 119.888 cv
cp
f
221.765 115.374 mo
221.765 116.119 221.161 116.723 220.415 116.723 cv
219.67 116.723 219.066 116.119 219.066 115.374 cv
219.066 114.629 219.67 114.025 220.415 114.025 cv
221.161 114.025 221.765 114.629 221.765 115.374 cv
cp
f
213.939 117.927 mo
213.939 118.672 213.335 119.276 212.589 119.276 cv
211.844 119.276 211.24 118.672 211.24 117.927 cv
211.24 117.182 211.844 116.578 212.589 116.578 cv
213.335 116.578 213.939 117.182 213.939 117.927 cv
cp
f
222.03 107.408 mo
222.03 108.154 221.426 108.758 220.681 108.758 cv
219.936 108.758 219.332 108.154 219.332 107.408 cv
219.332 106.663 219.936 106.059 220.681 106.059 cv
221.426 106.059 222.03 106.663 222.03 107.408 cv
cp
f
227.341 117.233 mo
227.341 117.978 226.737 118.582 225.991 118.582 cv
225.246 118.582 224.642 117.978 224.642 117.233 cv
224.642 116.488 225.246 115.883 225.991 115.883 cv
226.737 115.883 227.341 116.488 227.341 117.233 cv
cp
f
237.431 114.843 mo
237.431 115.588 236.827 116.192 236.081 116.192 cv
235.336 116.192 234.732 115.588 234.732 114.843 cv
234.732 114.098 235.336 113.494 236.081 113.494 cv
236.827 113.494 237.431 114.098 237.431 114.843 cv
cp
f
248.583 116.436 mo
248.583 117.181 247.979 117.786 247.233 117.786 cv
246.488 117.786 245.884 117.181 245.884 116.436 cv
245.884 115.691 246.488 115.087 247.233 115.087 cv
247.979 115.087 248.583 115.691 248.583 116.436 cv
cp
f
251.504 125.464 mo
251.504 126.209 250.899 126.813 250.154 126.813 cv
249.409 126.813 248.805 126.209 248.805 125.464 cv
248.805 124.719 249.409 124.115 250.154 124.115 cv
250.899 124.115 251.504 124.719 251.504 125.464 cv
cp
f
242.741 128.385 mo
242.741 129.13 242.137 129.734 241.392 129.734 cv
240.647 129.734 240.042 129.13 240.042 128.385 cv
240.042 127.64 240.647 127.035 241.392 127.035 cv
242.137 127.035 242.741 127.64 242.741 128.385 cv
cp
f
252.3 135.819 mo
252.3 136.565 251.696 137.169 250.951 137.169 cv
250.205 137.169 249.601 136.565 249.601 135.819 cv
249.601 135.074 250.205 134.47 250.951 134.47 cv
251.696 134.47 252.3 135.074 252.3 135.819 cv
cp
f
257.611 135.288 mo
257.611 136.034 257.007 136.638 256.261 136.638 cv
255.516 136.638 254.912 136.034 254.912 135.288 cv
254.912 134.543 255.516 133.939 256.261 133.939 cv
257.007 133.939 257.611 134.543 257.611 135.288 cv
cp
f
260.797 143.52 mo
260.797 144.265 260.193 144.869 259.448 144.869 cv
258.702 144.869 258.098 144.265 258.098 143.52 cv
258.098 142.774 258.702 142.17 259.448 142.17 cv
260.193 142.17 260.797 142.774 260.797 143.52 cv
cp
f
271.445 142.75 mo
271.445 143.495 270.841 144.099 270.096 144.099 cv
269.35 144.099 268.746 143.495 268.746 142.75 cv
268.746 142.005 269.35 141.4 270.096 141.4 cv
270.841 141.4 271.445 142.005 271.445 142.75 cv
cp
f
253.362 142.458 mo
253.362 143.203 252.758 143.807 252.013 143.807 cv
251.268 143.807 250.663 143.203 250.663 142.458 cv
250.663 141.712 251.268 141.108 252.013 141.108 cv
252.758 141.108 253.362 141.712 253.362 142.458 cv
cp
.439216 .611765 .694118 rgb
f
263.376 126.809 mo
263.376 127.554 262.772 128.158 262.026 128.158 cv
261.281 128.158 260.677 127.554 260.677 126.809 cv
260.677 126.064 261.281 125.46 262.026 125.46 cv
262.772 125.46 263.376 126.064 263.376 126.809 cv
cp
.615686 .733333 .788235 rgb
f
268.059 129.852 mo
268.059 130.597 267.455 131.202 266.71 131.202 cv
265.964 131.202 265.36 130.597 265.36 129.852 cv
265.36 129.107 265.964 128.503 266.71 128.503 cv
267.455 128.503 268.059 129.107 268.059 129.852 cv
cp
.439216 .611765 .694118 rgb
f
272.746 125.73 mo
272.746 126.475 272.141 127.079 271.396 127.079 cv
270.651 127.079 270.047 126.475 270.047 125.73 cv
270.047 124.984 270.651 124.38 271.396 124.38 cv
272.141 124.38 272.746 124.984 272.746 125.73 cv
cp
.615686 .733333 .788235 rgb
f
278.853 134.757 mo
278.853 135.503 278.248 136.107 277.503 136.107 cv
276.758 136.107 276.154 135.503 276.154 134.757 cv
276.154 134.012 276.758 133.408 277.503 133.408 cv
278.248 133.408 278.853 134.012 278.853 134.757 cv
cp
.439216 .611765 .694118 rgb
f
268.232 135.288 mo
268.232 136.034 267.627 136.638 266.882 136.638 cv
266.137 136.638 265.533 136.034 265.533 135.288 cv
265.533 134.543 266.137 133.939 266.882 133.939 cv
267.627 133.939 268.232 134.543 268.232 135.288 cv
cp
.615686 .733333 .788235 rgb
f
251.769 110.064 mo
251.769 110.809 251.165 111.413 250.42 111.413 cv
249.674 111.413 249.07 110.809 249.07 110.064 cv
249.07 109.318 249.674 108.714 250.42 108.714 cv
251.165 108.714 251.769 109.318 251.769 110.064 cv
cp
f
258.407 105.815 mo
258.407 106.56 257.803 107.165 257.058 107.165 cv
256.313 107.165 255.708 106.56 255.708 105.815 cv
255.708 105.07 256.313 104.466 257.058 104.466 cv
257.803 104.466 258.407 105.07 258.407 105.815 cv
cp
f
250.707 103.956 mo
250.707 104.702 250.103 105.306 249.358 105.306 cv
248.612 105.306 248.008 104.702 248.008 103.956 cv
248.008 103.211 248.612 102.607 249.358 102.607 cv
250.103 102.607 250.707 103.211 250.707 103.956 cv
cp
f
252.831 97.5839 mo
252.831 98.3291 252.227 98.9333 251.482 98.9333 cv
250.737 98.9333 250.132 98.3291 250.132 97.5839 cv
250.132 96.8387 250.737 96.2345 251.482 96.2345 cv
252.227 96.2345 252.831 96.8387 252.831 97.5839 cv
cp
f
244.865 103.16 mo
244.865 103.905 244.261 104.509 243.516 104.509 cv
242.771 104.509 242.167 103.905 242.167 103.16 cv
242.167 102.415 242.771 101.811 243.516 101.811 cv
244.261 101.811 244.865 102.415 244.865 103.16 cv
cp
f
244.6 111.126 mo
244.6 111.871 243.996 112.475 243.251 112.475 cv
242.505 112.475 241.901 111.871 241.901 111.126 cv
241.901 110.38 242.505 109.776 243.251 109.776 cv
243.996 109.776 244.6 110.38 244.6 111.126 cv
cp
f
238.758 107.143 mo
238.758 107.888 238.154 108.492 237.409 108.492 cv
236.664 108.492 236.06 107.888 236.06 107.143 cv
236.06 106.398 236.664 105.793 237.409 105.793 cv
238.154 105.793 238.758 106.398 238.758 107.143 cv
cp
f
231.058 104.222 mo
231.058 104.967 230.454 105.571 229.709 105.571 cv
228.964 105.571 228.359 104.967 228.359 104.222 cv
228.359 103.477 228.964 102.873 229.709 102.873 cv
230.454 102.873 231.058 103.477 231.058 104.222 cv
cp
f
239.82 99.7298 mo
239.82 100.475 239.216 101.079 238.471 101.079 cv
237.726 101.079 237.122 100.475 237.122 99.7298 cv
237.122 98.9846 237.726 98.3805 238.471 98.3805 cv
239.216 98.3805 239.82 98.9846 239.82 99.7298 cv
cp
f
247.521 91.2331 mo
247.521 91.9783 246.917 92.5824 246.171 92.5824 cv
245.426 92.5824 244.822 91.9783 244.822 91.2331 cv
244.822 90.4878 245.426 89.8837 246.171 89.8837 cv
246.917 89.8837 247.521 90.4878 247.521 91.2331 cv
cp
f
262.921 91.2113 mo
262.921 91.9565 262.317 92.5607 261.572 92.5607 cv
260.826 92.5607 260.222 91.9565 260.222 91.2113 cv
260.222 90.4661 260.826 89.8619 261.572 89.8619 cv
262.317 89.8619 262.921 90.4661 262.921 91.2113 cv
cp
f
265.576 100.239 mo
265.576 100.984 264.972 101.588 264.227 101.588 cv
263.482 101.588 262.878 100.984 262.878 100.239 cv
262.878 99.4939 263.482 98.8898 264.227 98.8898 cv
264.972 98.8898 265.576 99.4939 265.576 100.239 cv
cp
f
279.364 93.2454 mo
279.364 93.9907 278.76 94.5948 278.014 94.5948 cv
277.269 94.5948 276.665 93.9907 276.665 93.2454 cv
276.665 92.5002 277.269 91.8961 278.014 91.8961 cv
278.76 91.8961 279.364 92.5002 279.364 93.2454 cv
cp
.439216 .611765 .694118 rgb
f
295.846 94.1321 mo
295.846 94.8773 295.242 95.4814 294.497 95.4814 cv
293.752 95.4814 293.147 94.8773 293.147 94.1321 cv
293.147 93.3868 293.752 92.7827 294.497 92.7827 cv
295.242 92.7827 295.846 93.3868 295.846 94.1321 cv
cp
f
294.882 86.8852 mo
294.882 87.6304 294.278 88.2345 293.533 88.2345 cv
292.788 88.2345 292.183 87.6304 292.183 86.8852 cv
292.183 86.1399 292.788 85.5358 293.533 85.5358 cv
294.278 85.5358 294.882 86.1399 294.882 86.8852 cv
cp
.615686 .733333 .788235 rgb
f
304.253 87.7642 mo
304.253 88.5094 303.649 89.1136 302.904 89.1136 cv
302.159 89.1136 301.555 88.5094 301.555 87.7642 cv
301.555 87.019 302.159 86.4149 302.904 86.4149 cv
303.649 86.4149 304.253 87.019 304.253 87.7642 cv
cp
f
289.208 110.064 mo
289.208 110.809 288.604 111.413 287.859 111.413 cv
287.113 111.413 286.509 110.809 286.509 110.064 cv
286.509 109.318 287.113 108.714 287.859 108.714 cv
288.604 108.714 289.208 109.318 289.208 110.064 cv
cp
f
268.497 108.47 mo
268.497 109.216 267.893 109.82 267.148 109.82 cv
266.403 109.82 265.798 109.216 265.798 108.47 cv
265.798 107.725 266.403 107.121 267.148 107.121 cv
267.893 107.121 268.497 107.725 268.497 108.47 cv
cp
f
260.266 118.295 mo
260.266 119.04 259.662 119.644 258.916 119.644 cv
258.171 119.644 257.567 119.04 257.567 118.295 cv
257.567 117.55 258.171 116.945 258.916 116.945 cv
259.662 116.945 260.266 117.55 260.266 118.295 cv
cp
f
275.135 114.843 mo
275.135 115.588 274.531 116.192 273.786 116.192 cv
273.041 116.192 272.436 115.588 272.436 114.843 cv
272.436 114.098 273.041 113.494 273.786 113.494 cv
274.531 113.494 275.135 114.098 275.135 114.843 cv
cp
f
283.101 129.181 mo
283.101 129.927 282.497 130.531 281.752 130.531 cv
281.006 130.531 280.402 129.927 280.402 129.181 cv
280.402 128.436 281.006 127.832 281.752 127.832 cv
282.497 127.832 283.101 128.436 283.101 129.181 cv
cp
f
292.129 124.667 mo
292.129 125.413 291.525 126.017 290.78 126.017 cv
290.034 126.017 289.43 125.413 289.43 124.667 cv
289.43 123.922 290.034 123.318 290.78 123.318 cv
291.525 123.318 292.129 123.922 292.129 124.667 cv
cp
f
291.332 133.695 mo
291.332 134.441 290.728 135.045 289.983 135.045 cv
289.238 135.045 288.634 134.441 288.634 133.695 cv
288.634 132.95 289.238 132.346 289.983 132.346 cv
290.728 132.346 291.332 132.95 291.332 133.695 cv
cp
f
296.643 144.051 mo
296.643 144.796 296.039 145.4 295.293 145.4 cv
294.548 145.4 293.944 144.796 293.944 144.051 cv
293.944 143.306 294.548 142.701 295.293 142.701 cv
296.039 142.701 296.643 143.306 296.643 144.051 cv
cp
f
286.818 140.333 mo
286.818 141.079 286.214 141.683 285.469 141.683 cv
284.724 141.683 284.12 141.079 284.12 140.333 cv
284.12 139.588 284.724 138.984 285.469 138.984 cv
286.214 138.984 286.818 139.588 286.818 140.333 cv
cp
f
288.286 154.122 mo
288.286 154.867 287.682 155.472 286.937 155.472 cv
286.191 155.472 285.587 154.867 285.587 154.122 cv
285.587 153.377 286.191 152.773 286.937 152.773 cv
287.682 152.773 288.286 153.377 288.286 154.122 cv
cp
f
297.705 158.92 mo
297.705 159.665 297.101 160.269 296.355 160.269 cv
295.61 160.269 295.006 159.665 295.006 158.92 cv
295.006 158.175 295.61 157.571 296.355 157.571 cv
297.101 157.571 297.705 158.175 297.705 158.92 cv
cp
.439216 .611765 .694118 rgb
f
313.636 161.044 mo
313.636 161.79 313.032 162.394 312.287 162.394 cv
311.542 162.394 310.938 161.79 310.938 161.044 cv
310.938 160.299 311.542 159.695 312.287 159.695 cv
313.032 159.695 313.636 160.299 313.636 161.044 cv
cp
.615686 .733333 .788235 rgb
f
321.337 146.971 mo
321.337 147.717 320.732 148.321 319.987 148.321 cv
319.242 148.321 318.638 147.717 318.638 146.971 cv
318.638 146.226 319.242 145.622 319.987 145.622 cv
320.732 145.622 321.337 146.226 321.337 146.971 cv
cp
.439216 .611765 .694118 rgb
f
307.529 144.051 mo
307.529 144.796 306.925 145.4 306.18 145.4 cv
305.435 145.4 304.831 144.796 304.831 144.051 cv
304.831 143.306 305.435 142.701 306.18 142.701 cv
306.925 142.701 307.529 143.306 307.529 144.051 cv
cp
.615686 .733333 .788235 rgb
f
316.557 130.243 mo
316.557 130.989 315.953 131.593 315.208 131.593 cv
314.463 131.593 313.858 130.989 313.858 130.243 cv
313.858 129.498 314.463 128.894 315.208 128.894 cv
315.953 128.894 316.557 129.498 316.557 130.243 cv
cp
f
305.671 116.436 mo
305.671 117.181 305.066 117.786 304.321 117.786 cv
303.576 117.786 302.972 117.181 302.972 116.436 cv
302.972 115.691 303.576 115.087 304.321 115.087 cv
305.066 115.087 305.671 115.691 305.671 116.436 cv
cp
f
311.778 102.363 mo
311.778 103.109 311.174 103.713 310.428 103.713 cv
309.683 103.713 309.079 103.109 309.079 102.363 cv
309.079 101.618 309.683 101.014 310.428 101.014 cv
311.174 101.014 311.778 101.618 311.778 102.363 cv
cp
f
314.028 82.8313 mo
314.028 83.5764 313.424 84.1806 312.679 84.1806 cv
311.933 84.1806 311.329 83.5764 311.329 82.8313 cv
311.329 82.086 311.933 81.4818 312.679 81.4818 cv
313.424 81.4818 314.028 82.086 314.028 82.8313 cv
cp
f
332.201 82.9801 mo
332.201 83.7253 331.597 84.3294 330.852 84.3294 cv
330.107 84.3294 329.503 83.7253 329.503 82.9801 cv
329.503 82.2348 330.107 81.6307 330.852 81.6307 cv
331.597 81.6307 332.201 82.2348 332.201 82.9801 cv
cp
f
327.156 93.07 mo
327.156 93.8152 326.552 94.4193 325.807 94.4193 cv
325.062 94.4193 324.458 93.8152 324.458 93.07 cv
324.458 92.3247 325.062 91.7206 325.807 91.7206 cv
326.552 91.7206 327.156 92.3247 327.156 93.07 cv
cp
.439216 .611765 .694118 rgb
f
335.388 104.222 mo
335.388 104.967 334.784 105.571 334.038 105.571 cv
333.293 105.571 332.689 104.967 332.689 104.222 cv
332.689 103.477 333.293 102.873 334.038 102.873 cv
334.784 102.873 335.388 103.477 335.388 104.222 cv
cp
.615686 .733333 .788235 rgb
f
344.968 88.025 mo
344.968 88.7702 344.364 89.3744 343.619 89.3744 cv
342.874 89.3744 342.27 88.7702 342.27 88.025 cv
342.27 87.2798 342.874 86.6756 343.619 86.6756 cv
344.364 86.6756 344.968 87.2798 344.968 88.025 cv
cp
f
354.262 90.4147 mo
354.262 91.16 353.658 91.7641 352.912 91.7641 cv
352.167 91.7641 351.563 91.16 351.563 90.4147 cv
351.563 89.6695 352.167 89.0654 352.912 89.0654 cv
353.658 89.0654 354.262 89.6695 354.262 90.4147 cv
cp
f
366.741 87.4939 mo
366.741 88.2392 366.137 88.8433 365.392 88.8433 cv
364.647 88.8433 364.043 88.2392 364.043 87.4939 cv
364.043 86.7487 364.647 86.1445 365.392 86.1445 cv
366.137 86.1445 366.741 86.7487 366.741 87.4939 cv
cp
f
380.814 90.4147 mo
380.814 91.16 380.21 91.7641 379.465 91.7641 cv
378.72 91.7641 378.115 91.16 378.115 90.4147 cv
378.115 89.6695 378.72 89.0654 379.465 89.0654 cv
380.21 89.0654 380.814 89.6695 380.814 90.4147 cv
cp
.439216 .611765 .694118 rgb
f
384 106.081 mo
384 106.826 383.396 107.43 382.651 107.43 cv
381.906 107.43 381.302 106.826 381.302 106.081 cv
381.302 105.335 381.906 104.731 382.651 104.731 cv
383.396 104.731 384 105.335 384 106.081 cv
cp
.615686 .733333 .788235 rgb
f
396.025 107.296 mo
396.025 108.041 395.421 108.645 394.676 108.645 cv
393.931 108.645 393.327 108.041 393.327 107.296 cv
393.327 106.551 393.931 105.947 394.676 105.947 cv
395.421 105.947 396.025 106.551 396.025 107.296 cv
cp
f
398.604 101.567 mo
398.604 102.312 398 102.916 397.255 102.916 cv
396.51 102.916 395.906 102.312 395.906 101.567 cv
395.906 100.822 396.51 100.217 397.255 100.217 cv
398 100.217 398.604 100.822 398.604 101.567 cv
cp
f
404.711 102.363 mo
404.711 103.109 404.107 103.713 403.362 103.713 cv
402.617 103.713 402.013 103.109 402.013 102.363 cv
402.013 101.618 402.617 101.014 403.362 101.014 cv
404.107 101.014 404.711 101.618 404.711 102.363 cv
cp
f
403.118 112.21 mo
403.118 112.955 402.514 113.559 401.769 113.559 cv
401.024 113.559 400.419 112.955 400.419 112.21 cv
400.419 111.464 401.024 110.86 401.769 110.86 cv
402.514 110.86 403.118 111.464 403.118 112.21 cv
cp
f
410.818 120.972 mo
410.818 121.717 410.214 122.321 409.469 122.321 cv
408.724 122.321 408.12 121.717 408.12 120.972 cv
408.12 120.227 408.724 119.622 409.469 119.622 cv
410.214 119.622 410.818 120.227 410.818 120.972 cv
cp
.439216 .611765 .694118 rgb
f
408.678 107.392 mo
408.678 108.137 408.074 108.741 407.329 108.741 cv
406.584 108.741 405.979 108.137 405.979 107.392 cv
405.979 106.647 406.584 106.042 407.329 106.042 cv
408.074 106.042 408.678 106.647 408.678 107.392 cv
cp
.615686 .733333 .788235 rgb
f
418.519 102.098 mo
418.519 102.843 417.915 103.447 417.169 103.447 cv
416.424 103.447 415.82 102.843 415.82 102.098 cv
415.82 101.353 416.424 100.748 417.169 100.748 cv
417.915 100.748 418.519 101.353 418.519 102.098 cv
cp
f
416.129 97.3184 mo
416.129 98.0636 415.525 98.6677 414.78 98.6677 cv
414.034 98.6677 413.43 98.0636 413.43 97.3184 cv
413.43 96.5731 414.034 95.969 414.78 95.969 cv
415.525 95.969 416.129 96.5731 416.129 97.3184 cv
cp
f
423.033 93.8665 mo
423.033 94.6118 422.428 95.216 421.683 95.216 cv
420.938 95.216 420.334 94.6118 420.334 93.8665 cv
420.334 93.1213 420.938 92.5171 421.683 92.5171 cv
422.428 92.5171 423.033 93.1213 423.033 93.8665 cv
cp
f
399.932 92.2734 mo
399.932 93.0186 399.328 93.6228 398.583 93.6228 cv
397.837 93.6228 397.233 93.0186 397.233 92.2734 cv
397.233 91.5282 397.837 90.924 398.583 90.924 cv
399.328 90.924 399.932 91.5282 399.932 92.2734 cv
cp
f
381.345 114.312 mo
381.345 115.057 380.741 115.661 379.996 115.661 cv
379.251 115.661 378.646 115.057 378.646 114.312 cv
378.646 113.567 379.251 112.963 379.996 112.963 cv
380.741 112.963 381.345 113.567 381.345 114.312 cv
cp
f
393.825 119.622 mo
393.825 120.368 393.221 120.972 392.476 120.972 cv
391.73 120.972 391.126 120.368 391.126 119.622 cv
391.126 118.877 391.73 118.273 392.476 118.273 cv
393.221 118.273 393.825 118.877 393.825 119.622 cv
cp
f
391.701 133.961 mo
391.701 134.706 391.097 135.31 390.351 135.31 cv
389.606 135.31 389.002 134.706 389.002 133.961 cv
389.002 133.216 389.606 132.611 390.351 132.611 cv
391.097 132.611 391.701 133.216 391.701 133.961 cv
cp
f
384.266 139.802 mo
384.266 140.548 383.662 141.152 382.917 141.152 cv
382.171 141.152 381.567 140.548 381.567 139.802 cv
381.567 139.057 382.171 138.453 382.917 138.453 cv
383.662 138.453 384.266 139.057 384.266 139.802 cv
cp
f
390.108 147.768 mo
390.108 148.513 389.503 149.117 388.758 149.117 cv
388.013 149.117 387.409 148.513 387.409 147.768 cv
387.409 147.023 388.013 146.419 388.758 146.419 cv
389.503 146.419 390.108 147.023 390.108 147.768 cv
cp
f
375.504 138.475 mo
375.504 139.22 374.9 139.824 374.154 139.824 cv
373.409 139.824 372.805 139.22 372.805 138.475 cv
372.805 137.729 373.409 137.125 374.154 137.125 cv
374.9 137.125 375.504 137.729 375.504 138.475 cv
cp
f
385.328 151.485 mo
385.328 152.231 384.724 152.835 383.979 152.835 cv
383.234 152.835 382.629 152.231 382.629 151.485 cv
382.629 150.74 383.234 150.136 383.979 150.136 cv
384.724 150.136 385.328 150.74 385.328 151.485 cv
cp
f
382.938 164.496 mo
382.938 165.241 382.334 165.846 381.589 165.846 cv
380.844 165.846 380.24 165.241 380.24 164.496 cv
380.24 163.751 380.844 163.147 381.589 163.147 cv
382.334 163.147 382.938 163.751 382.938 164.496 cv
cp
f
369.397 169.541 mo
369.397 170.286 368.792 170.89 368.047 170.89 cv
367.302 170.89 366.698 170.286 366.698 169.541 cv
366.698 168.796 367.302 168.192 368.047 168.192 cv
368.792 168.192 369.397 168.796 369.397 169.541 cv
cp
f
368.6 175.648 mo
368.6 176.393 367.996 176.998 367.251 176.998 cv
366.505 176.998 365.901 176.393 365.901 175.648 cv
365.901 174.903 366.505 174.299 367.251 174.299 cv
367.996 174.299 368.6 174.903 368.6 175.648 cv
cp
f
372.848 183.879 mo
372.848 184.625 372.244 185.229 371.499 185.229 cv
370.754 185.229 370.15 184.625 370.15 183.879 cv
370.15 183.134 370.754 182.53 371.499 182.53 cv
372.244 182.53 372.848 183.134 372.848 183.879 cv
cp
f
368.298 188.963 mo
368.298 189.708 367.694 190.312 366.949 190.312 cv
366.204 190.312 365.6 189.708 365.6 188.963 cv
365.6 188.218 366.204 187.613 366.949 187.613 cv
367.694 187.613 368.298 188.218 368.298 188.963 cv
cp
f
360.9 182.552 mo
360.9 183.297 360.296 183.901 359.55 183.901 cv
358.805 183.901 358.201 183.297 358.201 182.552 cv
358.201 181.807 358.805 181.202 359.55 181.202 cv
360.296 181.202 360.9 181.807 360.9 182.552 cv
cp
f
365.679 200.873 mo
365.679 201.618 365.075 202.222 364.33 202.222 cv
363.585 202.222 362.981 201.618 362.981 200.873 cv
362.981 200.128 363.585 199.524 364.33 199.524 cv
365.075 199.524 365.679 200.128 365.679 200.873 cv
cp
f
359.041 192.376 mo
359.041 193.122 358.437 193.726 357.692 193.726 cv
356.947 193.726 356.342 193.122 356.342 192.376 cv
356.342 191.631 356.947 191.027 357.692 191.027 cv
358.437 191.027 359.041 191.631 359.041 192.376 cv
cp
f
356.612 176.706 mo
356.612 177.451 356.008 178.055 355.263 178.055 cv
354.518 178.055 353.914 177.451 353.914 176.706 cv
353.914 175.961 354.518 175.357 355.263 175.357 cv
356.008 175.357 356.612 175.961 356.612 176.706 cv
cp
f
350.544 174.342 mo
350.544 175.088 349.94 175.692 349.195 175.692 cv
348.45 175.692 347.846 175.088 347.846 174.342 cv
347.846 173.597 348.45 172.993 349.195 172.993 cv
349.94 172.993 350.544 173.597 350.544 174.342 cv
cp
f
346.562 166.377 mo
346.562 167.122 345.957 167.726 345.212 167.726 cv
344.467 167.726 343.863 167.122 343.863 166.377 cv
343.863 165.631 344.467 165.027 345.212 165.027 cv
345.957 165.027 346.562 165.631 346.562 166.377 cv
cp
f
334.082 177.794 mo
334.082 178.539 333.478 179.144 332.732 179.144 cv
331.987 179.144 331.383 178.539 331.383 177.794 cv
331.383 177.049 331.987 176.445 332.732 176.445 cv
333.478 176.445 334.082 177.049 334.082 177.794 cv
cp
f
330.364 189.455 mo
330.364 190.201 329.76 190.805 329.015 190.805 cv
328.27 190.805 327.666 190.201 327.666 189.455 cv
327.666 188.71 328.27 188.106 329.015 188.106 cv
329.76 188.106 330.364 188.71 330.364 189.455 cv
cp
f
336.471 193.704 mo
336.471 194.449 335.867 195.053 335.122 195.053 cv
334.377 195.053 333.773 194.449 333.773 193.704 cv
333.773 192.959 334.377 192.354 335.122 192.354 cv
335.867 192.354 336.471 192.959 336.471 193.704 cv
cp
f
323.195 174.852 mo
323.195 175.597 322.591 176.201 321.846 176.201 cv
321.101 176.201 320.497 175.597 320.497 174.852 cv
320.497 174.106 321.101 173.502 321.846 173.502 cv
322.591 173.502 323.195 174.106 323.195 174.852 cv
cp
.439216 .611765 .694118 rgb
f
322.399 165.027 mo
322.399 165.772 321.795 166.377 321.049 166.377 cv
320.304 166.377 319.7 165.772 319.7 165.027 cv
319.7 164.282 320.304 163.678 321.049 163.678 cv
321.795 163.678 322.399 164.282 322.399 165.027 cv
cp
.615686 .733333 .788235 rgb
f
301.422 165.558 mo
301.422 166.303 300.818 166.908 300.073 166.908 cv
299.328 166.908 298.723 166.303 298.723 165.558 cv
298.723 164.813 299.328 164.209 300.073 164.209 cv
300.818 164.209 301.422 164.813 301.422 165.558 cv
cp
f
295.846 178.06 mo
295.846 178.805 295.242 179.409 294.497 179.409 cv
293.752 179.409 293.147 178.805 293.147 178.06 cv
293.147 177.314 293.752 176.71 294.497 176.71 cv
295.242 176.71 295.846 177.314 295.846 178.06 cv
cp
f
284.429 182.308 mo
284.429 183.053 283.825 183.657 283.079 183.657 cv
282.334 183.657 281.73 183.053 281.73 182.308 cv
281.73 181.563 282.334 180.959 283.079 180.959 cv
283.825 180.959 284.429 181.563 284.429 182.308 cv
cp
f
282.57 175.117 mo
282.57 175.862 281.966 176.467 281.221 176.467 cv
280.475 176.467 279.871 175.862 279.871 175.117 cv
279.871 174.372 280.475 173.768 281.221 173.768 cv
281.966 173.768 282.57 174.372 282.57 175.117 cv
cp
.439216 .611765 .694118 rgb
f
274.339 161.841 mo
274.339 162.586 273.735 163.19 272.989 163.19 cv
272.244 163.19 271.64 162.586 271.64 161.841 cv
271.64 161.096 272.244 160.492 272.989 160.492 cv
273.735 160.492 274.339 161.096 274.339 161.841 cv
cp
.615686 .733333 .788235 rgb
f
269.028 156.53 mo
269.028 157.276 268.424 157.88 267.679 157.88 cv
266.934 157.88 266.329 157.276 266.329 156.53 cv
266.329 155.785 266.934 155.181 267.679 155.181 cv
268.424 155.181 269.028 155.785 269.028 156.53 cv
cp
f
270.786 151.308 mo
270.786 152.053 270.182 152.657 269.437 152.657 cv
268.692 152.657 268.087 152.053 268.087 151.308 cv
268.087 150.562 268.692 149.958 269.437 149.958 cv
270.182 149.958 270.786 150.562 270.786 151.308 cv
cp
f
280.711 149.627 mo
280.711 150.372 280.107 150.976 279.362 150.976 cv
278.617 150.976 278.013 150.372 278.013 149.627 cv
278.013 148.882 278.617 148.277 279.362 148.277 cv
280.107 148.277 280.711 148.882 280.711 149.627 cv
cp
f
292.394 163.434 mo
292.394 164.179 291.79 164.783 291.045 164.783 cv
290.3 164.783 289.696 164.179 289.696 163.434 cv
289.696 162.689 290.3 162.085 291.045 162.085 cv
291.79 162.085 292.394 162.689 292.394 163.434 cv
cp
f
339.392 148.299 mo
339.392 149.044 338.788 149.649 338.043 149.649 cv
337.298 149.649 336.694 149.044 336.694 148.299 cv
336.694 147.554 337.298 146.95 338.043 146.95 cv
338.788 146.95 339.392 147.554 339.392 148.299 cv
cp
f
362.493 148.83 mo
362.493 149.575 361.889 150.18 361.144 150.18 cv
360.398 150.18 359.794 149.575 359.794 148.83 cv
359.794 148.085 360.398 147.481 361.144 147.481 cv
361.889 147.481 362.493 148.085 362.493 148.83 cv
cp
f
365.945 128.65 mo
365.945 129.396 365.341 130 364.595 130 cv
363.85 130 363.246 129.396 363.246 128.65 cv
363.246 127.905 363.85 127.301 364.595 127.301 cv
365.341 127.301 365.945 127.905 365.945 128.65 cv
cp
.439216 .611765 .694118 rgb
f
346.03 131.04 mo
346.03 131.785 345.426 132.389 344.681 132.389 cv
343.936 132.389 343.332 131.785 343.332 131.04 cv
343.332 130.295 343.936 129.691 344.681 129.691 cv
345.426 129.691 346.03 130.295 346.03 131.04 cv
cp
.615686 .733333 .788235 rgb
f
356.651 113.781 mo
356.651 114.526 356.047 115.13 355.302 115.13 cv
354.557 115.13 353.953 114.526 353.953 113.781 cv
353.953 113.036 354.557 112.432 355.302 112.432 cv
356.047 112.432 356.651 113.036 356.651 113.781 cv
cp
f
368.069 99.7081 mo
368.069 100.453 367.465 101.057 366.72 101.057 cv
365.974 101.057 365.37 100.453 365.37 99.7081 cv
365.37 98.9629 365.974 98.3587 366.72 98.3587 cv
367.465 98.3587 368.069 98.9629 368.069 99.7081 cv
cp
.439216 .611765 .694118 rgb
f
335.144 121.216 mo
335.144 121.961 334.54 122.565 333.795 122.565 cv
333.049 122.565 332.445 121.961 332.445 121.216 cv
332.445 120.47 333.049 119.866 333.795 119.866 cv
334.54 119.866 335.144 120.47 335.144 121.216 cv
cp
.615686 .733333 .788235 rgb
f
212.818 141.336 mo
220.159 156.812 li
217.183 144.709 li
212.818 141.336 li
cp
221.486 160.538 mo
211.745 140.003 li
217.536 144.479 li
221.486 160.538 li
cp
f
217.454 144.784 mo
211.762 150.815 li
235.035 142.793 li
217.454 144.784 li
cp
210.361 151.719 mo
217.264 144.404 li
217.337 144.396 li
238.588 141.99 li
210.361 151.719 li
cp
f
236.582 142.909 mo
222.048 157.711 li
236.22 149.245 li
236.582 142.909 li
cp
219.596 159.64 mo
237.041 141.874 li
236.606 149.478 li
219.596 159.64 li
cp
f
211.115 151.682 mo
204.429 160.14 li
220.043 158.459 li
211.115 151.682 li
cp
203.078 160.887 mo
211.009 150.852 li
221.601 158.892 li
203.078 160.887 li
cp
f
251.488 149.418 mo
250.225 154.29 li
260.69 152.486 li
251.488 149.418 li
cp
249.685 154.788 mo
251.21 148.906 li
262.32 152.609 li
249.685 154.788 li
cp
f
262.073 152.662 mo
267.567 156.029 li
268.985 151.598 li
262.073 152.662 li
cp
267.792 156.634 mo
260.938 152.433 li
269.56 151.107 li
267.792 156.634 li
cp
f
249.841 154.593 mo
258.533 164.608 li
267.226 156.482 li
249.841 154.593 li
cp
258.503 165.181 mo
258.368 165.025 li
248.874 154.087 li
268.132 156.18 li
258.503 165.181 li
cp
f
267.706 157.058 mo
262.168 179.587 li
274.387 177.678 li
267.706 157.058 li
cp
261.638 180.073 mo
267.652 155.604 li
274.91 177.999 li
261.638 180.073 li
cp
f
258.374 165.608 mo
246.062 182.77 li
261.545 179.599 li
258.374 165.608 li
cp
244.688 183.661 mo
258.662 164.181 li
262.262 180.061 li
244.688 183.661 li
cp
f
236.688 149.681 mo
239.329 161.564 li
248.949 154.396 li
236.688 149.681 li
cp
239.074 162.25 mo
236.138 149.042 li
249.766 154.284 li
239.074 162.25 li
cp
f
201.022 170.118 mo
213.788 172.558 li
203.838 160.918 li
201.022 170.118 li
cp
214.829 173.162 mo
200.511 170.425 li
203.67 160.108 li
214.829 173.162 li
cp
f
200.769 180.883 mo
218.849 186.909 li
200.957 170.713 li
200.769 180.883 li
cp
220.522 187.887 mo
200.366 181.168 li
200.576 169.83 li
220.522 187.887 li
cp
f
214.524 172.868 mo
219.526 186.392 li
220.584 159.672 li
214.524 172.868 li
cp
219.845 188.403 mo
214.093 172.852 li
214.127 172.777 li
221.061 157.678 li
219.845 188.403 li
cp
f
201.354 181.602 mo
211.55 195.691 li
219.15 187.534 li
201.354 181.602 li
cp
211.491 196.629 mo
199.781 180.448 li
220.221 187.262 li
211.491 196.629 li
cp
f
219.708 187.665 mo
212.052 195.882 li
227.551 193.641 li
219.708 187.665 li
cp
210.989 196.438 mo
219.662 187.13 li
228.548 193.899 li
210.989 196.438 li
cp
f
232.888 177.143 mo
245.061 182.848 li
239.165 162.498 li
232.888 177.143 li
cp
245.688 183.583 mo
232.371 177.34 li
239.237 161.317 li
245.688 183.583 li
cp
f
220.011 187.395 mo
227.936 193.433 li
232.276 177.772 li
220.011 187.395 li
cp
228.163 194.107 mo
219.36 187.4 li
232.983 176.711 li
228.163 194.107 li
cp
f
221.233 158.95 mo
232.595 176.816 li
238.919 162.06 li
221.233 158.95 li
cp
232.664 177.667 mo
220.412 158.401 li
239.483 161.755 li
232.664 177.667 li
cp
f
228.599 193.785 mo
235.527 198.526 li
244.461 184.122 li
228.599 193.785 li
cp
235.706 199.371 mo
227.499 193.756 li
246.288 182.309 li
235.706 199.371 li
cp
f
235.776 199.155 mo
234.294 206.006 li
251.145 199.896 li
235.776 199.155 li
cp
233.753 206.626 mo
235.457 198.742 li
235.626 198.749 li
253.146 199.594 li
233.753 206.626 li
cp
f
262.357 180.191 mo
266.99 187.789 li
282.371 186.863 li
262.357 180.191 li
cp
266.775 188.201 mo
261.45 179.469 li
284.451 187.136 li
266.775 188.201 li
cp
f
275.659 178.607 mo
283.138 186.427 li
282.629 182.347 li
275.659 178.607 li
cp
283.683 187.572 mo
273.639 177.07 li
282.999 182.093 li
283.683 187.572 li
cp
f
283.653 187.137 mo
286.643 198.534 li
292.621 184.52 li
283.653 187.137 li
cp
286.553 199.761 mo
283.169 186.862 li
293.318 183.902 li
286.553 199.761 li
cp
f
245.867 183.631 mo
252.271 199.263 li
266.207 188.151 li
245.867 183.631 li
cp
252.021 200.227 mo
244.882 182.8 li
267.557 187.839 li
252.021 200.227 li
cp
f
267.381 188.62 mo
271.665 202.963 li
285.822 199.052 li
267.381 188.62 li
cp
271.26 203.695 mo
266.384 187.37 li
287.373 199.243 li
271.26 203.695 li
cp
f
253.599 200.597 mo
275.768 210.93 li
285.913 199.47 li
253.599 200.597 li
cp
275.92 211.66 mo
251.091 200.087 li
287.282 198.825 li
275.92 211.66 li
cp
f
267.11 213.662 mo
277.581 228.434 li
271.411 203.938 li
267.11 213.662 li
cp
278.488 230.4 mo
266.655 213.707 li
266.7 213.603 li
271.514 202.72 li
278.488 230.4 li
cp
f
283.275 231.039 mo
288.257 238.235 li
289.917 224.951 li
283.275 231.039 li
cp
288.523 239.318 mo
282.75 230.981 li
290.447 223.926 li
288.523 239.318 li
cp
f
283.18 231.602 mo
282.446 245.188 li
288.137 238.762 li
283.18 231.602 li
cp
281.987 246.303 mo
282.845 230.419 li
288.642 238.792 li
281.987 246.303 li
cp
f
234.465 206.62 mo
240.893 216.262 li
265.661 213.614 li
234.465 206.62 li
cp
240.696 216.683 mo
240.629 216.583 li
233.582 206.013 li
234.067 206.122 li
268.104 213.754 li
240.696 216.683 li
cp
f
241.082 216.413 mo
253.126 223.678 li
252.17 200.928 li
241.082 216.413 li
cp
253.555 224.401 mo
240.507 216.532 li
252.52 199.757 li
253.555 224.401 li
cp
f
253.628 224.071 mo
261.216 232.987 li
266.528 214.206 li
253.628 224.071 li
cp
261.396 233.813 mo
253.053 224.009 li
267.237 213.163 li
261.396 233.813 li
cp
f
262.566 233.407 mo
270 235.265 li
276.759 230.028 li
262.566 233.407 li
cp
270.137 235.915 mo
260.046 233.393 li
279.31 228.806 li
270.137 235.915 li
cp
f
270.122 236.1 mo
267.248 245.621 li
272.996 241.31 li
270.122 236.1 li
cp
266.517 246.668 mo
270.014 235.08 li
273.513 241.422 li
273.374 241.525 li
266.517 246.668 li
cp
f
241.044 216.856 mo
242.161 225.604 li
252.77 223.928 li
241.044 216.856 li
cp
241.818 226.06 mo
240.545 216.089 li
253.911 224.151 li
241.818 226.06 li
cp
f
238.72 231.738 mo
259.435 232.988 li
242.113 226.201 li
238.72 231.738 li
cp
263.177 233.813 mo
237.691 232.274 li
241.866 225.463 li
263.177 233.813 li
cp
f
243.386 242.289 mo
265.024 245.561 li
238.841 232.652 li
243.386 242.289 li
cp
268.741 246.728 mo
242.982 242.832 li
237.571 231.36 li
268.741 246.728 li
cp
f
243.377 242.844 mo
243.191 250.459 li
254.892 247.116 li
243.377 242.844 li
cp
242.779 250.991 mo
242.992 242.277 li
256.17 247.165 li
242.779 250.991 li
cp
f
255.81 247.316 mo
259.753 257.833 li
266.514 246.377 li
255.81 247.316 li
cp
259.673 258.752 mo
255.253 246.965 li
267.251 245.912 li
259.673 258.752 li
cp
f
243.42 251.14 mo
248.663 261.439 li
259.149 258.256 li
243.42 251.14 li
cp
248.459 261.917 mo
242.55 250.31 li
260.277 258.329 li
248.459 261.917 li
cp
f
253.584 224.615 mo
255.267 246.867 li
260.876 232.843 li
253.584 224.615 li
cp
254.999 248.609 mo
253.097 223.465 li
261.338 232.763 li
254.999 248.609 li
cp
f
218.709 144.594 mo
218.709 145.339 218.105 145.943 217.359 145.943 cv
216.614 145.943 216.01 145.339 216.01 144.594 cv
216.01 143.849 216.614 143.245 217.359 143.245 cv
218.105 143.245 218.709 143.849 218.709 144.594 cv
cp
f
212.476 151.288 mo
212.476 152.034 211.872 152.638 211.127 152.638 cv
210.382 152.638 209.777 152.034 209.777 151.288 cv
209.777 150.543 210.382 149.939 211.127 149.939 cv
211.872 149.939 212.476 150.543 212.476 151.288 cv
cp
f
205.089 160.753 mo
205.089 161.498 204.485 162.102 203.74 162.102 cv
202.995 162.102 202.391 161.498 202.391 160.753 cv
202.391 160.007 202.995 159.403 203.74 159.403 cv
204.485 159.403 205.089 160.007 205.089 160.753 cv
cp
f
202.089 170.217 mo
202.089 170.962 201.484 171.566 200.739 171.566 cv
199.994 171.566 199.39 170.962 199.39 170.217 cv
199.39 169.472 199.994 168.868 200.739 168.868 cv
201.484 168.868 202.089 169.472 202.089 170.217 cv
cp
f
201.858 180.836 mo
201.858 181.581 201.254 182.185 200.508 182.185 cv
199.763 182.185 199.159 181.581 199.159 180.836 cv
199.159 180.09 199.763 179.486 200.508 179.486 cv
201.254 179.486 201.858 180.09 201.858 180.836 cv
cp
f
212.938 195.84 mo
212.938 196.585 212.334 197.189 211.589 197.189 cv
210.843 197.189 210.239 196.585 210.239 195.84 cv
210.239 195.095 210.843 194.491 211.589 194.491 cv
212.334 194.491 212.938 195.095 212.938 195.84 cv
cp
f
229.558 193.763 mo
229.558 194.508 228.954 195.112 228.209 195.112 cv
227.464 195.112 226.86 194.508 226.86 193.763 cv
226.86 193.017 227.464 192.413 228.209 192.413 cv
228.954 192.413 229.558 193.017 229.558 193.763 cv
cp
f
237.176 198.841 mo
237.176 199.586 236.572 200.19 235.827 200.19 cv
235.081 200.19 234.477 199.586 234.477 198.841 cv
234.477 198.096 235.081 197.492 235.827 197.492 cv
236.572 197.492 237.176 198.096 237.176 198.841 cv
cp
f
235.791 205.997 mo
235.791 206.742 235.187 207.346 234.442 207.346 cv
233.696 207.346 233.092 206.742 233.092 205.997 cv
233.092 205.252 233.696 204.648 234.442 204.648 cv
235.187 204.648 235.791 205.252 235.791 205.997 cv
cp
.439216 .611765 .694118 rgb
f
242.254 216.615 mo
242.254 217.361 241.65 217.965 240.905 217.965 cv
240.16 217.965 239.556 217.361 239.556 216.615 cv
239.556 215.87 240.16 215.266 240.905 215.266 cv
241.65 215.266 242.254 215.87 242.254 216.615 cv
cp
.615686 .733333 .788235 rgb
f
243.178 225.849 mo
243.178 226.594 242.574 227.198 241.828 227.198 cv
241.083 227.198 240.479 226.594 240.479 225.849 cv
240.479 225.104 241.083 224.5 241.828 224.5 cv
242.574 224.5 243.178 225.104 243.178 225.849 cv
cp
f
239.715 232.082 mo
239.715 232.827 239.111 233.431 238.366 233.431 cv
237.62 233.431 237.016 232.827 237.016 232.082 cv
237.016 231.336 237.62 230.732 238.366 230.732 cv
239.111 230.732 239.715 231.336 239.715 232.082 cv
cp
f
244.794 242.238 mo
244.794 242.984 244.189 243.588 243.444 243.588 cv
242.699 243.588 242.095 242.984 242.095 242.238 cv
242.095 241.493 242.699 240.889 243.444 240.889 cv
244.189 240.889 244.794 241.493 244.794 242.238 cv
cp
f
244.563 250.549 mo
244.563 251.294 243.959 251.898 243.213 251.898 cv
242.468 251.898 241.864 251.294 241.864 250.549 cv
241.864 249.803 242.468 249.199 243.213 249.199 cv
243.959 249.199 244.563 249.803 244.563 250.549 cv
cp
f
250.103 261.86 mo
250.103 262.605 249.499 263.209 248.753 263.209 cv
248.008 263.209 247.404 262.605 247.404 261.86 cv
247.404 261.114 248.008 260.51 248.753 260.51 cv
249.499 260.51 250.103 261.114 250.103 261.86 cv
cp
f
261.183 258.397 mo
261.183 259.142 260.579 259.746 259.834 259.746 cv
259.088 259.746 258.484 259.142 258.484 258.397 cv
258.484 257.652 259.088 257.048 259.834 257.048 cv
260.579 257.048 261.183 257.652 261.183 258.397 cv
cp
f
268.57 246.163 mo
268.57 246.908 267.966 247.512 267.22 247.512 cv
266.475 247.512 265.871 246.908 265.871 246.163 cv
265.871 245.417 266.475 244.813 267.22 244.813 cv
267.966 244.813 268.57 245.417 268.57 246.163 cv
cp
.439216 .611765 .694118 rgb
f
274.341 241.777 mo
274.341 242.522 273.737 243.126 272.991 243.126 cv
272.246 243.126 271.642 242.522 271.642 241.777 cv
271.642 241.031 272.246 240.427 272.991 240.427 cv
273.737 240.427 274.341 241.031 274.341 241.777 cv
cp
.615686 .733333 .788235 rgb
f
271.571 235.775 mo
271.571 236.52 270.967 237.124 270.221 237.124 cv
269.476 237.124 268.872 236.52 268.872 235.775 cv
268.872 235.03 269.476 234.426 270.221 234.426 cv
270.967 234.426 271.571 235.03 271.571 235.775 cv
cp
f
279.419 229.542 mo
279.419 230.288 278.815 230.892 278.07 230.892 cv
277.325 230.892 276.72 230.288 276.72 229.542 cv
276.72 228.797 277.325 228.193 278.07 228.193 cv
278.815 228.193 279.419 228.797 279.419 229.542 cv
cp
f
277.111 211.537 mo
277.111 212.282 276.507 212.886 275.761 212.886 cv
275.016 212.886 274.412 212.282 274.412 211.537 cv
274.412 210.792 275.016 210.188 275.761 210.188 cv
276.507 210.188 277.111 210.792 277.111 211.537 cv
cp
.439216 .611765 .694118 rgb
f
287.96 199.072 mo
287.96 199.817 287.356 200.421 286.611 200.421 cv
285.866 200.421 285.262 199.817 285.262 199.072 cv
285.262 198.326 285.866 197.722 286.611 197.722 cv
287.356 197.722 287.96 198.326 287.96 199.072 cv
cp
.615686 .733333 .788235 rgb
f
294.424 184.529 mo
294.424 185.274 293.82 185.878 293.074 185.878 cv
292.329 185.878 291.725 185.274 291.725 184.529 cv
291.725 183.784 292.329 183.18 293.074 183.18 cv
293.82 183.18 294.424 183.784 294.424 184.529 cv
cp
f
284.498 187.068 mo
284.498 187.813 283.893 188.418 283.148 188.418 cv
282.403 188.418 281.799 187.813 281.799 187.068 cv
281.799 186.323 282.403 185.719 283.148 185.719 cv
283.893 185.719 284.498 186.323 284.498 187.068 cv
cp
f
275.726 177.835 mo
275.726 178.58 275.122 179.184 274.376 179.184 cv
273.631 179.184 273.027 178.58 273.027 177.835 cv
273.027 177.089 273.631 176.485 274.376 176.485 cv
275.122 176.485 275.726 177.089 275.726 177.835 cv
cp
f
260.029 164.677 mo
260.029 165.422 259.425 166.026 258.68 166.026 cv
257.934 166.026 257.33 165.422 257.33 164.677 cv
257.33 163.932 257.934 163.328 258.68 163.328 cv
259.425 163.328 260.029 163.932 260.029 164.677 cv
cp
.439216 .611765 .694118 rgb
f
262.799 152.904 mo
262.799 153.649 262.195 154.254 261.45 154.254 cv
260.704 154.254 260.1 153.649 260.1 152.904 cv
260.1 152.159 260.704 151.555 261.45 151.555 cv
262.195 151.555 262.799 152.159 262.799 152.904 cv
cp
.615686 .733333 .788235 rgb
f
252.642 149.903 mo
252.642 150.649 252.038 151.253 251.293 151.253 cv
250.547 151.253 249.943 150.649 249.943 149.903 cv
249.943 149.158 250.547 148.554 251.293 148.554 cv
252.038 148.554 252.642 149.158 252.642 149.903 cv
cp
f
251.026 154.52 mo
251.026 155.265 250.422 155.869 249.677 155.869 cv
248.932 155.869 248.327 155.265 248.327 154.52 cv
248.327 153.775 248.932 153.171 249.677 153.171 cv
250.422 153.171 251.026 153.775 251.026 154.52 cv
cp
f
237.638 149.211 mo
237.638 149.956 237.033 150.56 236.288 150.56 cv
235.543 150.56 234.939 149.956 234.939 149.211 cv
234.939 148.466 235.543 147.861 236.288 147.861 cv
237.033 147.861 237.638 148.466 237.638 149.211 cv
cp
f
238.099 142.286 mo
238.099 143.031 237.495 143.635 236.75 143.635 cv
236.005 143.635 235.401 143.031 235.401 142.286 cv
235.401 141.54 236.005 140.936 236.75 140.936 cv
237.495 140.936 238.099 141.54 238.099 142.286 cv
cp
f
222.172 158.675 mo
222.172 159.42 221.567 160.025 220.822 160.025 cv
220.077 160.025 219.473 159.42 219.473 158.675 cv
219.473 157.93 220.077 157.326 220.822 157.326 cv
221.567 157.326 222.172 157.93 222.172 158.675 cv
cp
f
240.869 161.676 mo
240.869 162.421 240.265 163.025 239.52 163.025 cv
238.775 163.025 238.171 162.421 238.171 161.676 cv
238.171 160.931 238.775 160.327 239.52 160.327 cv
240.265 160.327 240.869 160.931 240.869 161.676 cv
cp
f
215.708 172.987 mo
215.708 173.732 215.104 174.336 214.359 174.336 cv
213.613 174.336 213.009 173.732 213.009 172.987 cv
213.009 172.242 213.613 171.638 214.359 171.638 cv
215.104 171.638 215.708 172.242 215.708 172.987 cv
cp
f
221.017 187.299 mo
221.017 188.044 220.413 188.648 219.668 188.648 cv
218.923 188.648 218.319 188.044 218.319 187.299 cv
218.319 186.554 218.923 185.95 219.668 185.95 cv
220.413 185.95 221.017 186.554 221.017 187.299 cv
cp
f
233.944 177.142 mo
233.944 177.887 233.34 178.492 232.595 178.492 cv
231.85 178.492 231.245 177.887 231.245 177.142 cv
231.245 176.397 231.85 175.793 232.595 175.793 cv
233.34 175.793 233.944 176.397 233.944 177.142 cv
cp
f
246.64 183.375 mo
246.64 184.12 246.036 184.724 245.291 184.724 cv
244.546 184.724 243.941 184.12 243.941 183.375 cv
243.941 182.63 244.546 182.025 245.291 182.025 cv
246.036 182.025 246.64 182.63 246.64 183.375 cv
cp
f
263.491 179.912 mo
263.491 180.657 262.887 181.262 262.142 181.262 cv
261.397 181.262 260.793 180.657 260.793 179.912 cv
260.793 179.167 261.397 178.563 262.142 178.563 cv
262.887 178.563 263.491 179.167 263.491 179.912 cv
cp
f
268.339 187.992 mo
268.339 188.737 267.735 189.341 266.99 189.341 cv
266.244 189.341 265.64 188.737 265.64 187.992 cv
265.64 187.246 266.244 186.642 266.99 186.642 cv
267.735 186.642 268.339 187.246 268.339 187.992 cv
cp
.439216 .611765 .694118 rgb
f
253.796 199.995 mo
253.796 200.74 253.192 201.344 252.447 201.344 cv
251.702 201.344 251.098 200.74 251.098 199.995 cv
251.098 199.25 251.702 198.646 252.447 198.646 cv
253.192 198.646 253.796 199.25 253.796 199.995 cv
cp
.615686 .733333 .788235 rgb
f
272.956 203.458 mo
272.956 204.203 272.352 204.807 271.606 204.807 cv
270.861 204.807 270.257 204.203 270.257 203.458 cv
270.257 202.712 270.861 202.108 271.606 202.108 cv
272.352 202.108 272.956 202.712 272.956 203.458 cv
cp
f
268.57 214.076 mo
268.57 214.821 267.966 215.426 267.22 215.426 cv
266.475 215.426 265.871 214.821 265.871 214.076 cv
265.871 213.331 266.475 212.727 267.22 212.727 cv
267.966 212.727 268.57 213.331 268.57 214.076 cv
cp
f
254.489 224.464 mo
254.489 225.209 253.885 225.813 253.139 225.813 cv
252.394 225.813 251.79 225.209 251.79 224.464 cv
251.79 223.719 252.394 223.114 253.139 223.114 cv
253.885 223.114 254.489 223.719 254.489 224.464 cv
cp
f
262.568 233.236 mo
262.568 233.981 261.964 234.585 261.219 234.585 cv
260.473 234.585 259.869 233.981 259.869 233.236 cv
259.869 232.49 260.473 231.886 261.219 231.886 cv
261.964 231.886 262.568 232.49 262.568 233.236 cv
cp
.439216 .611765 .694118 rgb
f
256.797 247.317 mo
256.797 248.062 256.193 248.666 255.448 248.666 cv
254.703 248.666 254.098 248.062 254.098 247.317 cv
254.098 246.572 254.703 245.967 255.448 245.967 cv
256.193 245.967 256.797 246.572 256.797 247.317 cv
cp
.615686 .733333 .788235 rgb
f
283.574 245.932 mo
283.574 246.677 282.97 247.281 282.225 247.281 cv
281.48 247.281 280.876 246.677 280.876 245.932 cv
280.876 245.187 281.48 244.582 282.225 244.582 cv
282.97 244.582 283.574 245.187 283.574 245.932 cv
cp
f
291.423 224.464 mo
291.423 225.209 290.819 225.813 290.073 225.813 cv
289.328 225.813 288.724 225.209 288.724 224.464 cv
288.724 223.719 289.328 223.114 290.073 223.114 cv
290.819 223.114 291.423 223.719 291.423 224.464 cv
cp
f
289.576 238.776 mo
289.576 239.521 288.972 240.125 288.227 240.125 cv
287.481 240.125 286.877 239.521 286.877 238.776 cv
286.877 238.031 287.481 237.426 288.227 237.426 cv
288.972 237.426 289.576 238.031 289.576 238.776 cv
cp
f
284.498 231.158 mo
284.498 231.903 283.893 232.508 283.148 232.508 cv
282.403 232.508 281.799 231.903 281.799 231.158 cv
281.799 230.413 282.403 229.809 283.148 229.809 cv
283.893 229.809 284.498 230.413 284.498 231.158 cv
cp
f
232.772 177.039 mo
261.758 179.756 li
239.566 161.866 li
232.772 177.039 li
cp
262.526 180.068 mo
262.131 180.031 li
232.418 177.246 li
232.486 177.094 li
239.474 161.486 li
262.526 180.068 li
cp
.517647 .666667 .733333 rgb
f
252.537 200.238 mo
267.052 213.756 li
262.081 180.316 li
252.537 200.238 li
cp
267.389 214.396 mo
252.246 200.293 li
252.284 200.214 li
262.203 179.509 li
267.389 214.396 li
cp
f
253.256 224.367 mo
282.775 230.953 li
252.521 200.564 li
253.256 224.367 li
cp
283.522 231.364 mo
253.023 224.56 li
253.021 224.467 li
252.262 199.967 li
252.476 200.181 li
283.522 231.364 li
cp
f
200.992 170.284 mo
219.653 187.124 li
239.223 161.863 li
200.992 170.284 li
cp
219.684 187.474 mo
219.588 187.388 li
200.487 170.151 li
239.816 161.488 li
219.684 187.474 li
cp
f
235.954 149.915 mo
232.806 176.378 li
239.393 161.667 li
235.954 149.915 li
cp
232.383 177.906 mo
235.855 148.725 li
239.647 161.685 li
232.383 177.906 li
cp
f
219.907 187.263 mo
251.883 199.564 li
232.579 177.307 li
219.907 187.263 li
cp
252.691 200.131 mo
219.429 187.335 li
232.611 176.978 li
232.685 177.064 li
252.691 200.131 li
cp
f
253.129 225.584 mo
248.959 261.137 li
255.269 247.595 li
253.129 225.584 li
cp
248.549 262.583 mo
253.151 223.344 li
255.514 247.636 li
255.5 247.666 li
248.549 262.583 li
cp
f
202.089 170.217 mo
202.089 170.962 201.484 171.566 200.739 171.566 cv
199.994 171.566 199.39 170.962 199.39 170.217 cv
199.39 169.472 199.994 168.868 200.739 168.868 cv
201.484 168.868 202.089 169.472 202.089 170.217 cv
cp
f
250.103 261.86 mo
250.103 262.605 249.499 263.209 248.753 263.209 cv
248.008 263.209 247.404 262.605 247.404 261.86 cv
247.404 261.114 248.008 260.51 248.753 260.51 cv
249.499 260.51 250.103 261.114 250.103 261.86 cv
cp
f
237.638 149.211 mo
237.638 149.956 237.033 150.56 236.288 150.56 cv
235.543 150.56 234.939 149.956 234.939 149.211 cv
234.939 148.466 235.543 147.861 236.288 147.861 cv
237.033 147.861 237.638 148.466 237.638 149.211 cv
cp
.439216 .611765 .694118 rgb
f
240.869 161.676 mo
240.869 162.421 240.265 163.025 239.52 163.025 cv
238.775 163.025 238.171 162.421 238.171 161.676 cv
238.171 160.931 238.775 160.327 239.52 160.327 cv
240.265 160.327 240.869 160.931 240.869 161.676 cv
cp
.517647 .666667 .733333 rgb
f
221.017 187.299 mo
221.017 188.044 220.413 188.648 219.668 188.648 cv
218.923 188.648 218.319 188.044 218.319 187.299 cv
218.319 186.554 218.923 185.95 219.668 185.95 cv
220.413 185.95 221.017 186.554 221.017 187.299 cv
cp
.439216 .611765 .694118 rgb
f
233.944 177.142 mo
233.944 177.887 233.34 178.492 232.595 178.492 cv
231.85 178.492 231.245 177.887 231.245 177.142 cv
231.245 176.397 231.85 175.793 232.595 175.793 cv
233.34 175.793 233.944 176.397 233.944 177.142 cv
cp
.517647 .666667 .733333 rgb
f
263.491 179.912 mo
263.491 180.657 262.887 181.262 262.142 181.262 cv
261.397 181.262 260.793 180.657 260.793 179.912 cv
260.793 179.167 261.397 178.563 262.142 178.563 cv
262.887 178.563 263.491 179.167 263.491 179.912 cv
cp
f
253.796 199.995 mo
253.796 200.74 253.192 201.344 252.447 201.344 cv
251.702 201.344 251.098 200.74 251.098 199.995 cv
251.098 199.25 251.702 198.646 252.447 198.646 cv
253.192 198.646 253.796 199.25 253.796 199.995 cv
cp
f
268.57 214.076 mo
268.57 214.821 267.966 215.426 267.22 215.426 cv
266.475 215.426 265.871 214.821 265.871 214.076 cv
265.871 213.331 266.475 212.727 267.22 212.727 cv
267.966 212.727 268.57 213.331 268.57 214.076 cv
cp
f
254.489 224.464 mo
254.489 225.209 253.885 225.813 253.139 225.813 cv
252.394 225.813 251.79 225.209 251.79 224.464 cv
251.79 223.719 252.394 223.114 253.139 223.114 cv
253.885 223.114 254.489 223.719 254.489 224.464 cv
cp
f
289.576 238.776 mo
289.576 239.521 288.972 240.125 288.227 240.125 cv
287.481 240.125 286.877 239.521 286.877 238.776 cv
286.877 238.031 287.481 237.426 288.227 237.426 cv
288.972 237.426 289.576 238.031 289.576 238.776 cv
cp
.439216 .611765 .694118 rgb
f
284.498 231.158 mo
284.498 231.903 283.893 232.508 283.148 232.508 cv
282.403 232.508 281.799 231.903 281.799 231.158 cv
281.799 230.413 282.403 229.809 283.148 229.809 cv
283.893 229.809 284.498 230.413 284.498 231.158 cv
cp
.517647 .666667 .733333 rgb
f
220.525 115.71 mo
227.504 130.685 li
225.882 117.325 li
220.525 115.71 li
cp
227.923 132.148 mo
220.083 115.328 li
226.101 117.141 li
226.11 117.218 li
227.923 132.148 li
cp
f
241.695 128.444 mo
242.084 134.364 li
246.132 119.368 li
241.695 128.444 li
cp
241.724 137.99 mo
241.088 128.325 li
246.965 116.305 li
247.522 116.514 li
241.724 137.99 li
cp
f
249.357 104.079 mo
238.946 106.564 li
256.22 105.736 li
249.357 104.079 li
cp
237.68 106.863 mo
237.647 106.628 li
249.357 103.834 li
249.386 103.84 li
257.896 105.895 li
237.68 106.863 li
cp
f
257.276 105.797 mo
273.427 114.514 li
264.198 100.413 li
257.276 105.797 li
cp
274.144 115.172 mo
256.84 105.834 li
264.256 100.065 li
274.144 115.172 li
cp
f
281.841 129.094 mo
289.747 133.417 li
274.676 115.504 li
281.841 129.094 li
cp
290.75 134.238 mo
281.663 129.269 li
273.427 113.65 li
290.75 134.238 li
cp
f
274.827 114.745 mo
314.846 129.978 li
304.26 116.552 li
274.827 114.745 li
cp
315.57 130.509 mo
273.276 114.41 li
304.382 116.32 li
304.415 116.362 li
315.57 130.509 li
cp
f
257.082 105.964 mo
247.657 115.905 li
273.349 114.743 li
257.082 105.964 li
cp
247.076 116.171 mo
257.034 105.666 li
257.115 105.71 li
274.222 114.943 li
273.79 114.962 li
247.076 116.171 li
cp
f
267.082 135.336 mo
279.537 149.606 li
281.613 129.368 li
267.082 135.336 li
cp
279.719 150.178 mo
266.683 135.242 li
266.837 135.178 li
281.891 128.995 li
281.871 129.193 li
279.719 150.178 li
cp
f
281.999 129.18 mo
289.954 133.543 li
303.556 117.119 li
281.999 129.18 li
cp
290.012 133.847 mo
281.505 129.183 li
304.556 116.285 li
290.012 133.847 li
cp
f
290.325 133.769 mo
306.408 143.886 li
314.969 130.397 li
290.325 133.769 li
cp
306.483 144.215 mo
289.642 133.622 li
315.447 130.09 li
315.309 130.308 li
306.483 144.215 li
cp
f
306.585 144.09 mo
312.179 160.352 li
333.386 121.713 li
306.585 144.09 li
cp
312.129 160.94 mo
312.041 160.685 li
306.305 144.012 li
306.368 143.959 li
334.204 120.718 li
333.9 121.273 li
312.129 160.94 li
cp
f
273.394 161.997 mo
294.305 177.765 li
290.948 163.545 li
273.394 161.997 li
cp
294.69 178.354 mo
272.584 161.685 li
291.141 163.323 li
291.162 163.407 li
294.69 178.354 li
cp
f
299.711 166.076 mo
283.558 181.766 li
294.409 177.964 li
299.711 166.076 li
cp
282.613 182.35 mo
300.435 165.04 li
294.586 178.156 li
294.536 178.173 li
282.613 182.35 li
cp
f
343.949 132.11 mo
313.85 159.506 li
337.807 148.081 li
343.949 132.11 li
cp
310.458 161.786 mo
345.413 129.971 li
338.279 148.517 li
310.458 161.786 li
cp
f
374.187 138.601 mo
361.884 148.394 li
382.475 139.856 li
374.187 138.601 li
cp
360.404 149.266 mo
374.121 138.349 li
374.172 138.356 li
383.358 139.748 li
360.404 149.266 li
cp
f
361.38 149.162 mo
368.121 169.386 li
381.345 164.46 li
361.38 149.162 li
cp
367.973 169.696 mo
367.934 169.579 li
360.907 148.499 li
381.833 164.533 li
367.973 169.696 li
cp
f
338.32 148.641 mo
349.265 174.202 li
367.767 169.489 li
338.32 148.641 li
cp
349.125 174.483 mo
349.085 174.39 li
337.766 147.957 li
338.112 148.201 li
368.327 169.593 li
349.125 174.483 li
cp
f
329.156 189.408 mo
334.963 193.448 li
332.691 178.319 li
329.156 189.408 li
cp
335.281 193.96 mo
328.874 189.504 li
328.901 189.419 li
332.774 177.269 li
332.851 177.776 li
335.281 193.96 li
cp
f
312.413 160.706 mo
332.724 177.632 li
360.766 149.044 li
312.413 160.706 li
cp
332.741 177.956 mo
311.895 160.586 li
312.126 160.53 li
361.521 148.616 li
361.229 148.914 li
332.741 177.956 li
cp
f
344.934 131.227 mo
367.989 169.216 li
374.015 138.563 li
344.934 131.227 li
cp
368.104 169.866 mo
367.944 169.603 li
344.428 130.853 li
374.293 138.386 li
374.272 138.498 li
368.104 169.866 li
cp
f
374.696 138.678 mo
388.286 147.326 li
382.85 139.913 li
374.696 138.678 li
cp
389.231 148.211 mo
373.612 138.272 li
382.983 139.691 li
383.013 139.731 li
389.231 148.211 li
cp
f
357.865 192.41 mo
364.234 201.096 li
371.248 184.175 li
357.865 192.41 li
cp
364.293 201.58 mo
364.167 201.409 li
357.518 192.343 li
357.629 192.275 li
371.751 183.585 li
371.609 183.925 li
364.293 201.58 li
cp
f
220.711 115.681 mo
227.676 131.545 li
229.224 120.066 li
220.711 115.681 li
cp
227.759 132.128 mo
227.644 131.869 li
220.385 115.333 li
229.397 119.976 li
229.389 120.032 li
227.759 132.128 li
cp
.239216 .372549 .435294 rgb
f
236.172 114.775 mo
247.128 116.192 li
237.332 107.17 li
236.172 114.775 li
cp
247.605 116.415 mo
235.99 114.912 li
236.002 114.831 li
237.22 106.85 li
237.33 106.951 li
247.605 116.415 li
cp
f
257.295 105.702 mo
266.627 121.255 li
264.164 100.388 li
257.295 105.702 li
cp
266.872 121.973 mo
257.085 105.663 li
257.142 105.619 li
264.289 100.09 li
264.306 100.23 li
266.872 121.973 li
cp
f
257.206 105.782 mo
247.558 116.213 li
273.505 114.779 li
257.206 105.782 li
cp
247.174 116.394 mo
257.175 105.582 li
257.229 105.613 li
274.066 114.907 li
273.79 114.923 li
247.174 116.394 li
cp
f
273.769 114.492 mo
281.601 128.981 li
287.867 110.054 li
273.769 114.492 li
cp
281.636 129.381 mo
273.537 114.398 li
273.629 114.369 li
288.116 109.808 li
288.067 109.956 li
281.636 129.381 li
cp
f
274.301 114.949 mo
314.976 130.072 li
304.546 116.514 li
274.301 114.949 li
cp
315.441 130.415 mo
273.271 114.737 li
273.79 114.764 li
304.628 116.359 li
304.65 116.387 li
315.441 130.415 li
cp
f
273.406 115.098 mo
250.791 125.079 li
266.71 121.541 li
273.406 115.098 li
cp
250.039 125.409 mo
249.989 125.258 li
274.165 114.589 li
266.788 121.687 li
266.767 121.692 li
250.039 125.409 li
cp
f
250.15 125.384 mo
256.268 135.017 li
266.551 121.739 li
250.15 125.384 li
cp
256.255 135.294 mo
256.194 135.199 li
249.893 125.278 li
266.947 121.488 li
256.255 135.294 li
cp
f
247.369 116.594 mo
241.981 136.09 li
249.934 125.316 li
247.369 116.594 li
cp
241.599 136.876 mo
247.364 116.013 li
250.109 125.346 li
250.086 125.379 li
241.599 136.876 li
cp
f
229.419 120.038 mo
235.741 129.198 li
235.999 115.007 li
229.419 120.038 li
cp
235.891 129.696 mo
229.202 120.004 li
236.164 114.68 li
235.891 129.696 li
cp
f
222.173 132.048 mo
213.068 140.281 li
227.662 131.798 li
222.173 132.048 li
cp
211.832 141.183 mo
222.109 131.891 li
228.304 131.61 li
228.023 131.773 li
211.832 141.183 li
cp
f
229.578 120.3 mo
222.305 131.858 li
235.682 129.391 li
229.578 120.3 li
cp
221.977 132.08 mo
229.574 120.007 li
235.95 129.503 li
235.83 129.525 li
221.977 132.08 li
cp
f
235.896 129.418 mo
241.623 136.164 li
236.15 115.418 li
235.896 129.418 li
cp
241.957 136.802 mo
235.736 129.476 li
235.736 129.445 li
236.012 114.269 li
241.957 136.802 li
cp
f
229.715 120.217 mo
235.847 129.35 li
273.16 114.999 li
229.715 120.217 li
cp
235.785 129.544 mo
235.75 129.491 li
229.437 120.09 li
229.566 120.074 li
274.411 114.688 li
273.814 114.917 li
235.785 129.544 li
cp
f
237.627 107.004 mo
273.613 114.724 li
264.191 100.33 li
237.627 107.004 li
cp
273.958 114.962 mo
273.769 114.921 li
236.925 107.016 li
264.263 100.148 li
264.293 100.195 li
273.958 114.962 li
cp
f
267.28 135.583 mo
279.566 149.437 li
281.526 129.309 li
267.28 135.583 li
cp
279.689 149.816 mo
279.568 149.68 li
267.015 135.525 li
267.115 135.481 li
281.711 129.053 li
281.698 129.189 li
279.689 149.816 li
cp
f
282.102 129.255 mo
311.827 160.395 li
304.364 116.901 li
282.102 129.255 li
cp
312.747 162.224 mo
281.135 129.108 li
304.81 115.971 li
304.881 116.386 li
312.747 162.224 li
cp
f
315.446 130.332 mo
338.008 148.434 li
344.567 131.381 li
315.446 130.332 li
cp
338.078 148.695 mo
337.993 148.627 li
314.971 130.155 li
315.211 130.164 li
344.795 131.23 li
338.078 148.695 li
cp
f
338.23 148.791 mo
349.241 173.697 li
367.854 169.24 li
338.23 148.791 li
cp
349.149 173.883 mo
349.123 173.822 li
337.856 148.339 li
338.088 148.499 li
368.239 169.311 li
349.149 173.883 li
cp
f
382.82 139.906 mo
368.205 169.136 li
381.777 164.439 li
382.82 139.906 li
cp
367.888 169.415 mo
367.975 169.24 li
383.012 139.168 li
381.932 164.554 li
367.888 169.415 li
cp
f
345.774 131.622 mo
388.538 147.337 li
382.87 139.608 li
345.774 131.622 li
cp
388.979 147.669 mo
344.654 131.38 li
344.698 131.228 li
382.963 139.465 li
382.98 139.49 li
388.979 147.669 li
cp
f
288.201 110.186 mo
312.235 161.013 li
315.125 130.281 li
288.201 110.186 li
cp
312.34 161.606 mo
287.782 109.675 li
315.291 130.206 li
315.287 130.251 li
312.34 161.606 li
cp
f
349.269 173.735 mo
371.327 183.188 li
344.805 131.72 li
349.269 173.735 li
cp
371.672 183.509 mo
371.468 183.422 li
349.121 173.845 li
349.116 173.798 li
344.557 130.89 li
371.672 183.509 li
cp
f
291.152 163.542 mo
294.519 177.783 li
299.697 165.614 li
291.152 163.542 li
cp
294.476 178.292 mo
290.937 163.326 li
291.064 163.357 li
299.917 165.503 li
299.88 165.59 li
294.476 178.292 li
cp
f
239.756 161.776 mo
290.872 163.349 li
279.6 149.719 li
239.756 161.776 li
cp
291.218 163.519 mo
238.779 161.906 li
239.245 161.765 li
279.655 149.535 li
279.689 149.576 li
291.218 163.519 li
cp
f
232.458 177.228 mo
252.072 199.72 li
239.258 162.058 li
232.458 177.228 li
cp
252.484 200.433 mo
252.218 200.129 li
232.27 177.255 li
232.291 177.209 li
239.278 161.623 li
239.343 161.815 li
252.484 200.433 li
cp
f
262.419 179.973 mo
252.46 199.892 li
294.131 178.139 li
262.419 179.973 li
cp
252.096 200.261 mo
262.318 179.82 li
262.363 179.817 li
294.863 177.937 li
294.534 178.109 li
252.096 200.261 li
cp
f
201.25 170.041 mo
232.199 177.122 li
221.183 158.762 li
201.25 170.041 li
cp
232.528 177.361 mo
232.346 177.319 li
200.814 170.104 li
200.993 170.003 li
221.24 158.547 li
232.528 177.361 li
cp
f
212.548 140.751 mo
221.143 158.333 li
222.055 132.155 li
212.548 140.751 li
cp
221.28 158.976 mo
212.352 140.713 li
212.396 140.673 li
222.228 131.784 li
222.221 131.972 li
221.28 158.976 li
cp
f
253.417 224.441 mo
282.303 231.269 li
252.366 200.283 li
253.417 224.441 li
cp
282.794 231.549 mo
253.264 224.568 li
253.261 224.508 li
252.19 199.87 li
252.336 200.021 li
282.794 231.549 li
cp
f
239.468 163.096 mo
248.836 260.94 li
253.26 224.509 li
239.468 163.096 li
cp
248.817 262.417 mo
239.189 161.848 li
239.346 161.823 li
253.421 224.501 li
253.42 224.515 li
248.817 262.417 li
cp
f
287.698 110.115 mo
304.595 116.354 li
395.574 102.058 li
287.698 110.115 li
cp
304.578 116.518 mo
304.559 116.511 li
286.957 110.011 li
287.322 109.984 li
397.515 101.753 li
397.533 101.911 li
304.578 116.518 li
cp
f
397.791 125.583 mo
400.905 140.764 li
405.964 131.033 li
397.791 125.583 li
cp
400.74 141.944 mo
397.206 124.714 li
406.483 130.899 li
400.74 141.944 li
cp
.615686 .733333 .788235 rgb
f
401.006 140.945 mo
405.154 145.27 li
398.181 127.442 li
401.006 140.945 li
cp
406.255 146.994 mo
400.639 141.139 li
397.303 125.189 li
397.684 125.076 li
406.255 146.994 li
cp
f
394.188 146.479 mo
395.152 152.262 li
400.322 142.273 li
394.188 146.479 li
cp
394.857 154.13 mo
393.537 146.201 li
401.945 140.435 li
394.857 154.13 li
cp
f
406.004 131.557 mo
394.293 146.122 li
405.522 145.633 li
406.004 131.557 li
cp
405.458 147.508 mo
405.509 146.033 li
393.432 146.558 li
406.443 130.375 li
405.921 145.616 li
406.088 145.609 li
405.458 147.508 li
cp
f
354.956 196.227 mo
362.747 211.996 li
368.126 208.286 li
354.956 196.227 li
cp
362.594 212.586 mo
362.492 212.379 li
353.657 194.499 li
368.764 208.33 li
362.594 212.586 li
cp
f
362.893 212.158 mo
370.271 214.739 li
364.553 201.645 li
362.893 212.158 li
cp
371.001 215.418 mo
362.448 212.424 li
364.373 200.235 li
371.001 215.418 li
cp
f
372.852 202.322 mo
376.11 208.659 li
382.627 206.305 li
372.852 202.322 li
cp
375.916 209.152 mo
375.836 208.996 li
372.005 201.547 li
383.737 206.327 li
375.916 209.152 li
cp
f
385.271 184.073 mo
377.904 204.298 li
383.4 192.293 li
385.271 184.073 li
cp
376.194 208.988 mo
375.826 208.837 li
385.982 180.957 li
386.364 181.069 li
383.775 192.421 li
376.194 208.988 li
cp
f
386.206 181.486 mo
394.637 184.052 li
387.856 174.337 li
386.206 181.486 li
cp
395.623 184.769 mo
385.734 181.759 li
387.669 173.374 li
395.623 184.769 li
cp
f
388.271 174.931 mo
393.302 192.901 li
394.919 184.455 li
388.271 174.931 li
cp
393.375 194.638 mo
387.254 172.78 li
395.342 184.365 li
393.375 194.638 li
cp
f
383.635 206.357 mo
391.631 211.193 li
394.42 202.266 li
383.635 206.357 li
cp
391.859 211.796 mo
382.729 206.275 li
395.045 201.603 li
391.859 211.796 li
cp
f
372.608 201.098 mo
382.992 206.006 li
383.37 192.791 li
372.608 201.098 li
cp
383.372 206.626 mo
371.85 201.18 li
383.791 191.962 li
383.372 206.626 li
cp
f
373.362 215.607 mo
389.331 220.534 li
395.617 217.476 li
373.362 215.607 li
cp
389.381 221.174 mo
367.909 214.55 li
397.832 217.062 li
389.381 221.174 li
cp
f
395.713 202.456 mo
413.94 216.855 li
407.743 206.284 li
395.713 202.456 li
cp
415.353 218.48 mo
393.752 201.414 li
408.009 205.95 li
408.048 206.016 li
415.353 218.48 li
cp
f
409.736 206.705 mo
426.1 219.108 li
424.55 212.907 li
409.736 206.705 li
cp
427.091 220.608 mo
405.618 204.334 li
425.056 212.472 li
427.091 220.608 li
cp
f
415.277 217.581 mo
426.327 219.607 li
424.67 212.977 li
415.277 217.581 li
cp
426.864 220.11 mo
414.017 217.754 li
424.936 212.402 li
426.864 220.11 li
cp
f
413.257 234.218 mo
414.625 245.679 li
416.678 224.297 li
413.257 234.218 li
cp
414.668 249.399 mo
412.85 234.175 li
417.395 220.996 li
414.668 249.399 li
cp
f
417.162 223.43 mo
414.909 246.89 li
422.979 236.755 li
417.162 223.43 li
cp
414.384 248.188 mo
416.912 221.863 li
423.44 236.815 li
414.384 248.188 li
cp
f
413.759 234.583 mo
427.075 246.985 li
423.062 236.953 li
413.759 234.583 li
cp
428.106 248.49 mo
412.348 233.811 li
423.357 236.617 li
428.106 248.49 li
cp
f
407.171 230.322 mo
403.874 238.563 li
412.665 234.168 li
407.171 230.322 li
cp
403.115 239.388 mo
406.988 229.707 li
413.442 234.225 li
403.115 239.388 li
cp
f
400.587 223.62 mo
406.954 229.623 li
408.229 223.256 li
400.587 223.62 li
cp
407.204 230.406 mo
399.632 223.266 li
408.719 222.834 li
407.204 230.406 li
cp
f
396.304 228.63 mo
402.902 237.658 li
399.951 224.116 li
396.304 228.63 li
cp
404.087 240.293 mo
395.551 228.611 li
400.269 222.771 li
404.087 240.293 li
cp
f
386.044 235.056 mo
391.863 244.442 li
395.617 229.05 li
386.044 235.056 li
cp
392.025 245.459 mo
385.498 234.929 li
396.237 228.191 li
392.025 245.459 li
cp
f
392.203 245.041 mo
396.909 255.583 li
403.121 239.393 li
392.203 245.041 li
cp
396.937 256.623 mo
391.686 244.86 li
403.868 238.558 li
396.937 256.623 li
cp
f
403.645 239.342 mo
400.395 262.863 li
414.353 247.565 li
403.645 239.342 li
cp
399.825 264.078 mo
403.345 238.609 li
414.94 247.513 li
399.825 264.078 li
cp
f
414.915 247.742 mo
419.089 261.781 li
427.246 247.932 li
414.915 247.742 li
cp
418.967 262.771 mo
414.378 247.335 li
427.936 247.544 li
418.967 262.771 li
cp
f
400.812 263.626 mo
409.263 268.218 li
418.264 262.523 li
400.812 263.626 li
cp
409.278 268.68 mo
399.407 263.316 li
419.792 262.028 li
409.278 268.68 li
cp
f
397.181 256.198 mo
400.171 263.109 li
413.803 248.167 li
397.181 256.198 li
cp
400.049 263.832 mo
396.665 256.007 li
396.836 255.923 li
415.49 246.91 li
400.049 263.832 li
cp
f
374.955 239.706 mo
378.523 249.282 li
390.728 245.34 li
374.955 239.706 li
cp
378.283 249.779 mo
374.283 239.042 li
391.965 245.358 li
378.283 249.779 li
cp
f
374.893 239.481 mo
384.608 259.291 li
385.56 235.289 li
374.893 239.481 li
cp
384.943 260.879 mo
374.345 239.267 li
374.547 239.189 li
385.982 234.696 li
385.97 235 li
384.943 260.879 li
cp
f
374.999 240.24 mo
373.655 259.638 li
390.939 245.426 li
374.999 240.24 li
cp
373.193 260.532 mo
374.637 239.703 li
391.754 245.272 li
373.193 260.532 li
cp
f
378.389 249.922 mo
384.898 259.143 li
395.927 256.07 li
378.389 249.922 li
cp
384.653 259.832 mo
376.824 248.74 li
397.919 256.135 li
384.653 259.832 li
cp
f
390.466 246.46 mo
374.277 259.771 li
383.99 259.591 li
390.466 246.46 li
cp
372.572 260.399 mo
392.228 244.238 li
384.365 260.181 li
372.572 260.399 li
cp
f
409.429 268.584 mo
406.891 274.506 li
417.719 263.339 li
409.429 268.584 li
cp
405.675 276.333 mo
409.112 268.314 li
409.164 268.28 li
420.337 261.212 li
405.675 276.333 li
cp
f
447.502 261.575 mo
430.116 280.082 li
452.176 266.81 li
447.502 261.575 li
cp
427.854 281.907 mo
447.509 260.985 li
452.793 266.903 li
452.587 267.027 li
427.854 281.907 li
cp
f
447.602 261.687 mo
444.477 273.27 li
452.198 266.836 li
447.602 261.687 li
cp
443.764 274.382 mo
447.409 260.873 li
452.77 266.877 li
443.764 274.382 li
cp
f
377.524 208.856 mo
377.524 209.601 376.92 210.206 376.174 210.206 cv
375.429 210.206 374.825 209.601 374.825 208.856 cv
374.825 208.111 375.429 207.507 376.174 207.507 cv
376.92 207.507 377.524 208.111 377.524 208.856 cv
cp
.517647 .666667 .733333 rgb
f
384.713 192.467 mo
384.713 193.212 384.109 193.816 383.364 193.816 cv
382.619 193.816 382.014 193.212 382.014 192.467 cv
382.014 191.721 382.619 191.117 383.364 191.117 cv
384.109 191.117 384.713 191.721 384.713 192.467 cv
cp
f
355.313 195.188 mo
355.313 195.934 354.709 196.538 353.964 196.538 cv
353.219 196.538 352.615 195.934 352.615 195.188 cv
352.615 194.443 353.219 193.839 353.964 193.839 cv
354.709 193.839 355.313 194.443 355.313 195.188 cv
cp
f
371.777 214.914 mo
371.777 215.659 371.173 216.263 370.428 216.263 cv
369.682 216.263 369.078 215.659 369.078 214.914 cv
369.078 214.168 369.682 213.564 370.428 213.564 cv
371.173 213.564 371.777 214.168 371.777 214.914 cv
cp
f
393.055 211.497 mo
393.055 212.242 392.451 212.846 391.706 212.846 cv
390.961 212.846 390.357 212.242 390.357 211.497 cv
390.357 210.751 390.961 210.147 391.706 210.147 cv
392.451 210.147 393.055 210.751 393.055 211.497 cv
cp
f
419.94 262.256 mo
419.94 263.001 419.336 263.606 418.59 263.606 cv
417.845 263.606 417.241 263.001 417.241 262.256 cv
417.241 261.511 417.845 260.907 418.59 260.907 cv
419.336 260.907 419.94 261.511 419.94 262.256 cv
cp
f
424.289 236.629 mo
424.289 237.374 423.685 237.978 422.939 237.978 cv
422.194 237.978 421.59 237.374 421.59 236.629 cv
421.59 235.884 422.194 235.28 422.939 235.28 cv
423.685 235.28 424.289 235.884 424.289 236.629 cv
cp
f
416.057 247.346 mo
416.057 248.091 415.453 248.695 414.708 248.695 cv
413.962 248.695 413.358 248.091 413.358 247.346 cv
413.358 246.601 413.962 245.996 414.708 245.996 cv
415.453 245.996 416.057 246.601 416.057 247.346 cv
cp
f
393.055 245.045 mo
393.055 245.79 392.451 246.394 391.706 246.394 cv
390.961 246.394 390.357 245.79 390.357 245.045 cv
390.357 244.3 390.961 243.696 391.706 243.696 cv
392.451 243.696 393.055 244.3 393.055 245.045 cv
cp
f
430.538 280.846 mo
430.538 281.591 429.934 282.195 429.189 282.195 cv
428.444 282.195 427.84 281.591 427.84 280.846 cv
427.84 280.101 428.444 279.497 429.189 279.497 cv
429.934 279.497 430.538 280.101 430.538 280.846 cv
cp
f
396.224 152.754 mo
396.224 153.499 395.62 154.103 394.875 154.103 cv
394.129 154.103 393.525 153.499 393.525 152.754 cv
393.525 152.009 394.129 151.405 394.875 151.405 cv
395.62 151.405 396.224 152.009 396.224 152.754 cv
cp
f
407.034 146.108 mo
407.034 146.853 406.43 147.458 405.685 147.458 cv
404.939 147.458 404.335 146.853 404.335 146.108 cv
404.335 145.363 404.939 144.759 405.685 144.759 cv
406.43 144.759 407.034 145.363 407.034 146.108 cv
cp
f
398.802 125.14 mo
398.802 125.886 398.198 126.49 397.453 126.49 cv
396.707 126.49 396.103 125.886 396.103 125.14 cv
396.103 124.395 396.707 123.791 397.453 123.791 cv
398.198 123.791 398.802 124.395 398.802 125.14 cv
cp
f
397.525 125.652 mo
395.016 152.527 li
405.537 146.059 li
397.525 125.652 li
cp
394.734 152.981 mo
394.756 152.743 li
397.38 124.629 li
405.832 146.158 li
405.747 146.21 li
394.734 152.981 li
cp
f
353.76 195.975 mo
363.679 201.221 li
357.281 192.168 li
353.76 195.975 li
cp
364.451 201.9 mo
353.373 196.042 li
357.306 191.788 li
364.451 201.9 li
cp
f
376.345 208.764 mo
391.508 211.342 li
383.364 192.764 li
376.345 208.764 li
cp
391.904 211.652 mo
391.686 211.614 li
376.003 208.949 li
383.364 192.169 li
383.473 192.419 li
391.904 211.652 li
cp
f
364.732 201.072 mo
370.467 214.698 li
375.991 208.875 li
364.732 201.072 li
cp
370.388 215.128 mo
364.194 200.409 li
364.531 200.642 li
376.357 208.837 li
376.261 208.939 li
370.388 215.128 li
cp
f
364.774 200.735 mo
391.48 211.279 li
383.302 192.624 li
364.774 200.735 li
cp
391.932 211.714 mo
364.152 200.746 li
364.415 200.631 li
383.425 192.309 li
383.473 192.419 li
391.932 211.714 li
cp
f
415.034 246.077 mo
418.542 260.763 li
422.469 237.617 li
415.034 246.077 li
cp
418.64 263.75 mo
414.381 245.915 li
423.41 235.642 li
418.64 263.75 li
cp
f
392.191 245.213 mo
418.396 261.991 li
414.553 247.45 li
392.191 245.213 li
cp
418.785 262.522 mo
418.526 262.357 li
391.221 244.876 li
391.718 244.926 li
414.741 247.229 li
414.763 247.309 li
418.785 262.522 li
cp
f
392.366 244.991 mo
414.592 247.214 li
422.628 236.837 li
392.366 244.991 li
cp
414.701 247.465 mo
414.635 247.459 li
391.046 245.099 li
391.675 244.93 li
423.251 236.422 li
414.701 247.465 li
cp
f
213.847 140.804 mo
213.847 141.549 213.243 142.154 212.498 142.154 cv
211.752 142.154 211.148 141.549 211.148 140.804 cv
211.148 140.059 211.752 139.455 212.498 139.455 cv
213.243 139.455 213.847 140.059 213.847 140.804 cv
cp
f
229.199 131.571 mo
229.199 132.316 228.595 132.92 227.85 132.92 cv
227.105 132.92 226.501 132.316 226.501 131.571 cv
226.501 130.826 227.105 130.222 227.85 130.222 cv
228.595 130.222 229.199 130.826 229.199 131.571 cv
cp
f
243.254 136.177 mo
243.254 136.922 242.649 137.526 241.904 137.526 cv
241.159 137.526 240.555 136.922 240.555 136.177 cv
240.555 135.432 241.159 134.828 241.904 134.828 cv
242.649 134.828 243.254 135.432 243.254 136.177 cv
cp
f
230.793 120.153 mo
230.793 120.899 230.189 121.503 229.443 121.503 cv
228.698 121.503 228.094 120.899 228.094 120.153 cv
228.094 119.408 228.698 118.804 229.443 118.804 cv
230.189 118.804 230.793 119.408 230.793 120.153 cv
cp
f
221.765 115.374 mo
221.765 116.119 221.161 116.723 220.415 116.723 cv
219.67 116.723 219.066 116.119 219.066 115.374 cv
219.066 114.629 219.67 114.025 220.415 114.025 cv
221.161 114.025 221.765 114.629 221.765 115.374 cv
cp
f
227.341 117.233 mo
227.341 117.978 226.737 118.582 225.991 118.582 cv
225.246 118.582 224.642 117.978 224.642 117.233 cv
224.642 116.488 225.246 115.883 225.991 115.883 cv
226.737 115.883 227.341 116.488 227.341 117.233 cv
cp
f
248.583 116.436 mo
248.583 117.181 247.979 117.786 247.233 117.786 cv
246.488 117.786 245.884 117.181 245.884 116.436 cv
245.884 115.691 246.488 115.087 247.233 115.087 cv
247.979 115.087 248.583 115.691 248.583 116.436 cv
cp
f
251.504 125.464 mo
251.504 126.209 250.899 126.813 250.154 126.813 cv
249.409 126.813 248.805 126.209 248.805 125.464 cv
248.805 124.719 249.409 124.115 250.154 124.115 cv
250.899 124.115 251.504 124.719 251.504 125.464 cv
cp
f
242.741 128.385 mo
242.741 129.13 242.137 129.734 241.392 129.734 cv
240.647 129.734 240.042 129.13 240.042 128.385 cv
240.042 127.64 240.647 127.035 241.392 127.035 cv
242.137 127.035 242.741 127.64 242.741 128.385 cv
cp
f
268.232 135.288 mo
268.232 136.034 267.627 136.638 266.882 136.638 cv
266.137 136.638 265.533 136.034 265.533 135.288 cv
265.533 134.543 266.137 133.939 266.882 133.939 cv
267.627 133.939 268.232 134.543 268.232 135.288 cv
cp
f
258.407 105.815 mo
258.407 106.56 257.803 107.165 257.058 107.165 cv
256.313 107.165 255.708 106.56 255.708 105.815 cv
255.708 105.07 256.313 104.466 257.058 104.466 cv
257.803 104.466 258.407 105.07 258.407 105.815 cv
cp
f
250.707 103.956 mo
250.707 104.702 250.103 105.306 249.358 105.306 cv
248.612 105.306 248.008 104.702 248.008 103.956 cv
248.008 103.211 248.612 102.607 249.358 102.607 cv
250.103 102.607 250.707 103.211 250.707 103.956 cv
cp
f
238.758 107.143 mo
238.758 107.888 238.154 108.492 237.409 108.492 cv
236.664 108.492 236.06 107.888 236.06 107.143 cv
236.06 106.398 236.664 105.793 237.409 105.793 cv
238.154 105.793 238.758 106.398 238.758 107.143 cv
cp
f
265.576 100.239 mo
265.576 100.984 264.972 101.588 264.227 101.588 cv
263.482 101.588 262.878 100.984 262.878 100.239 cv
262.878 99.4939 263.482 98.8898 264.227 98.8898 cv
264.972 98.8898 265.576 99.4939 265.576 100.239 cv
cp
f
275.135 114.843 mo
275.135 115.588 274.531 116.192 273.786 116.192 cv
273.041 116.192 272.436 115.588 272.436 114.843 cv
272.436 114.098 273.041 113.494 273.786 113.494 cv
274.531 113.494 275.135 114.098 275.135 114.843 cv
cp
f
283.101 129.181 mo
283.101 129.927 282.497 130.531 281.752 130.531 cv
281.006 130.531 280.402 129.927 280.402 129.181 cv
280.402 128.436 281.006 127.832 281.752 127.832 cv
282.497 127.832 283.101 128.436 283.101 129.181 cv
cp
f
291.332 133.695 mo
291.332 134.441 290.728 135.045 289.983 135.045 cv
289.238 135.045 288.634 134.441 288.634 133.695 cv
288.634 132.95 289.238 132.346 289.983 132.346 cv
290.728 132.346 291.332 132.95 291.332 133.695 cv
cp
f
313.636 161.044 mo
313.636 161.79 313.032 162.394 312.287 162.394 cv
311.542 162.394 310.938 161.79 310.938 161.044 cv
310.938 160.299 311.542 159.695 312.287 159.695 cv
313.032 159.695 313.636 160.299 313.636 161.044 cv
cp
f
307.529 144.051 mo
307.529 144.796 306.925 145.4 306.18 145.4 cv
305.435 145.4 304.831 144.796 304.831 144.051 cv
304.831 143.306 305.435 142.701 306.18 142.701 cv
306.925 142.701 307.529 143.306 307.529 144.051 cv
cp
f
316.557 130.243 mo
316.557 130.989 315.953 131.593 315.208 131.593 cv
314.463 131.593 313.858 130.989 313.858 130.243 cv
313.858 129.498 314.463 128.894 315.208 128.894 cv
315.953 128.894 316.557 129.498 316.557 130.243 cv
cp
f
305.671 116.436 mo
305.671 117.181 305.066 117.786 304.321 117.786 cv
303.576 117.786 302.972 117.181 302.972 116.436 cv
302.972 115.691 303.576 115.087 304.321 115.087 cv
305.066 115.087 305.671 115.691 305.671 116.436 cv
cp
f
384.266 139.802 mo
384.266 140.548 383.662 141.152 382.917 141.152 cv
382.171 141.152 381.567 140.548 381.567 139.802 cv
381.567 139.057 382.171 138.453 382.917 138.453 cv
383.662 138.453 384.266 139.057 384.266 139.802 cv
cp
f
390.108 147.768 mo
390.108 148.513 389.503 149.117 388.758 149.117 cv
388.013 149.117 387.409 148.513 387.409 147.768 cv
387.409 147.023 388.013 146.419 388.758 146.419 cv
389.503 146.419 390.108 147.023 390.108 147.768 cv
cp
f
375.504 138.475 mo
375.504 139.22 374.9 139.824 374.154 139.824 cv
373.409 139.824 372.805 139.22 372.805 138.475 cv
372.805 137.729 373.409 137.125 374.154 137.125 cv
374.9 137.125 375.504 137.729 375.504 138.475 cv
cp
f
382.938 164.496 mo
382.938 165.241 382.334 165.846 381.589 165.846 cv
380.844 165.846 380.24 165.241 380.24 164.496 cv
380.24 163.751 380.844 163.147 381.589 163.147 cv
382.334 163.147 382.938 163.751 382.938 164.496 cv
cp
f
369.397 169.541 mo
369.397 170.286 368.792 170.89 368.047 170.89 cv
367.302 170.89 366.698 170.286 366.698 169.541 cv
366.698 168.796 367.302 168.192 368.047 168.192 cv
368.792 168.192 369.397 168.796 369.397 169.541 cv
cp
f
372.848 183.879 mo
372.848 184.625 372.244 185.229 371.499 185.229 cv
370.754 185.229 370.15 184.625 370.15 183.879 cv
370.15 183.134 370.754 182.53 371.499 182.53 cv
372.244 182.53 372.848 183.134 372.848 183.879 cv
cp
f
365.679 200.873 mo
365.679 201.618 365.075 202.222 364.33 202.222 cv
363.585 202.222 362.981 201.618 362.981 200.873 cv
362.981 200.128 363.585 199.524 364.33 199.524 cv
365.075 199.524 365.679 200.128 365.679 200.873 cv
cp
f
359.041 192.376 mo
359.041 193.122 358.437 193.726 357.692 193.726 cv
356.947 193.726 356.342 193.122 356.342 192.376 cv
356.342 191.631 356.947 191.027 357.692 191.027 cv
358.437 191.027 359.041 191.631 359.041 192.376 cv
cp
f
350.544 174.342 mo
350.544 175.088 349.94 175.692 349.195 175.692 cv
348.45 175.692 347.846 175.088 347.846 174.342 cv
347.846 173.597 348.45 172.993 349.195 172.993 cv
349.94 172.993 350.544 173.597 350.544 174.342 cv
cp
f
334.082 177.794 mo
334.082 178.539 333.478 179.144 332.732 179.144 cv
331.987 179.144 331.383 178.539 331.383 177.794 cv
331.383 177.049 331.987 176.445 332.732 176.445 cv
333.478 176.445 334.082 177.049 334.082 177.794 cv
cp
f
330.364 189.455 mo
330.364 190.201 329.76 190.805 329.015 190.805 cv
328.27 190.805 327.666 190.201 327.666 189.455 cv
327.666 188.71 328.27 188.106 329.015 188.106 cv
329.76 188.106 330.364 188.71 330.364 189.455 cv
cp
f
336.471 193.704 mo
336.471 194.449 335.867 195.053 335.122 195.053 cv
334.377 195.053 333.773 194.449 333.773 193.704 cv
333.773 192.959 334.377 192.354 335.122 192.354 cv
335.867 192.354 336.471 192.959 336.471 193.704 cv
cp
f
301.422 165.558 mo
301.422 166.303 300.818 166.908 300.073 166.908 cv
299.328 166.908 298.723 166.303 298.723 165.558 cv
298.723 164.813 299.328 164.209 300.073 164.209 cv
300.818 164.209 301.422 164.813 301.422 165.558 cv
cp
f
295.846 178.06 mo
295.846 178.805 295.242 179.409 294.497 179.409 cv
293.752 179.409 293.147 178.805 293.147 178.06 cv
293.147 177.314 293.752 176.71 294.497 176.71 cv
295.242 176.71 295.846 177.314 295.846 178.06 cv
cp
f
284.429 182.308 mo
284.429 183.053 283.825 183.657 283.079 183.657 cv
282.334 183.657 281.73 183.053 281.73 182.308 cv
281.73 181.563 282.334 180.959 283.079 180.959 cv
283.825 180.959 284.429 181.563 284.429 182.308 cv
cp
f
274.339 161.841 mo
274.339 162.586 273.735 163.19 272.989 163.19 cv
272.244 163.19 271.64 162.586 271.64 161.841 cv
271.64 161.096 272.244 160.492 272.989 160.492 cv
273.735 160.492 274.339 161.096 274.339 161.841 cv
cp
f
269.028 156.53 mo
269.028 157.276 268.424 157.88 267.679 157.88 cv
266.934 157.88 266.329 157.276 266.329 156.53 cv
266.329 155.785 266.934 155.181 267.679 155.181 cv
268.424 155.181 269.028 155.785 269.028 156.53 cv
cp
f
280.711 149.627 mo
280.711 150.372 280.107 150.976 279.362 150.976 cv
278.617 150.976 278.013 150.372 278.013 149.627 cv
278.013 148.882 278.617 148.277 279.362 148.277 cv
280.107 148.277 280.711 148.882 280.711 149.627 cv
cp
f
292.394 163.434 mo
292.394 164.179 291.79 164.783 291.045 164.783 cv
290.3 164.783 289.696 164.179 289.696 163.434 cv
289.696 162.689 290.3 162.085 291.045 162.085 cv
291.79 162.085 292.394 162.689 292.394 163.434 cv
cp
f
339.392 148.299 mo
339.392 149.044 338.788 149.649 338.043 149.649 cv
337.298 149.649 336.694 149.044 336.694 148.299 cv
336.694 147.554 337.298 146.95 338.043 146.95 cv
338.788 146.95 339.392 147.554 339.392 148.299 cv
cp
f
362.493 148.83 mo
362.493 149.575 361.889 150.18 361.144 150.18 cv
360.398 150.18 359.794 149.575 359.794 148.83 cv
359.794 148.085 360.398 147.481 361.144 147.481 cv
361.889 147.481 362.493 148.085 362.493 148.83 cv
cp
.439216 .611765 .694118 rgb
f
346.03 131.04 mo
346.03 131.785 345.426 132.389 344.681 132.389 cv
343.936 132.389 343.332 131.785 343.332 131.04 cv
343.332 130.295 343.936 129.691 344.681 129.691 cv
345.426 129.691 346.03 130.295 346.03 131.04 cv
cp
.517647 .666667 .733333 rgb
f
335.144 121.216 mo
335.144 121.961 334.54 122.565 333.795 122.565 cv
333.049 122.565 332.445 121.961 332.445 121.216 cv
332.445 120.47 333.049 119.866 333.795 119.866 cv
334.54 119.866 335.144 120.47 335.144 121.216 cv
cp
f
357.867 192.407 mo
364.298 200.639 li
371.244 184.047 li
357.867 192.407 li
cp
364.361 201.107 mo
357.516 192.346 li
371.754 183.446 li
364.361 201.107 li
cp
.239216 .372549 .435294 rgb
f
364.248 200.629 mo
390.154 210.762 li
358.148 192.771 li
364.248 200.629 li
cp
391.663 211.609 mo
364.099 200.827 li
357.235 191.982 li
357.75 192.272 li
391.764 211.393 li
391.663 211.609 li
cp
f
368.013 169.776 mo
357.962 192.066 li
371.362 183.691 li
368.013 169.776 li
cp
357.421 192.687 mo
357.582 192.327 li
368.081 169.041 li
371.636 183.803 li
371.563 183.848 li
357.421 192.687 li
cp
f
392.182 245.212 mo
418.437 262.339 li
414.612 247.456 li
392.182 245.212 li
cp
418.822 262.876 mo
418.565 262.707 li
391.23 244.877 li
391.718 244.926 li
414.802 247.235 li
418.822 262.876 li
cp
f
373.641 201.556 mo
373.641 202.302 373.037 202.906 372.291 202.906 cv
371.546 202.906 370.942 202.302 370.942 201.556 cv
370.942 200.811 371.546 200.207 372.291 200.207 cv
373.037 200.207 373.641 200.811 373.641 201.556 cv
cp
.615686 .733333 .788235 rgb
f
377.524 208.856 mo
377.524 209.601 376.92 210.206 376.174 210.206 cv
375.429 210.206 374.825 209.601 374.825 208.856 cv
374.825 208.111 375.429 207.507 376.174 207.507 cv
376.92 207.507 377.524 208.111 377.524 208.856 cv
cp
f
384.513 206.216 mo
384.513 206.961 383.909 207.565 383.164 207.565 cv
382.418 207.565 381.814 206.961 381.814 206.216 cv
381.814 205.471 382.418 204.866 383.164 204.866 cv
383.909 204.866 384.513 205.471 384.513 206.216 cv
cp
f
384.713 192.467 mo
384.713 193.212 384.109 193.816 383.364 193.816 cv
382.619 193.816 382.014 193.212 382.014 192.467 cv
382.014 191.721 382.619 191.117 383.364 191.117 cv
384.109 191.117 384.713 191.721 384.713 192.467 cv
cp
f
388.862 173.444 mo
388.862 174.189 388.258 174.793 387.512 174.793 cv
386.767 174.793 386.163 174.189 386.163 173.444 cv
386.163 172.699 386.767 172.095 387.512 172.095 cv
388.258 172.095 388.862 172.699 388.862 173.444 cv
cp
.439216 .611765 .694118 rgb
f
387.464 181.054 mo
387.464 181.8 386.86 182.404 386.115 182.404 cv
385.369 182.404 384.765 181.8 384.765 181.054 cv
384.765 180.309 385.369 179.705 386.115 179.705 cv
386.86 179.705 387.464 180.309 387.464 181.054 cv
cp
.615686 .733333 .788235 rgb
f
394.609 193.946 mo
394.609 194.691 394.004 195.295 393.259 195.295 cv
392.514 195.295 391.91 194.691 391.91 193.946 cv
391.91 193.201 392.514 192.596 393.259 192.596 cv
394.004 192.596 394.609 193.201 394.609 193.946 cv
cp
.439216 .611765 .694118 rgb
f
396.317 184.627 mo
396.317 185.372 395.713 185.976 394.968 185.976 cv
394.222 185.976 393.618 185.372 393.618 184.627 cv
393.618 183.882 394.222 183.277 394.968 183.277 cv
395.713 183.277 396.317 183.882 396.317 184.627 cv
cp
.615686 .733333 .788235 rgb
f
369.758 208.235 mo
369.758 208.98 369.154 209.584 368.408 209.584 cv
367.663 209.584 367.059 208.98 367.059 208.235 cv
367.059 207.49 367.663 206.886 368.408 206.886 cv
369.154 206.886 369.758 207.49 369.758 208.235 cv
cp
f
355.313 195.188 mo
355.313 195.934 354.709 196.538 353.964 196.538 cv
353.219 196.538 352.615 195.934 352.615 195.188 cv
352.615 194.443 353.219 193.839 353.964 193.839 cv
354.709 193.839 355.313 194.443 355.313 195.188 cv
cp
f
364.166 211.652 mo
364.166 212.397 363.562 213.001 362.817 213.001 cv
362.072 213.001 361.468 212.397 361.468 211.652 cv
361.468 210.907 362.072 210.303 362.817 210.303 cv
363.562 210.303 364.166 210.907 364.166 211.652 cv
cp
f
371.777 214.914 mo
371.777 215.659 371.173 216.263 370.428 216.263 cv
369.682 216.263 369.078 215.659 369.078 214.914 cv
369.078 214.168 369.682 213.564 370.428 213.564 cv
371.173 213.564 371.777 214.168 371.777 214.914 cv
cp
f
390.57 220.66 mo
390.57 221.406 389.966 222.01 389.221 222.01 cv
388.476 222.01 387.872 221.406 387.872 220.66 cv
387.872 219.915 388.476 219.311 389.221 219.311 cv
389.966 219.311 390.57 219.915 390.57 220.66 cv
cp
f
397.87 217.399 mo
397.87 218.144 397.266 218.748 396.521 218.748 cv
395.776 218.748 395.171 218.144 395.171 217.399 cv
395.171 216.653 395.776 216.049 396.521 216.049 cv
397.266 216.049 397.87 216.653 397.87 217.399 cv
cp
f
393.055 211.497 mo
393.055 212.242 392.451 212.846 391.706 212.846 cv
390.961 212.846 390.357 212.242 390.357 211.497 cv
390.357 210.751 390.961 210.147 391.706 210.147 cv
392.451 210.147 393.055 210.751 393.055 211.497 cv
cp
f
395.851 202.022 mo
395.851 202.768 395.247 203.372 394.502 203.372 cv
393.756 203.372 393.152 202.768 393.152 202.022 cv
393.152 201.277 393.756 200.673 394.502 200.673 cv
395.247 200.673 395.851 201.277 395.851 202.022 cv
cp
f
409.053 205.905 mo
409.053 206.65 408.449 207.255 407.704 207.255 cv
406.958 207.255 406.354 206.65 406.354 205.905 cv
406.354 205.16 406.958 204.556 407.704 204.556 cv
408.449 204.556 409.053 205.16 409.053 205.905 cv
cp
f
426.293 212.894 mo
426.293 213.64 425.689 214.244 424.944 214.244 cv
424.199 214.244 423.594 213.64 423.594 212.894 cv
423.594 212.149 424.199 211.545 424.944 211.545 cv
425.689 211.545 426.293 212.149 426.293 212.894 cv
cp
f
427.536 219.884 mo
427.536 220.629 426.932 221.233 426.186 221.233 cv
425.441 221.233 424.837 220.629 424.837 219.884 cv
424.837 219.138 425.441 218.534 426.186 218.534 cv
426.932 218.534 427.536 219.138 427.536 219.884 cv
cp
f
415.732 217.709 mo
415.732 218.455 415.127 219.059 414.382 219.059 cv
413.637 219.059 413.033 218.455 413.033 217.709 cv
413.033 216.964 413.637 216.36 414.382 216.36 cv
415.127 216.36 415.732 216.964 415.732 217.709 cv
cp
.439216 .611765 .694118 rgb
f
418.683 222.679 mo
418.683 223.425 418.079 224.029 417.333 224.029 cv
416.588 224.029 415.984 223.425 415.984 222.679 cv
415.984 221.934 416.588 221.33 417.333 221.33 cv
418.079 221.33 418.683 221.934 418.683 222.679 cv
cp
.615686 .733333 .788235 rgb
f
414.178 234.173 mo
414.178 234.918 413.574 235.522 412.829 235.522 cv
412.084 235.522 411.48 234.918 411.48 234.173 cv
411.48 233.428 412.084 232.824 412.829 232.824 cv
413.574 232.824 414.178 233.428 414.178 234.173 cv
cp
f
408.276 229.979 mo
408.276 230.725 407.672 231.329 406.927 231.329 cv
406.182 231.329 405.578 230.725 405.578 229.979 cv
405.578 229.234 406.182 228.63 406.927 228.63 cv
407.672 228.63 408.276 229.234 408.276 229.979 cv
cp
f
409.797 223.184 mo
409.797 223.929 409.193 224.533 408.447 224.533 cv
407.702 224.533 407.098 223.929 407.098 223.184 cv
407.098 222.439 407.702 221.835 408.447 221.835 cv
409.193 221.835 409.797 222.439 409.797 223.184 cv
cp
f
401.565 223.339 mo
401.565 224.085 400.961 224.689 400.216 224.689 cv
399.47 224.689 398.866 224.085 398.866 223.339 cv
398.866 222.594 399.47 221.99 400.216 221.99 cv
400.961 221.99 401.565 222.594 401.565 223.339 cv
cp
f
397.094 228.892 mo
397.094 229.637 396.489 230.242 395.744 230.242 cv
394.999 230.242 394.395 229.637 394.395 228.892 cv
394.395 228.147 394.999 227.543 395.744 227.543 cv
396.489 227.543 397.094 228.147 397.094 228.892 cv
cp
.439216 .611765 .694118 rgb
f
387.153 235.105 mo
387.153 235.85 386.549 236.454 385.804 236.454 cv
385.059 236.454 384.454 235.85 384.454 235.105 cv
384.454 234.36 385.059 233.755 385.804 233.755 cv
386.549 233.755 387.153 234.36 387.153 235.105 cv
cp
.615686 .733333 .788235 rgb
f
376.436 239.764 mo
376.436 240.51 375.832 241.114 375.087 241.114 cv
374.342 241.114 373.738 240.51 373.738 239.764 cv
373.738 239.019 374.342 238.415 375.087 238.415 cv
375.832 238.415 376.436 239.019 376.436 239.764 cv
cp
f
375.194 259.956 mo
375.194 260.701 374.59 261.305 373.844 261.305 cv
373.099 261.305 372.495 260.701 372.495 259.956 cv
372.495 259.21 373.099 258.606 373.844 258.606 cv
374.59 258.606 375.194 259.21 375.194 259.956 cv
cp
f
386.221 259.8 mo
386.221 260.545 385.617 261.15 384.872 261.15 cv
384.127 261.15 383.523 260.545 383.523 259.8 cv
383.523 259.055 384.127 258.451 384.872 258.451 cv
385.617 258.451 386.221 259.055 386.221 259.8 cv
cp
f
398.491 256.228 mo
398.491 256.973 397.887 257.577 397.142 257.577 cv
396.397 257.577 395.793 256.973 395.793 256.228 cv
395.793 255.483 396.397 254.879 397.142 254.879 cv
397.887 254.879 398.491 255.483 398.491 256.228 cv
cp
.439216 .611765 .694118 rgb
f
401.598 263.372 mo
401.598 264.118 400.994 264.722 400.248 264.722 cv
399.503 264.722 398.899 264.118 398.899 263.372 cv
398.899 262.627 399.503 262.023 400.248 262.023 cv
400.994 262.023 401.598 262.627 401.598 263.372 cv
cp
.615686 .733333 .788235 rgb
f
410.621 268.469 mo
410.621 269.214 410.017 269.818 409.271 269.818 cv
408.526 269.818 407.922 269.214 407.922 268.469 cv
407.922 267.724 408.526 267.119 409.271 267.119 cv
410.017 267.119 410.621 267.724 410.621 268.469 cv
cp
f
419.94 262.256 mo
419.94 263.001 419.336 263.606 418.59 263.606 cv
417.845 263.606 417.241 263.001 417.241 262.256 cv
417.241 261.511 417.845 260.907 418.59 260.907 cv
419.336 260.907 419.94 261.511 419.94 262.256 cv
cp
f
429.103 247.967 mo
429.103 248.712 428.499 249.316 427.754 249.316 cv
427.009 249.316 426.405 248.712 426.405 247.967 cv
426.405 247.222 427.009 246.618 427.754 246.618 cv
428.499 246.618 429.103 247.222 429.103 247.967 cv
cp
f
424.289 236.629 mo
424.289 237.374 423.685 237.978 422.939 237.978 cv
422.194 237.978 421.59 237.374 421.59 236.629 cv
421.59 235.884 422.194 235.28 422.939 235.28 cv
423.685 235.28 424.289 235.884 424.289 236.629 cv
cp
f
416.057 247.346 mo
416.057 248.091 415.453 248.695 414.708 248.695 cv
413.962 248.695 413.358 248.091 413.358 247.346 cv
413.358 246.601 413.962 245.996 414.708 245.996 cv
415.453 245.996 416.057 246.601 416.057 247.346 cv
cp
f
405.015 238.988 mo
405.015 239.733 404.411 240.337 403.665 240.337 cv
402.92 240.337 402.316 239.733 402.316 238.988 cv
402.316 238.242 402.92 237.638 403.665 237.638 cv
404.411 237.638 405.015 238.242 405.015 238.988 cv
cp
f
393.055 245.045 mo
393.055 245.79 392.451 246.394 391.706 246.394 cv
390.961 246.394 390.357 245.79 390.357 245.045 cv
390.357 244.3 390.961 243.696 391.706 243.696 cv
392.451 243.696 393.055 244.3 393.055 245.045 cv
cp
f
379.387 249.394 mo
379.387 250.139 378.783 250.743 378.038 250.743 cv
377.293 250.743 376.689 250.139 376.689 249.394 cv
376.689 248.649 377.293 248.045 378.038 248.045 cv
378.783 248.045 379.387 248.649 379.387 249.394 cv
cp
.439216 .611765 .694118 rgb
f
407.5 275.021 mo
407.5 275.766 406.896 276.371 406.15 276.371 cv
405.405 276.371 404.801 275.766 404.801 275.021 cv
404.801 274.276 405.405 273.672 406.15 273.672 cv
406.896 273.672 407.5 274.276 407.5 275.021 cv
cp
.615686 .733333 .788235 rgb
f
430.538 280.846 mo
430.538 281.591 429.934 282.195 429.189 282.195 cv
428.444 282.195 427.84 281.591 427.84 280.846 cv
427.84 280.101 428.444 279.497 429.189 279.497 cv
429.934 279.497 430.538 280.101 430.538 280.846 cv
cp
f
445.449 273.391 mo
445.449 274.136 444.845 274.74 444.099 274.74 cv
443.354 274.74 442.75 274.136 442.75 273.391 cv
442.75 272.645 443.354 272.041 444.099 272.041 cv
444.845 272.041 445.449 272.645 445.449 273.391 cv
cp
.439216 .611765 .694118 rgb
f
453.525 267.023 mo
453.525 267.768 452.921 268.372 452.176 268.372 cv
451.431 268.372 450.826 267.768 450.826 267.023 cv
450.826 266.277 451.431 265.673 452.176 265.673 cv
452.921 265.673 453.525 266.277 453.525 267.023 cv
cp
.615686 .733333 .788235 rgb
f
448.752 261.665 mo
448.752 262.41 448.148 263.014 447.403 263.014 cv
446.658 263.014 446.054 262.41 446.054 261.665 cv
446.054 260.92 446.658 260.316 447.403 260.316 cv
448.148 260.316 448.752 260.92 448.752 261.665 cv
cp
f
396.224 152.754 mo
396.224 153.499 395.62 154.103 394.875 154.103 cv
394.129 154.103 393.525 153.499 393.525 152.754 cv
393.525 152.009 394.129 151.405 394.875 151.405 cv
395.62 151.405 396.224 152.009 396.224 152.754 cv
cp
f
407.034 146.108 mo
407.034 146.853 406.43 147.458 405.685 147.458 cv
404.939 147.458 404.335 146.853 404.335 146.108 cv
404.335 145.363 404.939 144.759 405.685 144.759 cv
406.43 144.759 407.034 145.363 407.034 146.108 cv
cp
.439216 .611765 .694118 rgb
f
407.5 131.042 mo
407.5 131.788 406.896 132.392 406.15 132.392 cv
405.405 132.392 404.801 131.788 404.801 131.042 cv
404.801 130.297 405.405 129.693 406.15 129.693 cv
406.896 129.693 407.5 130.297 407.5 131.042 cv
cp
.615686 .733333 .788235 rgb
f
398.802 125.14 mo
398.802 125.886 398.198 126.49 397.453 126.49 cv
396.707 126.49 396.103 125.886 396.103 125.14 cv
396.103 124.395 396.707 123.791 397.453 123.791 cv
398.198 123.791 398.802 124.395 398.802 125.14 cv
cp
f
402.374 141.138 mo
402.374 141.883 401.77 142.487 401.025 142.487 cv
400.28 142.487 399.676 141.883 399.676 141.138 cv
399.676 140.393 400.28 139.789 401.025 139.789 cv
401.77 139.789 402.374 140.393 402.374 141.138 cv
cp
f
395.23 146.574 mo
395.23 147.319 394.626 147.923 393.88 147.923 cv
393.135 147.923 392.531 147.319 392.531 146.574 cv
392.531 145.829 393.135 145.225 393.88 145.225 cv
394.626 145.225 395.23 145.829 395.23 146.574 cv
cp
f
365.679 200.873 mo
365.679 201.618 365.075 202.222 364.33 202.222 cv
363.585 202.222 362.981 201.618 362.981 200.873 cv
362.981 200.128 363.585 199.524 364.33 199.524 cv
365.075 199.524 365.679 200.128 365.679 200.873 cv
cp
.239216 .372549 .435294 rgb
f
359.041 192.376 mo
359.041 193.122 358.437 193.726 357.692 193.726 cv
356.947 193.726 356.342 193.122 356.342 192.376 cv
356.342 191.631 356.947 191.027 357.692 191.027 cv
358.437 191.027 359.041 191.631 359.041 192.376 cv
cp
f
393.055 211.497 mo
393.055 212.242 392.451 212.846 391.706 212.846 cv
390.961 212.846 390.357 212.242 390.357 211.497 cv
390.357 210.751 390.961 210.147 391.706 210.147 cv
392.451 210.147 393.055 210.751 393.055 211.497 cv
cp
f
419.94 262.256 mo
419.94 263.001 419.336 263.606 418.59 263.606 cv
417.845 263.606 417.241 263.001 417.241 262.256 cv
417.241 261.511 417.845 260.907 418.59 260.907 cv
419.336 260.907 419.94 261.511 419.94 262.256 cv
cp
f
416.89 247.346 mo
416.89 248.551 415.913 249.529 414.707 249.529 cv
413.502 249.529 412.525 248.551 412.525 247.346 cv
412.525 246.14 413.502 245.163 414.707 245.163 cv
415.913 245.163 416.89 246.14 416.89 247.346 cv
cp
f
393.055 245.045 mo
393.055 245.79 392.451 246.394 391.706 246.394 cv
390.961 246.394 390.357 245.79 390.357 245.045 cv
390.357 244.3 390.961 243.696 391.706 243.696 cv
392.451 243.696 393.055 244.3 393.055 245.045 cv
cp
f
398.604 101.567 mo
398.604 102.312 398 102.916 397.255 102.916 cv
396.51 102.916 395.906 102.312 395.906 101.567 cv
395.906 100.822 396.51 100.217 397.255 100.217 cv
398 100.217 398.604 100.822 398.604 101.567 cv
cp
f
202.089 170.217 mo
202.089 170.962 201.484 171.566 200.739 171.566 cv
199.994 171.566 199.39 170.962 199.39 170.217 cv
199.39 169.472 199.994 168.868 200.739 168.868 cv
201.484 168.868 202.089 169.472 202.089 170.217 cv
cp
f
250.477 261.86 mo
250.477 262.811 249.705 263.583 248.753 263.583 cv
247.802 263.583 247.03 262.811 247.03 261.86 cv
247.03 260.908 247.802 260.137 248.753 260.137 cv
249.705 260.137 250.477 260.908 250.477 261.86 cv
cp
f
240.869 161.676 mo
240.869 162.421 240.265 163.025 239.52 163.025 cv
238.775 163.025 238.171 162.421 238.171 161.676 cv
238.171 160.931 238.775 160.327 239.52 160.327 cv
240.265 160.327 240.869 160.931 240.869 161.676 cv
cp
f
233.944 177.142 mo
233.944 177.887 233.34 178.492 232.595 178.492 cv
231.85 178.492 231.245 177.887 231.245 177.142 cv
231.245 176.397 231.85 175.793 232.595 175.793 cv
233.34 175.793 233.944 176.397 233.944 177.142 cv
cp
f
263.491 179.912 mo
263.491 180.657 262.887 181.262 262.142 181.262 cv
261.397 181.262 260.793 180.657 260.793 179.912 cv
260.793 179.167 261.397 178.563 262.142 178.563 cv
262.887 178.563 263.491 179.167 263.491 179.912 cv
cp
f
254.346 199.995 mo
254.346 201.044 253.496 201.895 252.447 201.895 cv
251.398 201.895 250.547 201.044 250.547 199.995 cv
250.547 198.946 251.398 198.096 252.447 198.096 cv
253.496 198.096 254.346 198.946 254.346 199.995 cv
cp
f
284.498 231.158 mo
284.498 231.903 283.893 232.508 283.148 232.508 cv
282.403 232.508 281.799 231.903 281.799 231.158 cv
281.799 230.413 282.403 229.809 283.148 229.809 cv
283.893 229.809 284.498 230.413 284.498 231.158 cv
cp
f
214.57 140.804 mo
214.57 141.949 213.642 142.877 212.498 142.877 cv
211.353 142.877 210.425 141.949 210.425 140.804 cv
210.425 139.66 211.353 138.732 212.498 138.732 cv
213.642 138.732 214.57 139.66 214.57 140.804 cv
cp
f
229.699 131.571 mo
229.699 132.592 228.871 133.42 227.85 133.42 cv
226.829 133.42 226.001 132.592 226.001 131.571 cv
226.001 130.55 226.829 129.722 227.85 129.722 cv
228.871 129.722 229.699 130.55 229.699 131.571 cv
cp
f
243.254 136.177 mo
243.254 136.922 242.649 137.526 241.904 137.526 cv
241.159 137.526 240.555 136.922 240.555 136.177 cv
240.555 135.432 241.159 134.828 241.904 134.828 cv
242.649 134.828 243.254 135.432 243.254 136.177 cv
cp
f
230.793 120.153 mo
230.793 120.899 230.189 121.503 229.443 121.503 cv
228.698 121.503 228.094 120.899 228.094 120.153 cv
228.094 119.408 228.698 118.804 229.443 118.804 cv
230.189 118.804 230.793 119.408 230.793 120.153 cv
cp
f
248.583 116.436 mo
248.583 117.181 247.979 117.786 247.233 117.786 cv
246.488 117.786 245.884 117.181 245.884 116.436 cv
245.884 115.691 246.488 115.087 247.233 115.087 cv
247.979 115.087 248.583 115.691 248.583 116.436 cv
cp
f
252.06 125.464 mo
252.06 126.517 251.207 127.37 250.154 127.37 cv
249.102 127.37 248.248 126.517 248.248 125.464 cv
248.248 124.411 249.102 123.558 250.154 123.558 cv
251.207 123.558 252.06 124.411 252.06 125.464 cv
cp
f
268.624 135.288 mo
268.624 136.25 267.844 137.03 266.882 137.03 cv
265.921 137.03 265.141 136.25 265.141 135.288 cv
265.141 134.327 265.921 133.547 266.882 133.547 cv
267.844 133.547 268.624 134.327 268.624 135.288 cv
cp
f
258.407 105.815 mo
258.407 106.56 257.803 107.165 257.058 107.165 cv
256.313 107.165 255.708 106.56 255.708 105.815 cv
255.708 105.07 256.313 104.466 257.058 104.466 cv
257.803 104.466 258.407 105.07 258.407 105.815 cv
cp
f
238.758 107.143 mo
238.758 107.888 238.154 108.492 237.409 108.492 cv
236.664 108.492 236.06 107.888 236.06 107.143 cv
236.06 106.398 236.664 105.793 237.409 105.793 cv
238.154 105.793 238.758 106.398 238.758 107.143 cv
cp
f
265.576 100.239 mo
265.576 100.984 264.972 101.588 264.227 101.588 cv
263.482 101.588 262.878 100.984 262.878 100.239 cv
262.878 99.4939 263.482 98.8898 264.227 98.8898 cv
264.972 98.8898 265.576 99.4939 265.576 100.239 cv
cp
f
276.173 114.843 mo
276.173 116.161 275.104 117.23 273.786 117.23 cv
272.468 117.23 271.399 116.161 271.399 114.843 cv
271.399 113.525 272.468 112.456 273.786 112.456 cv
275.104 112.456 276.173 113.525 276.173 114.843 cv
cp
f
313.636 161.044 mo
313.636 161.79 313.032 162.394 312.287 162.394 cv
311.542 162.394 310.938 161.79 310.938 161.044 cv
310.938 160.299 311.542 159.695 312.287 159.695 cv
313.032 159.695 313.636 160.299 313.636 161.044 cv
cp
f
305.671 116.436 mo
305.671 117.181 305.066 117.786 304.321 117.786 cv
303.576 117.786 302.972 117.181 302.972 116.436 cv
302.972 115.691 303.576 115.087 304.321 115.087 cv
305.066 115.087 305.671 115.691 305.671 116.436 cv
cp
f
382.938 164.496 mo
382.938 165.241 382.334 165.846 381.589 165.846 cv
380.844 165.846 380.24 165.241 380.24 164.496 cv
380.24 163.751 380.844 163.147 381.589 163.147 cv
382.334 163.147 382.938 163.751 382.938 164.496 cv
cp
f
369.397 169.541 mo
369.397 170.286 368.792 170.89 368.047 170.89 cv
367.302 170.89 366.698 170.286 366.698 169.541 cv
366.698 168.796 367.302 168.192 368.047 168.192 cv
368.792 168.192 369.397 168.796 369.397 169.541 cv
cp
f
350.995 174.342 mo
350.995 175.336 350.189 176.142 349.195 176.142 cv
348.201 176.142 347.395 175.336 347.395 174.342 cv
347.395 173.348 348.201 172.543 349.195 172.543 cv
350.189 172.543 350.995 173.348 350.995 174.342 cv
cp
f
267.648 121.574 mo
267.648 122.093 267.228 122.512 266.71 122.512 cv
266.192 122.512 265.772 122.093 265.772 121.574 cv
265.772 121.056 266.192 120.636 266.71 120.636 cv
267.228 120.636 267.648 121.056 267.648 121.574 cv
cp
f
236.809 129.365 mo
236.809 129.883 236.389 130.303 235.871 130.303 cv
235.353 130.303 234.933 129.883 234.933 129.365 cv
234.933 128.847 235.353 128.427 235.871 128.427 cv
236.389 128.427 236.809 128.847 236.809 129.365 cv
cp
f
222.564 115.458 mo
222.564 116.555 221.675 117.444 220.578 117.444 cv
219.482 117.444 218.593 116.555 218.593 115.458 cv
218.593 114.361 219.482 113.472 220.578 113.472 cv
221.675 113.472 222.564 114.361 222.564 115.458 cv
cp
f
223.212 132.102 mo
223.212 132.62 222.792 133.04 222.274 133.04 cv
221.756 133.04 221.336 132.62 221.336 132.102 cv
221.336 131.584 221.756 131.164 222.274 131.164 cv
222.792 131.164 223.212 131.584 223.212 132.102 cv
cp
f
237.02 114.843 mo
237.02 115.361 236.6 115.781 236.081 115.781 cv
235.563 115.781 235.143 115.361 235.143 114.843 cv
235.143 114.325 235.563 113.905 236.081 113.905 cv
236.6 113.905 237.02 114.325 237.02 114.843 cv
cp
f
257.332 135.288 mo
257.332 135.807 256.912 136.227 256.394 136.227 cv
255.876 136.227 255.456 135.807 255.456 135.288 cv
255.456 134.77 255.876 134.35 256.394 134.35 cv
256.912 134.35 257.332 134.77 257.332 135.288 cv
cp
f
282.69 129.181 mo
282.69 129.7 282.27 130.119 281.752 130.119 cv
281.233 130.119 280.814 129.7 280.814 129.181 cv
280.814 128.663 281.233 128.243 281.752 128.243 cv
282.27 128.243 282.69 128.663 282.69 129.181 cv
cp
f
280.598 149.706 mo
280.598 150.224 280.178 150.644 279.66 150.644 cv
279.141 150.644 278.721 150.224 278.721 149.706 cv
278.721 149.188 279.141 148.768 279.66 148.768 cv
280.178 148.768 280.598 149.188 280.598 149.706 cv
cp
f
222.003 158.633 mo
222.003 159.151 221.583 159.571 221.065 159.571 cv
220.547 159.571 220.127 159.151 220.127 158.633 cv
220.127 158.115 220.547 157.695 221.065 157.695 cv
221.583 157.695 222.003 158.115 222.003 158.633 cv
cp
f
291.983 163.434 mo
291.983 163.952 291.563 164.372 291.045 164.372 cv
290.527 164.372 290.107 163.952 290.107 163.434 cv
290.107 162.916 290.527 162.496 291.045 162.496 cv
291.563 162.496 291.983 162.916 291.983 163.434 cv
cp
f
254.141 224.693 mo
254.141 225.212 253.721 225.632 253.203 225.632 cv
252.685 225.632 252.265 225.212 252.265 224.693 cv
252.265 224.175 252.685 223.755 253.203 223.755 cv
253.721 223.755 254.141 224.175 254.141 224.693 cv
cp
f
288.596 110.064 mo
288.596 110.471 288.266 110.801 287.859 110.801 cv
287.452 110.801 287.122 110.471 287.122 110.064 cv
287.122 109.656 287.452 109.326 287.859 109.326 cv
288.266 109.326 288.596 109.656 288.596 110.064 cv
cp
f
315.945 130.243 mo
315.945 130.65 315.615 130.981 315.208 130.981 cv
314.801 130.981 314.471 130.65 314.471 130.243 cv
314.471 129.836 314.801 129.506 315.208 129.506 cv
315.615 129.506 315.945 129.836 315.945 130.243 cv
cp
f
345.418 131.04 mo
345.418 131.447 345.088 131.777 344.681 131.777 cv
344.274 131.777 343.944 131.447 343.944 131.04 cv
343.944 130.633 344.274 130.303 344.681 130.303 cv
345.088 130.303 345.418 130.633 345.418 131.04 cv
cp
f
383.654 139.802 mo
383.654 140.209 383.324 140.539 382.917 140.539 cv
382.509 140.539 382.18 140.209 382.18 139.802 cv
382.18 139.395 382.509 139.065 382.917 139.065 cv
383.324 139.065 383.654 139.395 383.654 139.802 cv
cp
f
389.495 147.768 mo
389.495 148.175 389.165 148.505 388.758 148.505 cv
388.351 148.505 388.021 148.175 388.021 147.768 cv
388.021 147.361 388.351 147.031 388.758 147.031 cv
389.165 147.031 389.495 147.361 389.495 147.768 cv
cp
f
372.369 183.614 mo
372.369 184.021 372.039 184.351 371.632 184.351 cv
371.225 184.351 370.895 184.021 370.895 183.614 cv
370.895 183.207 371.225 182.877 371.632 182.877 cv
372.039 182.877 372.369 183.207 372.369 183.614 cv
cp
f
338.913 148.565 mo
338.913 148.972 338.583 149.302 338.176 149.302 cv
337.769 149.302 337.439 148.972 337.439 148.565 cv
337.439 148.158 337.769 147.828 338.176 147.828 cv
338.583 147.828 338.913 148.158 338.913 148.565 cv
cp
f
300.876 165.551 mo
300.876 165.958 300.546 166.288 300.139 166.288 cv
299.732 166.288 299.402 165.958 299.402 165.551 cv
299.402 165.144 299.732 164.814 300.139 164.814 cv
300.546 164.814 300.876 165.144 300.876 165.551 cv
cp
f
295.234 178.06 mo
295.234 178.467 294.904 178.797 294.497 178.797 cv
294.09 178.797 293.76 178.467 293.76 178.06 cv
293.76 177.653 294.09 177.323 294.497 177.323 cv
294.904 177.323 295.234 177.653 295.234 178.06 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 /1 /2 /3 /4 /5 /6 /7 /8 /9 
/10 /11 /12 /13 /14 /15 /16 /17 /18 /19 
/20 /21 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 18.1.1
%%For: (??????? ??????) ()
%%Title: (1504.m00.i125.n055.P.c20.232516795 Vector low poly world map illustration.eps)
%%CreationDate: 4/23/2015 7:16 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb",KCKh`<cg^gWYA=/*HD#rn@I,uVD+R8bBq\@rk5u18!%BocLY_@riVDlE,hk,H9L=KiG*B/@\`j==Q7Z7*-!?NM(@nSVZW_-N
%jBI,9B8k'7AJc:(IZ<67>?H,N3srRNegRmTrC50#*HkVOT\J:?eQ\U4H=m%E\XD,(?beV^bkn&>DuH*Gf?9F0BTq2Y:J8*A:hk+k
%j^,sK)H:CA;WHA7BE\D*1R5SM]+$/L%XL8T"Mgm`O*:)?QT-\s=oA':jm81H4.fc9_ga95YPlRcRJ<tF^BT/d]S'[5]8l+K3,"X?
%j^,(>KT=V>%"8uNb=j'=0DFcq0qM'<$U49M1'h>LF3qpi0"#_-&<)&Hq'5lJ?<EkL<Z1m$Wg<R9T6\H#=JDG*_ZKPJ70U`Q=>kQO
%AHS7^!)")AO@\2kT[Bp/HN?hc[uIJ[=lfke8,kqVLA@O#X3<H,^&t_0]331r39!a16e76!+S_]Ir4/DE(6kjc8'Z4ZdlX`2%qZMY
%#$=A2+8+qckB4,^"0r4u^6j`T<]-fXRSiZS]hHnX@7gLA)COXl7F2-#D:SMC&*k)dm,_fnYugo:+@e3?a[&"%T![A$5_51`^u!*,
%0tES>Hs9=0mCF1TST"e.rX]&f=+FSHS3u5]K21g.em)Pc@bJI?H$?/bX%'2Vnr+sq+c'8sqt8LC*%7K9lNL!?ElLnapU*FtAG;.i
%k@1d/h.e)2]D-#&J2+j^W4+D?\'Z;i*J!@_,q;l5qQ^86C/"j/qen.,GM_Rm]anK<FB\Y:DY(O6qeqD'C?mFl]Ep($<X36DRQ3A)
%#(J18(28>3:-.JD^js2;3n\PU]efp9i7SDli`g(hJ#`OGBb)^."A&_]PSTa<"SGf"""``6JTt9M2p7a#I1ZP9X8N(VP^uRA8?<[#
%hPGf1][@"i&/;-#!<8Jpg/i""g8d(E+K2Bsl2B<#>iC?9K5r5hdf;PF$@7u\6*RZeT)_&+pF]li#b':]8.4s#6t`=/-qaY^]3MPk
%/ir+fAZ_-;GP^.=bXnj8&"sO053tl@NkWAr.FI>_S`W4:i03M-<Z(07jI9g=`P$u-L@k[Vc;H<Q0Z@c97+@$hG\s#35Kgk6HaU1Z
%b]s&\ERq/A\r@94??-<%VcKc%a$7/K+I-b(Y0c*]d4"uo81.Pf,:`ZW??"WDCJE.g1<9>s08S1kX3jCZ1NRqHD?iQQ<V&0OBqN8V
%VXI`iX2"\S1\mo^YO-GSeJ`7^l^>`Dc"=Ke)qK]ob1J$@)HofQ=2+P.D]aK/D=dMZ9\6XGb;;q2)SF"H]YM"%Nr.Vl%_&tP5:5Q`
%EJ'NYJSh_Ur8a6k4Q\=:IOo(dpmN'iaXA![hg[GjNL\tFO(UHAA&F@=R./#O-iDlj^HJ:iTd?I@"+L>@aX@31r8"7-S<9/Q^4bek
%0#/7;2YGun%lXBTcp.59)4Z$6n>#j1HIr";!>!,e!DF%D`5`SP0hUD\`0eK![cOH,4?::-P@FZAWIKK*73gb(o2tIeItNJPi!$Gp
%($pNNE!p!g0B<K9_KMVL-l,G%1P6cU1lGD^/ilG1kS8O@aVFEdm:)cFs!to&@<P8UA<s;0kgCchjHNpEnOc"CjPVCmg4l4$r"SB#
%rhi;[oc\VnrTHCQ?[?Xj5M7:RLHWdDTmsc5][jRC]@Oa^:%bE1/>sU'I@<P"7;Sr1kW_#QGJ&.5Ik.jERd\U<0X@4:Scp%4iV5TX
%nUh@bkm:(MRl3e0eT3msA>mNeb]e"`=Y+?/a3N=?A2o0sRd936".0><2f<JPYVn8P;Ggf=^W)T866oKobXa<UXPn3<)O)IeKpfmX
%%]tO,XVY),J?hbIb5nU$KCm6;*%A_PA0>$j/-.ckJ@tD<mVIOR.DcLG8H9CF"Nb2,K^qgobUI]AQ]P>*VHiSum+J4B+Wl+.oqh!d
%Eb(YgKnQ/m%5P_\nqWD[1C&58e<;?5[6rTW)IrlXTYm#`"@SI7$HPj'aT6\I!Yt2@BV@uu@)sO2kVdBr%_1-nIWg7R/`:^\HuB#>
%(1B@B_og':.e-osfW\OR=LS_8/\tmFJCMYmo^G/(JC+Sl`!3b]Jp^uL\&.f-4fQ.`Dk]JHUZdnf%Jpl'MnZH?(]"pm!-pr,:ud(g
%,^Lre)U-[1'YOhN**U1)NrmcCXa@`_l5+d;861P\D<uUW%4@LY[;/13&6PmdnI:Kde29rSs)FmPr,T&?)094Di^u(EO3Cba@^(fT
%X72__9!_ifp+3h,Ah\Tu-e>W$%HO?Li0$8hg&T>1mMXcQ0&VJ2VqB1H2R#oVNHRi8Z4lYa,BNs[B98ufN9M7T#@64p;HkPA9`b.5
%bPg(kodTTDeXri*!V&>W:.!!0>2Kp0Wpcm!eTZT@cA-^rCUe*T*2X8EPQ,>PEQE?uc]Q@=Ufo2.,,nbENS]tYKh%V[[)%f"/H-<2
%`Y8^@\]hiXcV3-Gn:P9QpS/Q*IdjQE2D^A"eAR..'T&Fjpm3ED6d1iNN]:X,09>#WP\Tk4\lIA!c^AqNleVQsb>pKnc\5O+?(g<)
%O"k!YA/>2[e=5sh.bJU/g0)0,FI+a5:bgSdPR$MR/o1,p-YQBeSlseOR2CC0s7Cc5[0Btj!YlK:12Fo1[!<7eoLHIKQaQgo<I:&W
%WhJdU=tfqZDe5r2\I<3hQb=*cW/?d*-Ohh\V82,pksjW%$5@q_%Y`^+kpOq65(W/$a`OX\V?=T!EQZ:2<i`)_%4b-[[h]tjBIAPp
%EB5IE7Ro`nOGhXq8VbHqM9'#<F4RN"bt9[]3hk/,Z@p"@ZRE/74W]lpE]5ChK("-'4O"KZW';`lR]YUVX]HCJ>A4@dW?*+OVW$T<
%m7AJAa(*Zd2\%=NnfOimdOS*#-X:!<dHUkjIQbrQXX^1^2P\:9XrHtW+W6f/',oSlYG_:d-KVbfmo4lZEO(m>UMHa[kaI]FZB57=
%OD)%S::]!AUd-6+3o-j6ef5tjiY03W^0^"KWCpks.@/.1)?hQ?is2eh#gP4FF3AIdOI9<rdtPYt>'AKPZMSQBG3>DOBYX5,X]kJm
%fQJ_A&p)N>qFnL86>(2ibtYg\BfA!<k,-sagp@`P.n=.cPZCak%Ir,[iGT35g9)j2Tp!=O93Z)?<7-s?*EhQKS7U>tbpfc\H^&7U
%e`tHQpaOeS4$fY77g]\HE36#_8UYV8?EX<2r\80MibDDqge"J(M40X_U8u+UXZ:\8LnW?/b.U,+c!IO&SJ5fi_`##e@5e%!ADhY6
%5/Vk/0[=2k[e)<!10#&:B6uL79O>8-kr8H`D(u2dHK@_l2/YA"EDo$8,TOh!(U$%X"uT<:<_^!WWfp\$Yh&.%1e7&sC:/e?n'Xm,
%=ES*@RM:s,(0mXj_IU>OU!df0CM@<IV-L4^Xl0s279(^M_N^Ot7OjNY[FTf0hS(Pu!aG]+5#P5%P,XTSNPFKiRg;&m)M`.:&H#D#
%>R[SoZ?l0Mq_*-8rGK)FDWXI8g2tMgPcJEM(]UUYo\J.5HP;It6nkVh=5Q;nPi/!=a8aC(RF<JdDDjFP0+Cgh/?d833+/S>C&]W$
%(klT2#<(BtN&o^PiF#@iLN9<D]5.V`1fARqG*k+E,gE3,28MH;L)/!,m?&j[k<HRMcJh..%HmF3S*VE`F?eto"A$a.T&>K'bg2BK
%oaEk"h3=m_bfnCp@i3M;OG?_GIYKsL6iQ=J#>^JmZ&qocc-MC4kJm+7j8$7U/N>]/;r_nUo83:RnJ$=UVVG<:5;sXWe'63ukNBjo
%rS0B?PP#ddNATB_XS/HoqE_<,N(:"12k?YZC'C5F8:fT)K1R4gXdu*Ye(i-:HEj#m!@>&+XX9Fgbr!:!d:-S9CC2NIn!o"?Sp#P$
%X%tnYrMgO"C"j-[*jW>3CndET`^M6\RN%oc"<2l-m@q#Y8$,c%H5iEJ]$]f-Rj677k,u%iELiq(88a"Ybb"^Xk5M]ts6Mu85BB^B
%iWOE!/#?lGX#i%mk,#kmr4cF1T.6U<=ED>sRR2uBW4d;P_cD6J5fhm9PPaB6Z9:js,5=,=kTHE8(q[m:PM=[;,?XlE%4^.m&<*&O
%$Gfs+oE1$0(Al*LET&H0?.:p&kl$WX'<6,obM;VC3RlF#+ri8a$Uao[\`78hGT"G>mWb-]?KR97\`77qb#80V4+<J*NTUeI\HD)N
%"$)[ednG+MDI`cC]c5ssk,c'U[rJ=_iUElN_JCU$\8@)&dpu(<p5B`#&dli=<r<>3[+h%S,0f1BHcCs8OfQsG5LsV`_fBVT):j1V
%SGIN!qL*@Ta_AIBcM,<X5UNBJReAPD2pS`hh6&;(2ji3B#,c_NVb+-BZZ":pYGmVOR0R&"fe%I.2'!;cn]36\AD3&;?fm0/Ashc*
%G2Q$:&dco=^R<'[IkfiK/X)m=UPt7:3_l4.!)#VRgZELIVnEqB@S[,t'JI/FdpC8I?Mn;iIt$5`DF5[CMY0kAUIeH5W(No&+cR[G
%SY.;U(^cUP-`Eo$!15XYa2)nVB"Gt4H+hb.MV-eYZ[00&[?2%iX`h6QlhspEZDi#=+6fqdLjG9E`KVOi;_Qm'i\>5lW.^*gPH-)`
%@nljghn:RB>CUPJP%A\"_W_!E?9/09,6%f]@CG2#DM`@S4*18sH(!q-iQPV4Su;4mhRK&QoU?Kmqled+-c'a@*c>t8iGC#"`A3t@
%QMLgg\HV5@;@)QUcF.eHF@,S84*/A`Xq9F99/I*ehkj,Hc>SfjFe\o7:,K^O5':)qX`Jp:Dii;9h=Gm*^P1#3#5S1oh#+&)r!)sj
%m>piXjO:Y"c>Se?e\4#X5sF0B-b`-KI:'Xh2ot0/j/omXrqE/adVlFTSCj=e,bMN5q)(djm**L'*Q:]m`-J7cl':Qf>I?<]Q=r4C
%01,07i*i0sjZ[IU3:f-\GCrd@ptcOMPr/66#3ntk[q=s9=6ijUSQ3Ysj^>cc>!:CD$F/:u;`I^C"3l;T!1)LaWNaf$:C=(bIcme>
%#HgWA/7qUh)iNHm9CbOi^no+f0G?5>-@@`E,+N3Qq(qA9=>CproeO`nCfSGG@Cu]E]@V];c*3G*4(\<@XgRC/'=UUrqXo'7VY.\$
%4@dBo(X]GXD+l;*eSWA^Z'rO)Ree9C#QK>oUbeNOiWa_Re1^Z&(KpKVf$4[DP2K1=,)%Akm1T]1*COkQ\X@c+TVI_1>3*o+dk%!N
%#0U8FSo:\pCDFNE%m$OjB7g,DBq+'fq(0eWc@gD)B2\Nu$/mgW4a+*a':'uAI^=&OP@ET20j3)P(n'.(Aik&lRl$V>gFpeA'+GEp
%'*n!ZT6/6#mWk6;(oEDXDl2&Y]omR)]H9)HlnoH:%tW8A2<h[;A(^-EaBPfRT3F:)QXAo!QG4cbne[;D<^!$Bcb_A;4pPT>='tGg
%Qk[^$e>N;5^\3hB8@L;D\+5`TXIBV2[ilogOiHEFO'8,F/PjWSqQFS3SY4C,,DEpg/T-ej5HkgP-TA<lqOcjkUUW!A\\3#2jm7kn
%PB0DsKC`8&<C4Mscjn436CK\p^$ar>"ZM.0d7U0GZmI7$Rjk53>cI?7rH^J`FW[YHeN<JMVq"<_'WB`]0M/$?kVK&]In:K9T<*;9
%8RZ>2&:;r,P+ap.R/g]q?;>RbUKjqPHF8ks=)<W.Wft<"?>Bc,'U`egja(LQQ,^/)<DBH;r#.Lb\QN^D&o,2,&Mr_h[8Iledr)#=
%ddrZ0&iMd4LCA7Ul$,Z@f."`FZglW^mSha8A3*sXRVgaQjL-Ke32Upp)h0I"1rVnAS+q/=d/]`pD47Z=Is'#40KO.LRS,quq3meV
%\^>1&Q]c-?[H8=c\Bq\%[5TSIi.#Esh6pk;.AjINY1EG`c2^h_8`<RL?/pb<#mSR@UGH)Ep1:;]\k$gm2OAeU?1L!sa`lJb?]$;'
%9>7st]8_u7=iS='B)/c6:%c5^X>_Tb:P[/*ORCeqYi;J*=ljAE8X#u\P"@]4+d")gBS$7M69bI`^uchkdae!l>NcO!HRdeal3l3)
%9bX,lT26;@9B)I`moRfY4o)X(G.LHZDom("[isL*)B>V;fi436rUsO"Rc,MjnQ14l;a)hhmJTTMnueoM0r6u9-M&Us7j9pBZMS9g
%c_[#+=ae_Erg\*^/YlgN=Hh3O2_uZn)H1N6KDD,HNW5h?j*q`o0b.Eqq5`'G[bR>JSRii[R6EBH\lin$CnB<T-un"%&a-?<C,jFE
%jnrcc*9XMGNgZD?fM?*eDk+S`3HfJ673hRST&/4iQ>"uaAH!5)0-%qn*pBLk3rIDKL3\BLC#(W.Tc-iLWfc9NnN9c\*i^q*e[TIi
%)Y80hDR4W^CE=4\*OB/-B''mjV.XF=k-itpfP7n]mY6#!mVX^?"ZfR(K9?Fq.??_3k0^[J$$YPRNO_Ph[QPNXY2.Ad)KUtZ5=NK%
%"WiX[36XN(F-">rUG7&SH.lkBma7DK1hO_%@GE2j7Ohq\`hRM]E`(V\9GCa/]Yl?89RO:naMZsr,$U>urp2aqF&0i`l<h5E.FRl*
%2lP8/Z@p"@oK7g^Io0r-?^+/kXNoUR;RjAWT=I#Cmjb-&Pc8k'c0l1?^EYJTeM;VW@;bPYmCg'D2pM&&$C,mSn(e1pmhS+LCh-HI
%m`l9Ukqi*49\\@\Ri?`rK5YYsbmhDe[_^"%PJMIdd`p[(LuhT71(uR</MbSGSVR6Q//c-[J'W%Ds$s0'gD.KIZ7,kDBBH%]1c$oS
%Mssf_(,W-,1M_0g%:;;f2DI*+?IL76d[8F'iAI/>1DaBH2Bu-R]ZtDI`NXY-np7+"M-4'@1]6mf/NcKq[FV6^@,6Pfg.!!GEIOQ@
%I0Z2iU*sXA5VpZBR^J,f`fDooLSVWn=%lNMcqXBee7>2(9!rY6Ip2D">W"<o/oiD$Up_r"c"9d:%dH>+SZa6jA5`1CV)UEH3I]'s
%'AdR5[;NT_Xos`Wg"S0hB6)10PQ>$HUUJj[FOFtge%U;M)>01bHt9LCj,p1!BbXHFEFL_j_NcqM8jaLBAkf&W`YW=_Y7hPt/`0G\
%f!L?gZeH&1T*C.?dGWG8@f.mT.\!lsG2<OWs/#4ST%E9#F:gV-aj"h9rb)&IW6I-D[(UK--.e$CP<p_;'(!$SW-PMeiQuBu;fGjL
%;X$.:f:3*3kie;0=JD=0>)bA>L8mrTNtc&!T-i+a91!%a9Z?<nC`T>`$e7(:*_!2&U!X1fISDOkeS;3fq]jW"KiKL45c'j<Zf!$m
%egKcX$C,q>)3e(\goQb+Q2OaPe7Vt8M-:\VB!%1f33W7[&_r+oXLH!RWSEA%PhV:\29eh=RepP8M)%g)fi2a8l35c+Ld[XY;k)$.
%'UHW'5BF(XC"Ce8D*9ZrMfLmiokfLR8YKA681[B5X`O>K;:9F6ba`4f@o;Bn-r[G5go=J@<*R\Un"4(k:i9ns9'%tLU81(aehlYp
%O$uXZ=OSl8.^pQ:,n1JCUVTYr/BTN6d`c/o9r\A@"0"#s\X`&BZVlM9c"CMZnqYH77/YJ19QC9F.]X^=CbopjTUV+P\\ID1VHM^%
%Ic1B^ds>/9B(>p*S^F1q-`#+WW2.+0g6oLEqe(L5`G==O5rW#"0#a(#"l3G1r@L=EOP=?dBsCeM"Wir^=EODFeN<s_4TMk#.a.E#
%R]Cr0qen.BoURAD40828hZHJ$MmBA:3X[_=:;;.Dfe5;-(EcTd3`R$W\1]Ytg[0$p?Fpc,=]R\"[H_PsDng<QjQj4M9NDW/OGFG1
%(SEZqI#,V;&`S#ua6-KX)$^'!%i9]nT0I^1I$a0kNdF"U5o3S>Me;;$-N/Wk@dt\I6b-RmI0S!5(k5^Da0eCK*e]f;bQ7^<c5uK<
%>o?:qi1I*s\E-m3,O9ZY_eo2,0]+Zlpu&cMj2uQ6EnGuC^OG*Jcf*>3./OZ+OkJ'.r+ooD^VcC.\/:m&.ZEJn$ofEJ7U,L-$D1Sc
%IWB9Qo>u,KpgE&&n-bj/pqefEZOO\=?e>,NLq;C2Ckh_qVSsSN@!doJH\f7O\.3sqVTWhP!TVCII/75Tr_LJ(Aed9kS($oOEEK@K
%]j;hC4$:-kZlsQP'*P_Q+KbmdFIDp-,-5>X@1gD$rtA=o[aFQY*EIn,IIWM:W9Q(!/l!rr[K"ob#jC%YclL4LYoX[i+2aVamsFhX
%nJE%Ar8KCPd6"/hbuWe0XkSc9]YD;#8Nm\^s/)<:SUeF:rm<]@eIg=2ds$V!dSW.u4:A8`+-4AKjW76EiH.d/i"Epl@i>RdB^3[#
%Y=J'J:c[=cs",ohWL$IC^r#?D>1CFRie(k;oT+$j].m?QK$*l-=QM4V9fN(7b`h=n7]GdqT@Z>6+R*mm962VD7\j*mR0mJ'?.4IQ
%oiC0((i'B)86"-3aV=cF&D*r($`E7O\lM!f&VH%[82IjkT6q=[Q%$3oCA^E'0GR^H9_>IeOWI/sHQu;cV(B47/Yd'<HRK/goUPbr
%XIJ8?2gkVln_C:Dgcb[YqR?35==2jMX`Ad,\8<(N[A0C"^BW^t:NOo#U;sekO-u77ZZPYXd3,f_\gEKmGg+/sc\^MV"J=4$P;Uq?
%8H\`B,q+>;agYI*iH*T8Jb$/aSG*LS[1oSIBJ@Ot;klR=?kgX)oYT4%-kNVd9uT(16*FMsc0?Yb`rF)3\Q>'aO]4H@eQs--M%(5.
%(3Iiij8+f!g3V\%-T(8\l"Am.HkS!Fs0Og'SKPicC71T3cSlh]a(h/6pqR`kQS2_.gm?g@*P+9*mEnT$a?Ig:h]H_XF,DP5XFYrU
%)3golH4X%q<P?f$A93ZUP1I0L5?%"Bc<B=)2,ce+)4o61^pSL%::]%pQTKFZ2KR9F<AWIbs"r+Tj9!nKQeOe2^88b9.M+Dq[Uc;A
%Jn*Q44aLWiUQ]Y5j_.E/@N8Ag$h`ijK[be#*7H^]b0#dS?#KX=mN+l?A.]h"b8b\WDUA2(aIEB_oeOL$X]I]eeSDi?M)@TL6gl.r
%nbmX."OulD9pc9>e&uE"QB4OSi;5h7136F_p4?',Il(Z'US-AApU/,$2)sgogATm<-7g?9Ec?Bek!d%4&S)AUm='E3&i=S1,oG0U
%/ZVhn=Ti89S7=TpGjTOZ3lmMEEqa=QXB_rO#AN%3[sHHUb3`e]rE_"mEX8]J>"XT]C4L`C(BB'jj=@jVp/SG!\S;-S0063HI9Rl"
%;fA4llUO7Q?geJm!a=/&XgYsDj'Nk$<i:G<'Q3I.o/N[5/,*G3p0*`%*>t\H'o$Y8@;VBeTX.jYe^_E!6),()<Z$/A3"LX:[iJF%
%iR/2AP>`B?nZQ7EOKYXB1+cO.-aT!s%lqD[m+!jFfB)F^MM>.DjoSHsA\,QMlRGG0]*IY"M0.lk=]Y9Y?KH?'rH_a(rYrWRAcTOc
%i+$"hEiif_=8am,n]Y>/7o58dTiMdj4U*eZ(J7l]iR=DHF\89U?*:]*j*nTL,,(KOHW^H:4np8c[.+,?fpe"DLDIbl+*;?R!t8A1
%)r_2!HCM@+?nKpL37:jm[5LQPFP6QqK)#I=(7Ep-A>RhU#1Xl%SQU<mlG^M>gXdL*4=?usDIM1\(t(C4aL+S7>l3)5b:5dg)rcQ@
%!:"='0&^'<f2WcDb@p*V4Mo\m)^?JLJ3Q*NTLEMlklrl>>5,&J5(d"O)UgJJhD!u_'U?%.i;r99f%Fs4]Tpk[rA[-)lK52!CQss4
%7dNNhrUr\?.XQo_h`=!J$?JONkp,LQb+5SNUAck3`522[!A%thBkf[F5CP@*7Z]Wu:SraT)dC^b`t!K*)<0%R$8J<No3q6OPRWFN
%g0QpY5i#a0>8='-1q=b;%#9bkAN``o^8>e[g&U)0Dl+UF]/g_-n>f&:LJ9l:-<]fKl$uC3?aWu12JCT-B,^(#%NNf(=asu,Qp5+@
%Va7Fg"4h.o%\$;+R_;``eMp"bN])RV7k<lF\9AP[&D>>DOc>YYhV6'M+tM)kD>jG#N2T",O[g;eQ]$_N1t&g%YUba-3CKj*Z1QrW
%N35%0p]=PjVT'MZDQmH!O/NuM2.ImQXe"$gXZgD8%BXk%r<2.HQFfK)NSP;g;Ro`N[Q55XbNlC7GI!3qatU1pV:C6YV2*4_FZ<dZ
%E)VNtUS;o@mLH?o"0@%p<$!F1'e\bcM&@P=;-&bil!^=GYBG^5Bm/*9'NN]53bFGOHBHjI,%G2WC*um/[>3@--riXcI5d),;A7Qh
%lbmHq$`lQhd2YnPXF"(S/Ku#6Z-H0!.poc[TGGnY7jmNP=)*g$)InJ0'q<$.3D@RV@Q3M&WdrfW6?C*/LZm35Q1JT@g[1VUY<rid
%<9rqsGq2d'LCHi)dhZ-p,t&RH.B5mb8rCc$\#PgEdi#b&`i;NR8PqK3P2V96q+o;YSSQmj/#%:hbBcFJ%'PS(FU^1VZ(6)\FKX!o
%<M_7U8"pGb$JL@5p,?G.`S)HuHaR2YHM'r?Ou+G$58lQ3/k34-Wt[D<:9Rt_M^4NQ2V-(=:b[s4GjTAOom4#lj=(tTNeE@p1p:2L
%U/JU0;$(.lL@N;A?/dI:-KqjY!2a*^>Ac?'f++jD<Ru)hG8Vmo___V^ZR\c@5LCYc3H40l5eS\#\U0kadY:S4r4(%RK+YKEec%E`
%7'HQ$jVg7S5I</.SqKL5h<T<K\r-+?@eXO`T@kf643Vo=<??4g,Z&B<=W'&L8o+>Ea".h0nMlHmeYl!eB0-dkd$CPV]8!2)e)sT:
%*t2nC\HTL&dGFp.HG%>X(%X^$<C*ZO[s$.=-TuJ&J.ud+[Q=GH*0iml[9MIU"tf6\aJlb^Da=$ufo_?jYkD-p57BU95p`Ca.2Oi$
%RG;[l#B/U0ol@AgS_-;PZ?WE5FPPt=U(o]>PFh)B?S#,<4MH)RU03rADX8b&WCAif8:T]Wk)]GM+&m%SL=W!BH)ftn6NYN3MV.":
%SXPIX(XnFoR]XZ[Q`2jaObZW(5e=Ca.tSK'osH`qX-b!n<K,m^*:qU=7oaYr(0=@[#Yk!>ds,aephfY>DG/=<;9Z?aV_ju-$n$.u
%o7K>q.SJ]=9p`uE_hlP@-S3ZI&fQBtqAaoG"I]`Bno=Jd@)$(;eR3($!T.QMZpBMgc-TErPd6YaZ&67)f94aV%LXT4V-<8X^c0R2
%cWb%M"7_Z%!3U6ZS\TP/m=9(+?W3!/h!t++Y%JQ&$3k&!\(9#\#9T9kh`cM!;1?"FgjF(FRc!Ds1bRB5RWk?im]7s'gocpKh>>L`
%B1;"?qUXu'-i;KDot=-3pU<3^MH_S$I;a[>eigq7(;:M9<fHo[)dfn3[Ph4@h6$)Q^'<D0D=$*CW*7Moq28mhp9ll]i-;m-pdq<D
%bs&d2oX.bK%ir68d_`Tm@Ad3%p,R&>=C'$+>'jPBNS`df'B`]:<3Yf*c$ucYHjeaEcAh""6_W=[rH%_XX,iln-em<5UO1PWXaf3]
%]IJ?d>46&BbCu48IVEf"H4JaB]h2X-&,M"OcYqWeIB3?brB,S_gV.boYS]gC4t'C_hY4.sV[qYl5VVEip6U[j/bntrHXXCpHRHSn
%ICl+5?G4r)K6UJ#p7WH*gZ!7M=Ku3bDI6SF)k4AAo>,JHjiZ3:XmLnI9A;c4d??N8mp0g1.ci2Y<*LuHmp1gRRB]e9414rmf5"`b
%=7c*=V[lijbFeXA^#K@T&V6d\NTZWTFQ72Mq7Mu.<ZX/b+7F-L\W'CGCTb;#4Z@GQat?o4>%]#"9&Y'i%8b>u(q=KYUUjdd?7Wo=
%Zi.q&X"-KMmN+7h%e'--[^LB=n%C<Upbpu-.dVV+mQGR!>@3[Thc)hCo<We9$1=#>!hf2(H#sRpjeMFuH.>;\4iq%_3NJ</hc0=Y
%pA*Qo@BI3<TQFiB6O15Cn;Aq&KrRBs`nB0RMuHh-;VIA-2W#9WM#,jV`NK=]J'W=iKARQi:S&8%Gi@o+@gVAdj3<SK\!LH82T$+/
%]S!l!\q+&\kMZt97mg[BO,pMG?r<>?-XShZEYj>q;p5!pI&l='$K%-WkA)`b(X(oqp[c\`lW9S%$E$[?-^U*)mdP[:5Bjt=A:^9J
%q>EHi<;fX@p[r5bUlo-B(q4t)MP,7fD!.4T[.g]>q/NZ3,R(^>V<'*!2Vs<o6HIMJnWYW?a]n5*QaSrGbLb>ArnF>-9:fGT3&#uG
%<gN>/s2uNBj/D:>=/6ImMkH`4NTJ4Z`DWDTo#>`t*WF_HC')`qkH))!ERMIg4*f]K-`K*[Ri:PAm(_lA_6O`=C#?8)g`WTm7t+9<
%I*c3R^3#B!'[M`_7tmVb=YYNG`uEu."@YXtm-Wk/T/5K;c.0!D>d?#gL#$Zb=\8]LX5<C@`f&WgQi);Hqu"!;YSUs&dWW%gSg<Q^
%H.^6jS]>Xni(e4ZnV@%KPC&>q"p*Pq3.ce"cIG5]ID+?&@:L5=lYg"LnIF-N^o*IS:AaIImk8T]0*c0rZ.j,dDqDQXLIC=ja$[R_
%DtdCff1*"DTE/j)BF1)CJ,/X+&'n7Z(S<siRIKU\hP6XuBsj'brqa:3<dVJ]&cg3!5'(`lqlPdY2^c6!;UKja%_C=u2N"+nMR89l
%Xd?]m^fc-l'ArPBQ)j?a<"H?4l=D-9++/IG#I<pj_q\,&rCF-dWr*8niBtdO\pTae]m,%^KPiW'Xt#rZS[]1?[eIM.Yh0`^kX"/i
%p[Cgl9/nDd:7(BR&gAHKRfP&lqeY1p`<'0#.^nq^boad1]$i.3S5^O3+^_p:-3!?3nrq+S8`/Zj=14RP[G%Z2,'O9mS.o;BGd^f0
%/D<bh/R`_jW%%#(lu+K:ld(PAcI^*MTl)u6hJHG#DpHqh_e8G!n=S=JeW6>i&+86!iMWSCE)q;Mg8fuVI-LX>!e!`A36dAP,No>i
%\*4E:A<`gSm-IA*0;.Dbr>ipgp*'@UI/IUZb#V0\nK'p5IpN/?0AC;UHS5WK?K^"ai\ktnN_j'FTGna&rWs?Y&BO@)k_99iL3:0'
%jH]LLAas.9iBEqF&_[nML7jR+L[a%mWWM!aKr6?MT.2l=4+[T#RhP/N(_M$^h=/mS%neV?GG9TR0Sbq&Y_Rje8g,@eW!_rOp`2XF
%g=Y;d<XqI=4]-VB?4')nLE(FRooEApUE4*=e08_;$/MBsILZVQ/4Qh`:SR*K*q17dHPfa[/22V38E=`epZPht9/nU,)50e*TPWj]
%SGS>O)uN'r'QP>t;Blu#\&*#NEuH@@TR)J!+$U28Ce)!%2`TY]WZ(OFCG&^>_Ia(OMr@02qBT6J$6.tDD)pR6LhR/up-rgC=s+EF
%,n#ss7".`fLFat&*12/6?f[S"ET8VR&JRS?=s?=f>WA/TU[UK7$o^OcfF#UC;oo)M#fF/%>\m2FP0>=g38j/((6ZNofL)AV;-;&e
%hA1O[:Hu2oKMBrj`'GP:4JC_aguoLt)NJ9I_3REb#pQ!0HnIB<jIl#n\/=C'>ooXQ;TnYmBe14NoF\bBm_Gis5EupbHJpo'ZKJI(
%Ho#JD`bq09CZ^Z&04'/9r1Z?YUZG8-]P%?\G."Z\Es`mq005O'eUP!2=ZYr@4PJLC%dtqbhn4<5[bB:/Oii<2LShZl)KpF,11Put
%"\QY;AkOm$m&LqJk96e&9-8plJ'\W6bMDrt=3?q4pRdZ*&k?Z($lZ>Bgi/1P/*Bsl`RF:AhG*u+a;m.!?g!Gr]8bh@hV)H:gH'FT
%g@?'6apL15M@;u%_sYR/n%")<r*cN,2Ia#oWu72A33J]:jDIq'+-B"]l1n38H0<T,@5)`qZd67o(N3Z/OCNXNE4+.X#WbjPh/i.[
%=a\AHQ;2UjV1Y42W55C>F:ao,^A]+b.%J';*j=*(56@/e^MaM7^uT](%N',[5fN*!<5tD:<.US/$bXY'PR?=)So3/o3GTSsNJ.be
%`#g_,acip<4PccI$O=0[.<8>L5-BB16Miif&9O,e'`'2#&C!p1;b5S-cD/aInYC-/](AtonB-.L(%fV#LYJ0=n$gn`:EH^_q#WUN
%;&GEFAisA8!m$ZOq`REZ_e1e0d&VF&SK<-0nKig&,7u76FHa(`*]t#S+"`2aBD"3G[1YDuZmk[OJf!0l;K]PBp%4)JfQlqWkHC2/
%*+^&GZ1\F]^:LZCBp_nsHN!]?E;k0OUc.QDeY60'A6n55kR.^jAb3_Q[D:ml>[hU8bNDCi9#YEB.pqcb*jNNCb5J`/Sm0lpSptmm
%"k^J+]Tdl%rqhE)X-^kF8qj+AqBFqpecQ!lqPo$gB^EDlCIbi3TY#l,\@T.tq<?3$nroWn;oN+9ZS70f(\t-1A["N3c_JIkN_Z<%
%q()I>%Xk#f3cndIld\J\^oc`Fdeq!r:X)VFQ=eWSn(2`b<cC.tCAI+`norX%M7^1cir*/eGVAO(n\X*<GJ$lQ#'9CG_m`t0nY:AS
%]\)BJ1>]S:iot$`:G_CQ!r32Z^kQ'#39_2Sg[&`lj7U<kk2YKFrU.[Ns6s7\jE:8]D?QHJot"#sZt7+1SumaQHI2KIf1W7;;0&(Y
%otk:AK0k2Rh+BT#?#e(Dk"b>1iQMXhULd-9B';k<#(nH%iaZ]eYeEsafH9nZPP:[k,sbktS3UGZoM9.>pU$3Uh`JMN,^nN&A<3ak
%>O*rW?%mXVM0$/Ugm65[@):CepK"E#p24A5On9gZl<1_-^3iALG3&^J$BM#CIJ_[:c(F/<#>a]R0(RH5+8!eg5jP1_EVY`<Y5'.a
%mR(l4mbdp0Tt>[MmJ#>Sq6RDcXn?n7"V$pQ&qn`M5GKfXF61+,N.>]5\ZBEp(+XR3!d"-FUCadCp.3#=md8E5_.$_qEO('Q)M7j`
%^39XJhp_JA;ks0!E.1\E0<V\Uq`0!RpT[g\X=k#r;:<"$Z#Blpe\CEnf3Z25Sa:4P@e;+[:La*gMd)`P^RmSM>5Ps=qr40a`4p_r
%X#sj4HFsGUZhF`IQ;=\WV]1t<K>$h'h]"8o(O(sShk*r$kW><?Ia1#j?Y%ir2_20BB%f>Ws*_;^f^b@5^0kT#]0$-+m^G18Q`Kq.
%_`4R)H$T)!H*VngIVY_GZQsRs.b/UR=05!E=';_-cb9oh&aSSsC;KC(4=k=Sc;j;.:hKO7GL&)?b4jW@qSB5Dj<,mf'"gVf/WVFN
%5/Q;.m,sC([_<8+M!3u-GJ!Qn^Upm[=suI.STd0M0=Th$%5gYt(7V_Sa22`UkV-qgjh8V!J%9b.FqWh8C%;#J4oa35;GV&JTtC2A
%(>/#.Zgm%(m_!LYn$D,Y\$Oh^-e07aTUc<>AA!tm9D95tOi]P?B58UCn\Z+s0^n)=rSu>j]a&4B"-Uj"MI4*j.ca,p&q6`[4Nfrm
%>i/mH5NY^9*o)VBbL>8Ym[j'U8`&)5_B["]:%cs@7X90\[%7(&lJpI`]2E)!`"'JP@_D\?Y'?+NrM'bXqO2=&RX&CF'iNSU(2aRm
%[&''hRk#k[g@j/%1[=5Tf&i1igO-\K4;\,EaBq*s4jR@$n%O8EplkAi(p4L@(qNWFMZI#*I`g9GG$fi<;JbS*d+N0mrqIK3[0s3t
%c$Nh^I./?\lcd!4'">9FpP6H;Mta<Q&c(sTQdnF1iNL2>[Ko5"i9DML`^1r[^0]OIOq!I]K^;ung%n/nc$s%QS3<l(pj6@0S#'B'
%H'c1T"+3K!PNsm2f00pU]\$I&$64P<]NQejo>T.(mc^gBd^P.=&Y,p_O%[#2H"WgfdqMdl^6"FGotr'ud,uVfXP(IKh7MDDb@ksn
%J,$abAb8`+igXSW4-*DZfX\2jL!O02R9sAW54p,EL2<JPMbCneF\gdGl9K6&@>M_S-nXjFErP0uQhO++_u8WD6JDQ%o/=,21@lTh
%BMhCP82,.]HI:,Nc98nNSV,g4>FV\HV'4Z&Pm9D7oDSkmMIpn*h7Lg4MttuD`U;Dl'IYMUMC\0O\gnk9*afS`^)tbInQqe?SY$IP
%KV3Sb]S_I:Md5T=i";AX+[a:OmD+muB!KCd5<MF18-^%m?bB3!hYDhZa26,7&,>:eYLW+/Ps,9XCu$HR7390(>Pj-@_<%Q6]MG&_
%<pA#[M?Bl@[/cN4<h57I2Zgbb7NO'@cX4_P_O.sp.5,P>g`9kh-hm.Sot7[,@`R)uRJ?I*VgJ2-SWqm8p:7CV\T@Khhmi!#dhJa_
%B5P0nU]#qYH#%;`h2PJ@LUlIECS'$@lqUuu;<u(GQ>`En=LkFnV6Bb(rb/Fl@"%W[Hb[.9DtohQ7Dn_$CR*m^le1Pg]l;dq<DO[K
%rELn'h7]:r/3auWB86i9e!KN2\nbJO_>pNJojKccFE)pn5D?Xqp?4SOjL['&8c#R\n6P9E^E)C;INFF[0ZZ-#SZ4L^4V4OE@QjbY
%gYl1A\,$I'1)?H7/sc![G?:;gjm(q3BhZM&KAAVhl_/XlhD"%lC:Kg]<TLlZgoErC'pR)"Pm5]koCIFWf_r=d3G`8Wg/9q6J,/3-
%?i'VQ2iuM40N?t_c:s@PI+/S9TbT5:Z!^gbK^IdT@c@5Nqju8`d<f+ZX_67mDJENZ/mq/[O50C]bK"kC[6-E-k#0Y2-,D(oXG7<j
%5(!/.%?I$ge*URS"R(0Dj`aqbV0@+k0:m[m?3iI(gl5%^<t"`go/9.&:M\8Pfti<JD1r&aeHZ3CfsB+@n+1:.lX=`F5@]XO1hAK`
%_J[&pHKd_N.m#g7]TZ.1Z]j2!_M.r](.kf&JdnXuU$*+e928-BAqWo[[kBs`IP9dm\(^0Fh0pmB8p$TlbWdRV[`_a+8%#a^]4i%5
%ieR-],-l`>Bi;'C=Sp,bgoed[D`)kX*@Ep8Lco_f5I`(JT<4@cr>_B:^&g1QiG,(9bjE<.HErdMg=TYq3_Kl&q)U/ohAu>dW_n"5
%%.:1.H$cNt<iiG?/i:s)^HK+TaXkR.3d9*-qs$<>^2t+[#5N(sdeSZfHc;8rq)crn2klLAU).XeT5)aDdIY6.]ANs\h32J5mn_\F
%8RR:rBE[R2a9_/gd^f,i,l29?T$quXlm_-d:I/C'pn$+)rE"n?jJkr;ojMtPQL*q&dK3VUlh]/Z9&]T:F!FhuNOu+[k50Fa2Mol!
%T"@/nGe`n/_aUnNhYOlYNi&M1D^kMR*kIS3G5BncQe[K094!P\0Z`3]Z-pDa`B/<VT(qHjo8V2_b+&'+LEW=S@On^ElVP<5?X/m<
%ifQEI1DE=5fu^Y9GLnO)je2+RpAUXA?_JlMIpRT1+5n:t[U4Sp]O,upZVYt&qb:`_JHb`?I^\`nq4=^4?16T&<mFaGB[o51AW=;4
%E;!()Mqa1Na?R:@)dcYC\W^n)'J.]_=Q+%r(sA%WjapAe5QSr2b\_05I"%W1S%C&LnG2'"cQ1WHeeBs&)i%EqLp]rB32WDc9+Q4>
%g/6p2p<Ea^@lYOlH0rI/=ag=$([nHff.NQCnpUPtD$S)X$noK\fllc.a+qXq8!WNHj8NeW[X@ttp*0e86K9[8"0^$od+u:Kbl<#&
%Ke19>rsG"J7R[:TNN::2k#K+Lb>qgFAoAeGHFJ0b_.:?-7'rO3AKVbu?#GBUR)Y,=K%9DZYmcd(miOXNI]#nkPF:6Q]h^S#>+LV^
%2>V7I?q(2;(.tJK7nrC)9BW>C@JM,"NSWPbhN!E.4h:8=O/cA5GC+7\ZT#;McP3dJJr>&i=-\(C8(r*c7<)%lDUo^D0g/'<a4@EO
%g@6ZqU7rCYc_ZQ4K6([F=c:'5@fES8c+^;HA!^jCKi1CUVZ,CbU0UDu?bk!JBT.(=2^8Q>6p)4@%qZtLh2$il:lC;NKM?kH8_VQL
%$d6ruaa;8(`VAu*AE;!I8OXOP/dL"X-Gs;U39i\_Xf*Y)@B%E'K!Gf-"%6G*2Un\1D\]2j4u^BSfb*^_'<EN[h;b@ZVT'jHS7#Q6
%K9]+E%5#(Z%P[7?YRoj;BLK<RjRfH/0Z(kpPF?5_NgY`2+qNXePG"d&"D)8AJ/Z&E66M#>=&`ke#TkA7n@t"CLVX;Iq+72WRcNeE
%?D!UH:#4d/:KsaU6mE+u&($J!1cn$/ib!gp!Y"?dVq)oP/Sg_Ufp9*[F.I*MBuZrFIU%m@23d--))fpgF\*Jci0-p<EALb-(L@%\
%0a<QW+k(4356`a[:i<b[Rb(DR<19<8'X"o+q</1NFT`B2YV6eiZZdhcT&JOMfW*Q?.uD14L9'2)>Kp41ZI<OkL";kjOfp`a9k`a]
%nXHB=)83;t>Cr:p_/*VsY1r'Ha>m9/DhN(k"J\9MFNQgCJ-<otN*4&u?^msM>t_E^r`M2DQ!2Gh&RJg;JKYLR,4:@mEsuuHan@RX
%Nk)kb@8sL*D:d6q\8?b0f-)r/?Sn!:h"/9Hk-gsT%q;<IL/E`_7h6CZjl@i+fKjc\g$2h=O\=XADF\CCA=BUc)ii86Fksp#Mg;d7
%JQ2_V``Da)npH*apfeGiPZZ4$aFI^jZAZh5EbDLiF!hA'J6\r"3\0sub!1JSp0"@S;4AJ`'sA^!Hr8a6^kD&FG"=DLgT>(QDQE2+
%@?PBg[IB(Ic)+!4n#p(XEHIDFDEJG:P8nG@Hl5+6^\C]JBOZ\kmDROJh)Mc38un25.Bh]F8pQ+?b))ENqq=V.NkRMLEfJ;167*j.
%DT5VDRWL\C+,LCC5>iES"!U(lKBr".jV1YpUAkZjT[rDi\=@%R<p#b`)hVnhgE<(S-1+_gSd_>.0#;Q]34\B7cC3iurOVnP$DZ5/
%J@P)::N^ZZ1IA1-'.qsVj>DMr@f:+uDO0@+hP""dF7oBLJ5*C`BTc[Hm8^NE\#1#2od]T#rN<ha7GEK?@u\SXg$iA#cS4cukfL&f
%NMUu7^]1`5[?iXq:%DZ-aG.AHn9VR*=jO%X_GOp86KQg-i^OpK.6_iC0>Y@!'*jV7LMtJ7IMr\<$(r""%BN*mp;HiBHfE6<KDI3M
%(;6o;^VkR;?T0]R6T&qYdK<m_1a?ciju@6je]?GQT7kCl/@0aHhb`o<r1A;1c")!`WWL+shgY_i2%+njY?*:[O:6b4M='YgS\]rr
%Eu[Y55E_&e]Tb7-+X<X;[U061r/9.kic]3@jZPR`DfluX43`\?:8LnM)"i.-C"2n8FGYeJ#&2.s:;_n:"OR?(SBTtjk1s7XNY)Y$
%(-ZTun]\"Io.9KM$g1_E[J[,bH7T01=k5Dl(Q4fbD)2B,2mg=L!8=`aNmCD$eFkV^\#07a8lUSm;CdE<(j@bS/DGjrnQjh?q?pJ@
%@oB-a4qc9T'ItW#eQgOo$`$R$KDQ.+n<iZT*=b4VM4"l[Gd+-'0C>iN=^9?Ep%]7\F6"18L,0JG)p*h_qS+1A;qA>rS)KQmQH^;\
%V._p6\+&'A%Xd6n_i*=/Y(^4c^dj]I+7R&1ktE>&o//=`XH+Q6Q'kCun8)WN`^+uS#(o7["YcO9WFMp"oiu*?<dgS4%-Y&^XF4AL
%*t1R+LCnSN8D=8rUMcH_osm_,/.2mE&k'X[RT,E;=iTCcqN0i:0;dS6I*"YeAQCrAb:VVIDCc8L//PSM=i55"2/quO*b"(a6_Kf[
%+8',XrGWT6pO-`Ag0'>RL\gPCXQsq0M8#CcJB\Cpk@K(rJBg:kBF=^gLGb.(d3f0"$Zf`J!%D%$omE2Ja-Eu]"SY#JNBKMlfL/:@
%TUAGoPAEElDP2u)0dI;9',[i!qf,?VM>%)b'L$lPkfC"l?^)l;N0k]S>C?<H9Wl89\&#/u*_Iel!ZHeB#R?NT)iS8UXCTL0'm%:o
%LlP_N'grcB_3n()!;`##@bb][^fi@2YROMW:eEPb533nR4J2g4+NQ.e<2^1,-`68u+]&OQJ5a:i[UmA31)G+)a.pL^CXEO\[;45-
%!5X1#//AHVV%u[4k&B7*8Rrs-@5n=mjkA\1(]Y[%)mD#E)e[<Dflphg"PJHr1-FPn__<*"<9E/B_AMp]I(9_#!$l*>e1Q1N+pV`*
%&gG3q![%RH@*`ot#`^_(@RV(l.5BgMo+AXp^o04M[R%,7roe5n05Hq=a/TnU'b$=?08FJ_guEk*4d\#fMBEdFApkKkR[X<0Es0TN
%/6O;P.h7P$DV1\q5l^tj#CPZs,Qu9#Xs!cU'q.MOCU3nXWPBK0C\o4V='^n>^+3_CYd&&t6DQ;&:*G#IXogOEOK!sKI#6u1U]N)?
%a7O5R/3ue"H$5<u?",`pkn5(?3O$=jTth[9E`Jk4Ll"mL'Zm>gl/UJ!`eU,/;,REc6ZlP_o,U"u.LfP!^^n6[/f3"'qAtR@&\!T+
%'N7#hM>Uj,7sKW2P5lk0_<S@4'EoK+-l3XC5p"&3bk>H-!ML$(h5lGmeqX;D1&V=?CSm$23hRu!L(p@9X/8Bra+;cW;cbYW*qh'q
%$he9h0aRit-O.W88HQec*SVdk`(elY*<bW<YXL;K$%a'r+D4#!)(qh$8[]_GRt@$3Kt%6$B,_?.%V:BQ3uRMu_mSn<R%OI9_#UFl
%M61@qK],VL*SdWAaZg8S-?TKM#8TPp)RGNj$)W^OBqsc\0ICa2!Z4*qa@`=@fKq">L*_o_L>X]0#WIiA%ac?-!Jc^["],AJ@#4n0
%+H2tcK2[BHRHrn-E3AF4PSD;bLegi^MS3R,KFoa9>RIJFmF=I8>LLhb;@rH9oY=KO`Xe_='h,5)5D_rL!b'#HiSnerRT%kI%FYql
%%@n6<G?pgD.OZf48MPih#fGg4%&0iJ%Ct#7-8u*/d%&QUd=?t2*h/Y'=kXo/&:dr]O?c/U%%f&C12_rG=F;)1(iQ(\m\B<)j>TG#
%c,=JDilICNQaIilAGQi;,NrdO./^X.A.1Abd6T[0mYZFJj$$WgdWuUo_ef1FP^l^6SQAM5:l%J?c4Bt#ciJ.Efrd!H!R-/R4B,Dk
%i]N<k[d-N$A"l!%7&f:+rH/C!&PSdh;F:^2Rl3Hl29Zi[5\^>+-0&3qAFX)-*l`@p<Z3hck[!/O#mtO:>M&E)0]FBi_+7E5Rl,E.
%%M,(G)021##nu!U*TK1bW!0Ql9eQ7%1]Z7R!N:W#8R:t,qj&T6!+m-N1`_*#Jp]I*Q.R'u/(56o"*G&b*..6QeTHTt)C8dH!#Wum
%-Kt8uFO8kQ\timN;ASkW=()i_V^'_B$RX+E%>i"6=p"Aj&;JZ[Zr'bCE2<9KK-R1`8S3L(j9LG&^<j(q/'B.(_XLC:'3un-N*p^g
%DkIAV9tk%;-E,:OcqSKp$h6[r,VH/NY_r[S-ej[n&gjbtPDN9@/'q/j]An6I2;4@XDVRYOeRF.+Q!$9RJEU_B8f]BZL2R:J/_*^E
%""Lpk>cOIT+G"5_Z5`lX3#n=f<Df5Y:/<bi_.f\l)RLi.iVgPPJOTh\,KSBM^:$18J)J%:>n)?=8p%tJ_M"$XW1t$*+\-IDg.Rlb
%Bup5fk23##$EK$mnG5reU8unn^;i%PKl2urCr!4Xs*rO"5'N)rL(.#uh%m5t*;TYueg2t%$joYCk'&rci(=56bb#+K,/%2AL9Nd&
%bGSX]c2-X1&mbSmHYkKK2Xh'"j?;E,7N/Oc?6S4E_IW7$U$?7tAFb7c@#8UkKlMu^\OW=?8jO7LJd,rOU2>d\%0P,Z]cjK]j@?Bg
%m1Qc=<%@f.;Lt+kEcMZCk_0]L$kSH9;.ec"123i,jhf+O!u(bF'hab82<"TZ5T=eJ*8;6(%;6o/?YI:&;*hu8qK@6P*[V/bD#Wme
%#:SO:K*'ViWQ5/cKU+Me.2UK=iY!s'\M*oRNpYJ^3]8A:@CV"oS8'B9C*Z0M*jCWWm0X@>[d\qONSD'Y5qYMlg;RG,H#aT$c2W3T
%q9ZH8jK[)?@+''_:A7?Fic9*G=3N]2&[>5!0sEd,AiSIMUCSt]7f!Wc5&t>Qq8?1l'F+0[oH\C9Xr?P"Zr+@%%;S0/ScV>!IA8JM
%2m`j!@&>S84GJ`a/*2Cr1[34>/[5kNc/\B9[iP$t!`tcKGR>^`K3h=4$BWh4_R:F:AWPe+<B/A'h^8p?@@L$W@/l"-A#AfU=gUDG
%g?mj:LSH_X&uZ<8YV01O-UmeqCL&'V^YRlN$:nZ1boiE[;qR$MWZ"2ZK;.I3_Mn(,_ih'GT_/GDj5Dm?3Pn7@D^.@oZ,F"p[R!HZ
%-3N#:-O_T]pB>"4!#g7g+@E`j9i$:0f#6dC<T.9uS3dr!+q['F`RItY_uP=;T162p3Ouae?X]P1E^3:ZkcH.\!U=/S>YmEi:Io?0
%i&K!QOS66gi`TlT9aQ\-$W"oqQkn*'Z;<uq"aIE%8F#0N",3.2:]eE88As_RJG*h6`4YR>#4u=s85'\.YbVKin5>J3VBAa1I>j(D
%BXnH[Sor.B5#7]25RW2Pd&;81;ih'_Z+XSJ-UAg+Qs;Cg351bm>L@F=8OimVGgd$Jfs6u%MHjBR5"Q#@KfG["#Y8WL9DUHoYaB*5
%i-E53E(W4%G/[%>/(\qW^dM-lMiM"\UNZ0r8V?(W1V);h?1\+AbIcsI`-DOhde1Q@Q>E_m@fXNRUq05i;7Hq*GC]BX4MX>AJ5@&8
%nVaV'WD=k1:I#H-6[@E#6J8Z_W@dNgba0q:b8#@>7RL:\3#_oncBVrCX``orGbemX-oOmgW`Zt_=to_TLjL3aDl?b7^lQ4MjgI1r
%H33u2YFPH6B'd$:ISJIWCq78n:R7l/cbs-`V^P.n)JH<mo+jeYa^[1JKd;`Hdu"1*"%u/P=*-@d#iIn8H$dH_:P='7:X)+fa-."R
%F%BC-A1UgKY'=o&?m0@R*h&IC_cl@a#,k7<mR/CmkqG[Ma&1W%=^nEucm\GS9\afEI@=t8!Vq]<)idmBJ5ar+HPS(.$sbM;Zn+LC
%"8MpRJb@tN2.`G/gr?Q-njid$a)JqK2;`Sf</pFL<^M!MoR4R(jef#55L=il3Y4dfLtf%_Ske$@LT)'AU>jgto5HAG*'KQ0(gtr-
%]3;MR^4.kZ%f/M$q4=fuKP!t3=7iu46>[o@JYUQ6_\5&V=/ouIr<+MOqmHV".IIFQ<_P9fK:'$3$s/6]`.6O^nK'_X=\(?t'LaW5
%Pp-bA(fQ8r$uA6[\A4R(XHn3Hf8IuiK/leI"P9o,W=TNIS]l[!E@\gjL81[NFW;mMAK\I)dUM]N"L56@Z#M)Ea,%Wp!BgJ(ZWpiT
%2-_37iGpj$:p6V)5)(`#Sm$gM!%+Bq@[r9H-7XmI?c3Z:J6WEc_e)rjrjGDbO254=).F`r(^t+59GZ?$EM*Dk2Cp:n_U)T1_U'@/
%MkV-3]b!4uJ6;W]/JNbHqgY5STX4a&80@I.MIRj_G"@(.kjC@Z7YE0u#q(ab&URI`j(UVaD^AfU3WVK"d8tjI%kdeE2?n/oO4soa
%dH+!*0O-6?fB!'OU@#]k-Heh0-UUBTNf^^c*W\5M:5B:`_!VViAW#<3_Kkm=NA\"DW2)NG]UIjm-:7DkW0,*=BRBk:C^?Qt2h^N*
%r@-EI!i/+7&aCq2]rm0;5Q_&56#gXV:Tsnb=e)?)b'][O5EB`-P),tl5q)knZid,*+llh4)i]d^)Z>];H%mJ;(i2Qn.$C)7lA13_
%B>3`YZlCs-=R/NaGRTAj9$=Yk?^VV20/b6!<Ta?)eeq$l$r:rSP/%1EisM&i80uBEFs:YW,hSb=BH:uhXO3&[!_LQ)7-dEX;lK_Z
%<K#gLS9l`Y(cF?#Du`'64-\i7d&&H*G3)Uo!79ge!91jqNPm\CoE=Fm[S+Fr%"nC%V(IY='A=`:.8,@Q$"5SNTS[)f[)_qcH:Fh8
%QJCen<,"V7JB\;i$mrYt0hF>,m<=nKY!$l3b!K4N9GG?=W]%2.7knJakg&lMY0ga>WOu$8/!Ub)PEUTRHj1XSU=5LONAAn/&umDW
%rFoBJg_/l<d?#(6%:RUlQoYL.PA49u38k]j4?sh2_>%i^c*g=a(6?nc(DO<RW5O3TcU!Nt$A%dg7@JJm8WX./<GaI'^+&tH(s31`
%gnB9rb_%1$BlHqu&qX0&oqTAkA]fQ_#Z<%<""Tk7o@p)T.\W<j[46&$::4oC59aq+(o#B]--6eE-U9H>\NL=]Ip<ERPUKo_.#5*)
%8J/U6J9sE*dGe#kK56J+"Q`OXJ7@$Qd8^67=l;?nO%r4#%Ima3JmkV?b!ENY'8;H""e<aI%@89+'c@[e-aO&>NC02/FQWt@D@8h_
%FtK]#3uH`@M/[6'C@WY@d#IH;6029E^l0/a+<,/[iUt8I0NEl<Sk!2sTV!%B/5%Th?gabIk*)GU?<*`X6&]s['F(43$Oj8B^]9T!
%d`jm:@M0`k6u/>Q89i;hgPURPILY8CE*Vt,)lVbMnrWaIraMC\@7L-6XSE!TKD1LETg%B^/*&,)Q4jZF6R^,_dPNY:`:0/Jo*="8
%"9Ru,A^\-IqK@)eMRu2L^oK_Z.q.m=q.KRoGcD?o4rFDV&M8\BRW?MYr/?`C+KGYI+TIj&?>^/eZU0pjTQP'$`(4mYlhSp31"ZK&
%MXN$?"@<H[EWt5)<JO]J#uHDY?/(Y$EeAFUe%jq&(mo>E3N2PZKE0(C6(MQPR']==OpRJ=_aHU-SZdhgH*Fjg_[FT(HmBVn7lgM\
%m3b7C7uS49mc83tA0+sTI*acNq*6<<68Wa.,Z)/L+SRje:ldm3(U.bfpF!ZG^*=YtBRHT38p_Q7<8&;BIM-ArQu%L%mn1*e=p+7s
%*"J\8@Rq@Din:f.[.A,PSMC=7N(+<B$W]_#Mb52h3%R_0@5=,T=.\GL9GG(6I'*mW!<A>B+u%eWiIGtiBq""'D3)1/0-rXL\0"F$
%-9RTm$Fu%T"oo&CagXuijpQhQ3QZ;X0"l`)<(\!n1*kFYC?nXqR"S@t@2,<GbMenE<)man\Q@0Odc!M9Ko@3D-j8,J!\n-q@[k&`
%;<JRTc\6iPgOQ)0U(%Y+<?$@eY(.%W3=P-hJ1uiYbe]B_65$D(/%ca5MO6P3EADQrk1+Tbn;ci*O9Gh2`3t%9Ls9KB1Jlq*]F+MA
%,e2t2TpNW>aAIa5bf(ap&."J>7=eGkDf(l5]L$7's1'6c*gb&q2/GY*X6[s=6Jsu`;\p$/aT>&<"8\f@iYE)H?QNo!Y[g=>7jHEE
%`X#'Hl,^2DS#]YW"Fs)-gG[n/od/UX,>\9bT;b/b4O4Lc0XbW:;EBTe)[[a#P2O>u8@cd;'o19cXbif1XL::)!)Bg2:D+,iB;5?8
%KU(d`1/c^[_a>)4*X!_m5kL9Rb\b=?(6b[C!5p9r_G7)iIX&rF5.XBX;#/lR9b>XG4$t:>,sr3OT7e-o<?jQ`\+/t1%?HNDEHR"G
%I(Lb#1lU1`o`l/uWOTD_KG]Oso^/)VG;B[?+ACsi0'*QCA)H=L'?Y1<QPfrH003O#".04V0X-?W:s]U5W8g(S6>oHg$21qagq\*`
%]bu*]/eAfg:CIN/%[Ic9Fjcsm.5(2NrDk8I3i60H[OFOqeJu*-9WGqj&TtDXADG+piR9)(';KIsK`nJ27ps0GLdj^#@F1ZWH><Ea
%!6!Lt<h$Tk!.ZUV%'=Rjg(?#n`f\Xf6mG(=,_gd3"Ftuo7X.VfP<S=gN5HE6-LcmYL4\2d-K8n43giL\-!_H+-^]b!)KgGOVW#VS
%HE_-8)3i-h@N`=p+qL>oA4fWEP`YWLP-+b4d^U!c5q%Asbmee__XK+%6c(Zj@$DS.,N<a,/N(DT.-ecO;,=]VA^i^bI*':M_b2!k
%8TPg]'uWCGZM=Wj#%if5EoIrQ%KVNo'Xn'Z</Q&<Jo!E$S6HBI,PQpMf?&Z^MWb?Jh\+O=n@#gL,hq7u,hm9M8<*i8'6.Q8XoEh/
%p_M`a,j\?)'\A(&<!b^U9#\,IYU\qm17&@W=9P$=>&1Krj^SR5';>1Fe-^9s\7Cr:GeLslbLN?25R:R_80sa$J3'R=%Hla%Xf`Dk
%,2Wb:(G?Or8%(^_@iS>^FqbOKOT5sI[_UDUV"Qfj_-L:rYjdC]bZ)F/nKpL+99/4jC:5taOoQh;QajP?:rm$dQnNOQ(h')HCPsuT
%)DE"N5+RJhM1rT/0Ea_$9!F]iHPm.L=>C9l,OOaL*F3MZL[Z?5Os3a*)C@puT5"AC,fg,$ifGVXiG!tt@PCtYU_Z;eBoAoePSKEo
%M`HT^(SWh7?JiLO)iVY\1sI^jcSK5:'??B0&oo<>PU#o`_YoR457%LL(knh$C]Ge>7m-F@S$aB%V7`Hf&_rC<-p0pA9N>ZGX1a6C
%KbI9m]S..^aiOO55l+ST/$^_sYX&q7(nm++fE+0@,4lW=%R?D3QuXlebn?M6B:E.3>HqFgni<@a;4`b'PjNQC*ORk2`f_SI`/)?_
%K!\=IJ!MllC0cdt-Dp@QJW=Et$9E61Gi`lE^]_.TDg5^M-Tq.p'mI2*["Iqd[BQqJ8%pQRX5S'$/M4+nF.GYE>$Ua@gS`JAL'GL8
%!Y(N%As`[]d61,r4_+nZ1=:CL`'G88Q]!Q5<o(A"+mkT:KVcOf?#mq>U6oT9lN2q*3cQk$(^bILrat.b"t`ZofAV;=;3qamZtX%&
%#(134.T0ZIod#@20N3]t!HPn'mUT/f!%q+qW?^ZCl.Q7U)H&-FSIB?%R3J!^hCt$GDR)!e;QuU,BUh]8s$#tFYF*`^!=q$sK8#L$
%Da"JjiK[7P5D\"SAB^6qq#K[K'U.Luj'#t2]!CG0ib3IQB_rWt0HUuL4b>:s1W`PA`,t)E$l(m`lp\/q5+Z>b.#l(*PE88TpDCOJ
%HSF#h#Y$NsS/,%J9$[Xc[Un,IT%=F6dbF&__%"SP1&7c-2C*u.>dA#lb8[%e]T+H#GniCM2#d76_@8Wi7n4/_k[UoPL)@"C[mWeA
%3+B`Y8Z:se6?IR/33l49f4fkX*SnE)6&U@kCuCbfJS>Jq)F5=PPLB^Y/\XX=#quh8_7$l[o&k`i:-rfZP0X,4J;#R00Z<cBaT-Tn
%,LLgfDa9*OUuW01:+0U&jb0<X$\J70Q]=Mf$p@j`;P#2':M<=^M\+HnWSD-rD50Iho#id#m6_8@F)eP,p;HA$=p\eF,'L7cC""@n
%%ZlXuM&Or#jkUGPCHgJJ53=I3Vg'2f;n7Y8okeEb-C[fLB*;_0LSQ+<e4%u\.kf7))+[(#"i=qlS#\prZ,X@V`5Kh>&r;Afj20gX
%HDaG:?l6c\7P6U)&i&0EE*0F=oot"_?_`cV;u^o+l'X')ksUr4@YGjM=edfq'Np'4"jn'A6%YVsPH(EFf+((=nb$W,B^1gG-j6B5
%:lj6_/4;94Q1#!CJK#s.'_SCs.WfYr%P4[s%R(#\^p-4*[jcHr%/qsjO`j&A"D\W+45#AZ:LIL-4BKLtL*"UK.M3oqj\8HLbsQj,
%ej*pqZ:E;='cLa6B0o-Qk2q1'/F6.I<9UK9(mQT""tm\:d1^1Tkh2-n79ji(&/EkBBqBrmKp(a>kj\\="7qWMVPBCV1e\cuOeiam
%K<?a[8IAEr,5Mu?U,(/_2+T&DI]hP$/?.!-(H!gF9uBFc)F.(@NB41[WscY-32VTK;PI6u<t*2nQ4Nj;/m1h8:!&QU]RWX]SZj$Q
%jI2qU8hZkZZ!gU&_/+9a",5$8e'`T-,o+"aX9PQ%7>"[7&i^6R%?.JF0HiXApN&dKGRjm*0M=3.-nsjo4qlq-TpsKGCa`Zq$Y]sr
%MYT"<$>^K<]UQ)3d?!X@)0?pUA7_;%9&PMQ-d:X%0gWd2]F([%Ks#]*LD,romK<](+nIF%gWW'I0\6pCDll6(;@s59`2LOfiQ+A_
%#m;"-rj`8di>kcca@'D3kd<a;2p^k"PSeLt;WNsjWUT.u'%]`*i_I,'IBAUZb^5oc8h6#e<^[^jYRk+3)C2t<!hZh0AP%SFWlCm8
%km/H.,_gnq35N>M[A&gi2r^[*aJVW*X?9^i-PoRdoL.B<#bTGY$cg!Ca!r";c[%<b;3C3H[T0.6*Y#E6%M#7+4?qE#/?4L\Wr[qi
%,;_`+$%+$B9MBfubEiZCQ-ihe[7%ks$Ap&%.##fp,"hqC+ubf;U@H%[Obk,ZjJWPd:dt^b/!A^d>J67F6?R6\Mo,hmIUuAF$sATD
%XJ_g?TI$k.AAE<@VC?$S</+&Ze.f%h/E.k3)BM%ta%j-*4&AB<S-i1j'grcSVE_:pi1_FKYAC73.>]e&khm"L/(UgNWJD.eiMgQ(
%%O%nVZB>QZmDbA/##d6bYu2Ys;:F-oU4SBe/+)EWgf>0KGRV1El,5("b6_2XS6eV^b-n;a<AroS%@i!kjh+^1ZD\teX9KMBN6hjH
%-1I1Q^dENWC"]'i?65;a5^@_XMIJe47p_!00^U@GN[*FO=G4T.`"'M;dL%L6W%p;Ai1_FKX_b%1nQ?N&:I2mFS&!!h\$DqV7]aTG
%<Xb*e^]mXN,QPpm]un\P8tY!s'tS'QGUSqr:F+V:7>.h0G@-Yl]ts2$;m1r0M9'$N6"qXN8$P"O65_#BJ[3'dA6eS#Q;g9/$TTnD
%W"!'b9&_7<a#J'k\e(5!*1=)_.eGIoS*,M\HjnNY$jO8k!N#Rt6J:.EkM<'@5#4H.P<p+4$$CsH_EsGAX'1ns&>m(H&S]d`.]C]*
%jab3OiLiP/$/F%aVo'pKM&ncn`(DaZ&_18?1+<P7EPOY5g06#+LmB/^dh5[!1H+-L5mrTM\$E+c781WTQdDCYgSUlmX,8B9`+!sg
%]a-Ct/:jkU"u*M6Bl`KeQc<D^AO<;N=Nciq!5M.]N;b_o/0]X],Mi<#711K`Mh0?8W*f?EQRp*k9!DtcBUGq)o`M=#<CBR!nO40[
%/4+"VC_[gM]JZ49?Fa_X'S6\VM>!7X#@V&N[n&:?3EhObN?Ma@UP^rVP2\38H4b;##\YYmSoe'T*$uVT0D0d*;+46M*+2l'`$0jm
%Lo_kR:!QFhMW[UV81V)%*XB,PHE58O$(![;0,PF8MZcML#_uml*$2.mMED&'Yc(+d.U,B=$t!8"J8m^,ZX\F+U5Bek)I-BA7n`tW
%i$sS6=%4e42_e!*V9Z$6;?sX.A88c++[QWDOjoUUQpanY5`eDk*deYo6mesl2C6SSFD+j?lrLPpV'$p9jc'`[;bXtrVY;U!.UpJ>
%Hss\o#mDo;Xl9Kk>a!dP/Q7BZCSd&9XGBVl%5(Y!9&`R3RmaD+<CF>n7Z:G4]N44l0kaFHlrGlo.[A?HC!c@O+m;Vg<>J/D:r<Yk
%7S&3Z'%f\5d1e$;;13&BUVroW[6QkM65I-V-l.H:*E,K5_r+3=P,k),ij"$<,$k[&:LjS\.['b1#7G)l8)r=Ikho:D[99S<=X5;V
%)IQZ%66cW"^fPB=F>$$c,sG7!Jtc.AAE"6,6B:+gNiuf):W^]k\SF4&MSGJMctHi_$sHUU]9R6.;MM/\FDsnVZY81;P037.l,*np
%l)70e$#GkANJXQ<WBc/u,\a)gCKbE>@>[[_<F@mD;#en78!6;O!TG>66F;L_.6eE*JW#Cr^XP.k7<+'jL'Gp=).N8fAJ)>0"rLC"
%cj7H6n<F>*4\?i6&G=23<le+p"Pq7#0@HN(_*GoeT%B,O'lqV&p0=f@cj45EW2N,X=:qaLKn[%\6V'E'$8T8m5?1OREs=A!Y`b"U
%JOuL^^!n['&3cqJJRrK:1e+bZPu1XF2BKu5''#bLM9]H:=d;M'<)B9!8Y/AmP#N_H.Es_(@=dc<[$#"!*j\NC"Vk^TH_RZR6%oLk
%a.k,<,F2.1Z''!.9_75"oRg[D2mb>4O=;0F/nI/^4>DlcTc/#1<tu!:X(fp*O/`i1XK&E-7MVl9YZ4e[R2'-g685!i;%*8!"i;92
%"r()Fd843TnI"YJT2Rdd]TXt-^TbXd2AoI@RaFYt$e+13c/kC#<$3_VO5k7ZAU"9s/MdI'(Ds;k,>1!CW[ERp"G554%7f_U('o,W
%*0.$5%Tn<#^aV$d*4e+%dDF+,G#)6(j#&fZZF#[#EWo.=JZD^c2QB/K/iMN*LoOn++P511BdM9(oQJ;B,AT<<$AP2bI>@W%O/bU)
%Ii;Eg/KB-DC(SFXjaO*m5J5!1)0KJ9R&CEl:;@2\%?%Cfq=MK9XqSHq&seWo!oGEFK?:&1V@]XRM@``h,!(r@&m9r2d)(\`+j$+P
%G:6+[K1(_MX;6gZ">t_g:NO:G=4m-nPFP-`[P:TJU)"cXY"-gQqA;A);2J^ZE0Dgr2Sb"89Ws.o`mOSq6./B05H+\)143<L8)m\P
%U,tGshOQ3kG2]C:C>m6$8-AW9kF./ZKo1[&&!*>%YsQZsL3au;2e>Dg\3JC>)t*4"J0rVT>"r,>`d@`W%ON`h]i>2jL4tA$K.0&4
%hBaoLhIHr#$c`r^du]]R#18>km@5,YZW+/!</;#He9*Kc-^/lm_jBSof/dK"FL-na7FaNE?`l[%$Y4b8_lh,j]\9O)@H^nAHP6SD
%>7\b"/*XPL3!nr9aaiV2dBZ/(O[5F5)2/urjP;`Y.4NIjM@TlaK?3"rlWf_%3,i]JY>mCC\N*^n'pXRbANO%Lar_W,KTJHS^oTb(
%LU'</ioR\eC>me[W'LiARV5-B?KA4RAM^oWDl[Ca('^q83CjH6E02#Kd:%V.k!^S,q9e`8X]NEL9"Ccc$;4obe1`FA/Ju0G&L_tA
%h:?q;-.5I%isKRU6Ot=L@efP*/"X/tdh90UaCHl"R>n[Fd,;s&0t'X$C#W7tAV$Q\3)k`V*e9./ld[\.`c-&s@>X2E[L::BKea)M
%hA\ti)0I?#W*qZgYaU<-">t_'>&a7AOt"g4;%i7cXO,"CH>N.uJ^crf7?Uga)7rdHPU4b1-?[J8RNjS.CS8NWfqUC.AK`U)Sr!Hp
%H+**UrMbs;E&*;Z7Ff8K90e.)8\?K-g(\PN.Vis%7PA(5CY+a4A$12["66#m0q'T.@CS9GaLkA-/s#';:go4E:puR!QH1#B6*`m"
%I'#b=;@t.=isMi@@h1j7@&R=P(>dm\';E@>@YGNN,hN8&&NrM"59Z5Y*&UJk6C`g+F`-Kp:qko>(kL+-<7$e/kb0&8Ag1'S/)m1q
%*`Yd#X\)4b(01eJ++bEL;,')HO!UO'/PCf.LP>M2$ArMc1IF\af>GQp,dbgp6r&>9MGZ7$%7c2L$=nXl)3]'"%L0IWE%lJidsD`3
%'er<@-<2K7FpM^l4,#PHm*g,oMu7@M=<W"ZCrq"a)^QGld)#'GXr3MO5VR6cf4u6j(i,5M'%nG9$OcKT%Bta5Tf8,h]g#Yoes7.R
%==kM=#\ajfT=1`1QpoSkH)%l$Spf*]d9VRK,qeK11)pX.)o,9o8#--O-%l\]<,kR7L>&hD`]us]Z;9.QQ,5G8QPjmY(^#]NMUngZ
%Weg2f_1hP+$pnV6<.EcuMHdSZRDcciF!MLn6D)QYEUPht-m1t\15_#K_nQd"%ti#89VJCpMT96b0NneU-JQX/]S_^T8!%]KTZ%Rf
%-OVD5P]BH+X`3&=Ud=Y6b4@(JO[K#OV;>.3$8'K-!"=jY,^RZSA%D+LQ@c^4&7:^\8Amr']bUg9bNs*Z;HP,)Uip/iL3#Cn-A$p9
%334^65?U>?_I8/K_P)aH"u-gZF1f=YY=!WsFJCO=^!-5dXM>*db;G!QBOaLf$MERg<)=1Clol^&Lh_L6G<JHKUmH%?QE$5/Hf6Y:
%%?cPa2&r__=\o]Mq/TH7<]"h#Bb3L_[L;Y]aZ\5kNa8d6_6?BG5FuH6Bo=J`fu2VRF<[Ie.O$'B49l\Q_VAt;G=7P0'%nEc$k)SG
%?WaiW-k-&54KUtR:_<ep_[:156Ot=L@]3D"Q@QJkiOHb^W>/n=E]c,KBf1`AhS=osl,Eg3cONSnbBfK?l.&JtZChCO/<N*<L9_@t
%;ac$Z!X8H+pKYC%=X'8>%P4[s%R("QLnhg-1ZBjYhNGthog0I%^r4D!PZa&@*$:5Bd<!DL*gMi&6&1!Lld[]TWcUHr:g+1u8.EI'
%HnWT-d27JP&7k4n4j"CP(_05>M[$@M-#aR.;t::c*]`AmAkn`@657"udF$.q/'fF7%)XWHp5Z35dprK0F!r'*WDu84$_>XtE2!uu
%SS/fS140O9K7l"=a81uG'ma(^NCm4"d1N#a#YP+\H:I.h&>KI!:#&4>d).\)?3[eYMU]!eQ@pJB&+=au"VpQ:XaIZ\<l-eP7Eg\n
%UQrpW`:-d#K-@%&7Y?ANe'(pDZD9en5NJJJR5Sph.>aWa)aslu(--X.LoIl.<$Au>"71Vte=r$M#G8=&KaVg0M.h'4;P=1)?Y"]s
%X'(f!f%32V-*g%g0Ien5Z)Ip7dp6rlmnoBM6qS%O0NCif8:X=j-uk$e>sq]N6'6Q*9Ik4=f*IiFJ+h_F=14U]&fe_PLGJrMH9[kO
%GIL$Q5kPU`SS[BR;i=nFW7\$IWXli.B_XIoS@^=LU-`(YpoH2*A'!m+-?%mL@u/DU,Vd1)AuGa^4f&U,]GF6($AM'k')N[i]K2c/
%9nAZ/68g2L3n#uJ&+4,4PgnWSrBTY-Bh@(^_Fq8O;HTu1Rp#<._?_A1OM<bC9o]5i#1j8ALZAa.Irhu`A-L[hKM6[41_Beq)pJr%
%N,hh.R:eu\4kQMqCTWed#aI!Z6FR1fi7/W]Os%:f]4`SOf0l3(EOn'hV$TW@B4s4k8@rE$+eeLGNqSV]&-c/PoBMYe<0@!hq!j0Q
%,WgiWbF4uY)lX'lB&>q88b!2*dF[WpEhNTg!@1c790OQk'"eSuF1((:hiR($Tnj!AC'aclUg,q@4=&smYFu4SK%,.giD<$9)`Ooc
%1i[JdVr;&oPC)e7$NYa!0k95W/%-!1Q'=u5JkCY[Dk9s'C4/XoO$RB(bF83:2h^pN8JaAtagfdnTMU_>F72qGE5h)3)OD!Od3c@B
%*]>pe#JXl$$(A>-o!L=*AbP?;]"*u+6Ms%:PXH!a"Kp9)5*lJee7^_6Ae!H'f0uTOd5EieEEMolF<-i,`%Ooh_h%V%<fr_DR'U9Q
%a+9A!Z>,k;+Gl.).-^"Mp3i_*$A=?TE7-X5`&ULR[PVp56/7tRBm,`s&30cedcdBJ+:_$hS=rc4Vt/rkiQ$Q`b`,8OL,dIs[l[9"
%C(G3!.j1[^N&"BGrUq@E`!f'tgu4"+Gen#2M5/%3R\ca?5r>OC?KGoMiP+P#[il]Vf&)*4OYhMIEfb\-,^P1k6?=3G\!oCl8EuaE
%?40CIY*L7_19J@r%M\2mOpL%[#9bZ%FX@AK4%+K.@b#hLRN^ZFGtJR.nQtL^Y*aIj`@j_O4SJ\d$KuVAF(1n#D56^\Na*f_<]-j$
%CK4mM,3F$i?LYt^>4'CrL-0NUr/.gJ?Hg>8kONMFOR%hQ"utI4/mi'YY-C/u7gI=SV>0#*]HdfDc,uKGR2`+1K=9a*>Tl->8ILR\
%^>CjV^IYka7C]"'%c,X?/%J-EKB*-)-k%hY_gms]UO."kije>j-rQ$t9ZeLpOh/#/it?\&S8EkiiF0XF4o%6JI]b/.,pWbqp?<NR
%P3GP$,3UM5]S#\gd*0&B+oLt2h>%Ab>rE5<6g[,YQCkmb@W"kHSfDds,&ZWR9>jO"SDJ.-R+Tn0g`C*]'Ecsq%(clXMGgHnj,)c`
%2AI.@kTMaXaNfP(Oq9LMr+RRNAbdNo+HB*,$q7^hTJJNI5n\nH@25JKJkaR[*?I,@#I@Y=3*U.5).F)5Q$55:5#j!>iI[ID64Zjd
%<&,%eaAJ^b`6eQ6FsPr;1k\=f^<&b15TH,=%iXE]jN6LJ`VetT<CD/)kufgg)/27$jXT?aj(Rq0??[iHh(N_\i$38:C>]E<K>JI.
%Pr2IrTU5LLX;`VcL59I^)P^g'0$(-W%`E,/1W66.^]^^B)j\iDSP!^I]A_^XPC)In=2?8-GY@Vs5K*\f1=Fjkn?O+q$%FK-$'p1I
%*k;SHKXrGSJj5?,W:aXgJF29%)<CfN%^l9V@Ji4(\=Cn'?Q3#A42UQ45hYUVZ9+`GG9#/J/(W^hlhA08p&!Y2SG+[[&c27ub5?Vb
%7=P+Er7h,SIN+N$)jG8no"WeFoNQ85J,c;jessk'#V9o0U5rrC;TT9pnPt8PWoZYfeBq1M&rKVRXILJ_W]2btVO%N7JiI'Pl[6,r
%+nmZC0es)VLL_<2'Mc$pG^R;"(:[,n2+t_#'(0F9O_=Fg3+qm@esT1jhB]MZTMOfU*uUA\9lcT=A("DPVT;8>96h<UH0aqbfEB\u
%m%cGJMfG>aa@[d6YtRZL/G5m6esc!PrZ>79[=rZ8++SrRZhf^5!kX_i@[L3m#_k@ahDLDu,&]:V_h06B6o:'$+7\L$?';T6h84ID
%]DCUC"Q&DmKclsnp]7a6R?VO<N1L3)KpHerriS#9o`MAkfe.Ahp]&#A6S1LsNO@%UP6psJVXK/bl`N$LU3NYp_FJh4UUskTWK1;P
%-bo2*//+bG,?K?ZW&U^ZA-:n&QB6Ubs+09GZ9`$%TTk!8G)fO^c^(o>:[H&FLod?TFAAuBAd--qaSL$0;SuH"9h>e#U/-J1a^G+E
%o`3^\MC;#LriR"6V!seS<G&-U2V#/TOd7P]jiroj6Y!gGZITdn7t0A7Tk(cI=%8(+BI2$%!YY+ljETtR^('2U'*S\17R3XN/TiN>
%:uY!L%nGUQ?B@Uj1MLQ4JbAd*T=?A4@5O@c1GJM?T.,dRbtDO-aYSe]Edd5UH2#ngm5+-`T390BC&2#T]-A\(@e%)4&)P*M'hRU\
%hubJT'fN#+BN.ref,i4;.8S?4h=[ZWKe-W#]*?E><s,ask?Zd&-M]&#K.D4<(9q0-A#-1u4+o:kc&+->Hh$AQ]5YdGrA0qC8b<!4
%eJ7`j`!]eT;rUg$6>&:GLYSusq(ua:2<+&\^2/L6DB/Mg:SmDEL8?eTC*XjiG^p4%]HEIUQ26][5JKB10iB<,V%kScXgL*VHD9HU
%&lm/@a1/hA`>e_.H%T'*DlM)hCH7e1c$Ru1f2kU4L4IRD!M`bXg87l<963uO0`&"2HgCZn29SRm+\b;2P)6PlW$XV]obW>kQ6sH@
%1*0Y);ht++?iVeJng*K9%Ao+>BpgP?Xj:*+/L@nBXn8iSQaV_U<b-LJs8QFNjnVID5?#f=!C1,FSLDH[G<'`1F.B-.?:6s\JpjjU
%Qt3sq"H$%R[BS&Q_&,EB9,hGq(7Ed[h1(LUYKI[.:N@$)a\[51TVdt7\&M?/Z[cT+6X($5"GtEL-5+gd(H+q;2gpkfs4km!7i";u
%/*?oo]VSEEibML0Alj+J$7Ai61'F\of'q:P'],.Z2E<,R7DprTgCUb&2U"C5qaun%gA$kk@KkR0'L#>K$Ft%#X`;3pd:9If&A%_%
%GCA&rJg<@i^g%6CP'Bm7Q3h\+72:LPF!5LjjQhiiK*MO[dQscc`UQodBe4c/V!rqH_NRe'_b#7ATYjUC="=K!(j+d5'UJsF."G9"
%ZL1<C''7+ophXYK<NR90_B,05^rg4$qXRHgoL5eWlUM;S=JcEC2XBh#g=U4T3b\>LoM'tf0l>M<N]m_Rmjfh\Ao!2qls'?te59P#
%&hGf[k_D?MgV835n:=Ss#`FJk-`nIBFaFh<F:#&e=Dsac7*\udq@>$KL+(lmI\^q"-M/ro^W>+2kp)fH/tTGYmCH5q#Cms0Y-"?M
%.aGeXV!s59.A05.9GeMU>2#*9&ri$lqf1siU1r!"7,fl6Z(D`5UBqENnp`sISfSKk9i72l079dp@&0%bSoINhIM@/@pqS@&\,`g[
%6H8XiZU`/W+0<&?C<FFX/h,,<i&$bZro-Q#D(!kqp$6m"^%POXMd<9Bb5G<bOq<4mMD,j4rBY'@h_QRB-\Y>9<fiKFIRB9#mT[LU
%C+f=fK&1,79$5Ye"S812O]kQ'E&EpLK;r:hS@-;t+)2%Y:]g)NWW.i/F0P9rel*U06,)%8qB59a%hlLInAnh;N^#n>7&(Du5)XGY
%#/:cF[e<8KAg7)IE:'iZr6Lp^@.)ragH.$Ho`2tY9a-\*5)]?PX@2ZD_IpSVFmDamm9`tk[to*@d<iGuXf/3[8-nl[T')>'J[UYs
%cEt(:)r9h?KLnHU:aAiq*JmUZW##Z0K^EGkFZ0Jdi:kLl7c=H-#;q7c[`'s`/JJIk61K_+;QbhR8OLqm.VB1<cr&otUu7SR/T%fr
%W6d7i6DYkB[RD6kVu\N**Mg"JOl]p,qgW(3OD[\C:@Jlm*r7pT]&#tfb[$EZ"MHRQH]p\nUUskSO:aDljPoDP:X2@O"$W3T90j`!
%DWE)m(9#8E_n_JO#?Idu<bn$H"'8B<p+qK"?PO1n;M0OHj;m,(-6.dUVLMG3X+ZJ1?_YIK;NO9:K2>S3#_h:<,+kou00PksHP?1m
%3@0Pq3K2p4a\/U+W13^8ijX$\6dCDh"4CL;KW3n+/?!uI:V,-fK54RB\nu&TSJ/F]'b$aV(jlC.fJMpD-(Tl.KdVRM/0=4?H2XIZ
%%>&T0"^7mi,$LcVdCMr,X"B4aE_2l;Xt;!H,[K)`op/TEg)Oc\;JGX<b!phOVch,C27l$KIq"E,^_8_R4^D]Vh;lPC7A`EET>541
%U;#2[auWSi8pXCFc>o`OBTtUar8Ms&PUnR@6L&fj_M]tGF:Vg4mb%hr:Pbd-TB2ZDp`XL>OD5e=Z1(''8KD2mqf%`^K.M;c5k-K/
%-@r4IrCHTb3>gT5'>h=MHVhU'?B4h2HD!F`H3"bWT1g-mV!s3M#$mfk2\!#^I#rl$8Lk6.i[B/j=jf/SfQ*2/YoaZ4R>MJ-ZA;0Q
%i.D:2bpJ[Z.EAYkYD_!>kZ7oAr:M:g%t04B/&Tk+AB[u,CS=;G-,]:.pC>C%@-]_0q_Pkk>`YA2o,_6N]TeLop06,NiUG8AQumkl
%,^*\N^Mn2ilUM!u=JW>E=Y*[B`4B+JIMSg'a%`Ip;rm*ED)jM(l'^8r#DHqH"W5^e\g^c49M;<bdlnX`Q)a5JdC[fPV#R7[M)QP6
%:f+YIS?nL"q=*sEE\V.8.`Z6210#Mb-t9*gnj22.*u^g;Pm:bf\g?)0eXJHsB\+\jA%ep\VR>#BhTG+B$D1It27'='b%0a]LK7OM
%l-'=_%llRVMd-cH>GX7[f,#6b&9[7Vk!CNqTWLd83o0sUap,$._bX;'K>8kK\;IB!q!?&4\45:<'&rqc>YJ'DTk'iZ!6$0DDu8$'
%Kst&S&n$_W*.7'<]UY]>)mGj/I7t.d.7(]<EW.*M$0bi'+?a^VIF*2ETVdrE9.1]<p0Eu'dE?W1iSb+X((*?K1\'Bhp?g_;iYdGS
%.p96(JbDpYK9"9K14#@m71>41c@Wc-pr(l\<YeGdQ3jp?B#KC\nmf%DIKOXKaqoW2'[2r+N=FQK4CXn(YAFNl4E+5bA0,DT^*ujS
%$0Q4*A6;`da[FllMOl2L:Ft@cB<$?!-tZsL\oB@%6<'06SE!"bdW)LNSG0j#MEGq2*XcT"IaYnF%p=!R?5g&mB%qU)BqGU+bkCuR
%Wj,q'QNU+'i.Jloc@7s-29B7Abr<n#Yp<.=4(SnBYeS[=nIGrFC$A7cT\u.c9'1XWM9oD;L;qaLPrcO1cA,ell?ad@)p(;MI,b'Z
%&"m%iOD0/NOsgAaTd1XZ*,=)&8ubQs'?WF5I\:Z%'(DG-hmX)d"g]RD5%p3!1^!1TM,BV</Q%RsWpE=9^L*iss,neepV2+'L74\q
%m]<Vr,XW_X<)&+R4pg0]7CQ+<!`s0(X^D]-;L9#]hpW.)l6OqqPB.;UA`&-W/)O8mjg6_E@0nZce`LKR0A[moJ@ol;0cs5$%ON%K
%BcJ+Mj>*ZXPMkCJ&IglY4[Ti$=*;lJ?V`09C+(gEnKN1ME:Pt.'QI#A]l9o%,\_Yq*nI!N:7:]8%6#)mg4S,rM[97ZdW'46c$CXh
%a=>X[lr"?0b0-bZInT'E6aJhV^"XP!dPELhC%L.79N2EpT%jLkYY;uIB_sUE=lmaKG69%[h7/-*Ls79V)f@8d[<H5")1TJZhr(e+
%=/%J6:ZG8@aGKXr:mWh)aGIZu.%<.@3s4$3-04/E7!^*"HZ7%HLuYeETdY>A&2m#gFsJ?-E8qRWl'uUB]A[1.PC)e7f``^El^cm,
%./`mhTb@e>U2a;h/0lt^U'kFN/V=o4?h=Oa%?\(lIdKL?6T-Rg'-&jF5MD5=a@=mI+4hY"]-hhAHKIcd_=+T)2Y$&DkMD'1BP)33
%*6F(MAk53MO64CP79?EEWFB=uj^!\*5NFZ&Iql:$6Z"%fPs%&Ci$./p2>-8*K+d24B=$>%4_H&7@.r3#S-ZtEm6hWlH+-/$+OnbZ
%b4-%+]E+*W/#(*>niKH/gkL'pXcp?kL?n2p)$(_4S:`dP%lp@m.\D`+5[ZQdn!nA,HKgYS_:-c@37QfQ[4ARuPoB2[M2;gh(HS"=
%3i^je1lYb,Wm25X[3=C4KD*pQ&FjFC8j25t,ic26T`q<io]=2s2aU=1)OHP>=E9#*iF-5[HgkeY0p1:]QM=mSEehM-0<3qCX+[Js
%YP2EkZQeA0L+mRf8Z^re\$i\t+uj<BiiqcrciA3D-\pJa4o8ZE=:,[9Dn#>>OkPFlbD.;@mcN;oq,KBg&,._>7]4gg^_7I9&ChAt
%396onQ(eijVd4jTGB^D(^`d(]+?*9*MElDL`$DNWp4F!'ktB\V\(_o-2RNdfQ4?[&qrqb(Q=g"/)N$lm)5@S0s/R@0d#3LO0Sb:J
%Q`Xqoib9fmCUpAaLr6r##A$,!K@K5/+\+]d9"T'L8`)\Gh<lu%WBIc!4BOR$jmhAt_4`c,a_I:@`?#YMp\MT6lbY1sCn-5h7_2[o
%5^j^`\n?K5D>qhjDB7L8XeB7Ba?B>^$,LXU4Dmt&iVNfer91G^iTajuom,@Z7<3NFeAOE[o7=#6::_@\`MCG1gjsQLjo[CnC&F0m
%L/9pA+`P=3@R;c<hem\Kf]:o"[BDoE.[/jLR1AAP"lco?S.,10eXNc:/pf/BmGQU`-^B(@m:r$Q6LDi7Lu\&i1)+'/=hd*ELTFgD
%@beJH?92_gi,3elf]4+Og'NV(M)VL=E70m76Dl*habZc."94O7C6Q+X%"HeNEa3#gZX<+X[ptGHUuig<p8*'e6OO9Z4)u2BC&Fn:
%8B3MHCNVVhU`QVkA\"V)fk:A$W"]&VUG,,F';rW>7dBu)R\Xm_',efOQbETCL`V8Ch57.@2`1h[=A%Y/,)_*g#!_/[eqU;UL*\%1
%jdFtCGF1(!:MtZM0Fr'!CteQ7oJq*Q[\7J8Q`QXA1<oA39@q)s]niN.+;5b^]%Ta:s1#!JLr8eCGL00+(a!KcR"4po+-dC;4uU+1
%d'H2V%rQlf1ln#).<I,q"f::oDfj+@;H^(D]k6G.K8Z[q:j)=sj9(giV_uXrdn1ZZ#N:d28.[;:ZkBg0l:<CsXs"+bFLF*8h=*++
%jIVmq7>6AoLn@O4MJBK-)i4EAaGs>A*f+fJ5neu`nKLtW>(bnUM"kE,eI];NOg5M."6m&&Et&PHE6hI8hR'Y*=@1I1b\oF&>\nHL
%gi=-Q6!?8?ND*,=LGF;PWG[VQd<a(7._$G7I!2o&f?d.T3cYJb\C0!(!ElHD\H$7q]["g4#/1#ZQ/?]n4`_nCi7F.i_'rCf"#sRe
%o1(q,RKrCa!6RV+fd/NGP^9T7Z;GO2Epj04IrPo",gULn3tTGDhh)-8JpPM3U+t*S]5\.jFNue\h9[rJEY!V)[R7$*/j?7uh?auZ
%iGC$S"\7T*X$nL"0CcR99gZoV*_MuGf+@UOFH^N]*g1Lpm30jXo*#dL.QQ]S8f<(_K.Qhl:@L)&Ci",&IdPTLjJK._O(m^+OuWk2
%$;h^q:kS9DRk0WR*$cI;-.#;q)J373kot<o%a2S@(APDX02F2ffmXC2a@dmse$EYUKh^j';qhX=.`@.3,r<hdPMR_C9X-HfQRb;D
%W>0P[X0\Hb17<utHJbk7e1M`$fS.D>dW;/h8'4B\\V\./K"M/&:kSNpEH\8=AmnVbnnQnZRF]@S@pMIX&n*gX,5+^mSQ,eFM#0K0
%0fZ:-ZF12K.oJ$o?O[rq^E%%oiMc*8'`!3Xm$CEu_\S1]mgNtC=-3#8%6"rUgk/hC0'h5/iX?-C.V8nS-sS$[0,Vf6MJTd+%;<T>
%d5=A62MeQC>%If.L?h[9U2N*R%`EASdN^71[.NJ%Tn6O[L/ioq3h)]u4$7=_%q]Ynk+CqW?TP2_9QMX03+*2TR\a5:9CV;6,eFd7
%2Q8]-B%*ILc<%mfiSc,-+:e:s8%#%H/=2:pO;!],HAtS]V,Of/mY73h:$nKSHdb8PTBZ#.#/tP:(.8^F&`p=:K,(@S$tJA&i$*e[
%W\@XflI?I"/eJL&[0(DNp-#A*-?J5\4>H^j/g1RoSDS5I=X1<Z\$c^2/f5WKPO@NBKS*d[/fQPcNO%%Bh?f&uABIH&9K`iQlhF:<
%L^qT%`5WF[)EfMp9]HMu`[!qcZ;&U_?@434#HO`a5j2.>B:Sllh`'7dkZ[WllRe;8RW?[iV!<dHThMZ?IpBUAm!/K'Fs%:<^4o\d
%:g]et7=a.bUCs8L`+HL5*?L0lK@aK(Y/S^=\Lc_'>>P=[qaQq1?hGDhN+"t41=8WuY,qVFKQsjNaY2ZmY+Kp&iMdiNU[hqQ'^8B(
%WnWJ95iSqo%82MW3h,#EGaR.E*o-b+G:d,ql3Ren]#o8f$_9i*/G`"f>d#*M"[!74O'TD5%?eC*jiGti*QpU%Snq?;+;pJK=@;&,
%2SU6:M@dFG%8)HF6(?\JG^(@9-a/S`aY1MblEnmX^R70]KO9CRS=G=Wk%ncRfkYOlcJ"C9f%cX1%G^$GTjrZ'SugYf<;r-#(ZLBW
%.(OYCLlD^2]$r]2*BpfS/'5U\C'B6'=XZS,4a4dLX\?IMGt<\O_.9Ji_l[:;S0Z!(f=6KY1t`"U_p-/tp<N"Z:Be!L_[/(VHDXs2
%N&^2mb#.=ePjTT%4d(J@#11FJS'5i\K'kk4Mj0!keWk)eK0*]Eo$f/5Y/q2HK_?jagMV3pf[LtDSrKra^oIF09oDS&.,KMDm8HlW
%%&MINh>nqFbtj!36(H_*X+[6c>bhkJ1"k%&-+Q<@Fi7,-%gAW]R"VF9\%1m\LP&=g_<NaMAZ:KM-8J;afQp@>_T1+:?F^tQ\Y*7O
%Nik`Cc%?tpd?]YP),EUF4b?\YOZO,pQ+dJlqO=3LWf^L%$Z[0\E=).l[L$,)a+f_'o)!_Yq#,.%=Gb)WYK-kr\S=Qi;c,e7mDLrk
%crqGqIYk3XJ-6OE[sA[3Mt7cOD:aTl@&Q<6(K54*Lui$U"`00e(_'j+8UGLlpl@R?s8F3.s3iI*\>,G?(OXfP9*7WdH8oEO3DMC1
%a19lbFD$2#F8eVX5'=m2ARESL_jEq'\l6JYc/EN1Me7[]18UNR-4S-[;0-1@J1-m)%%.?kX<.R/YfmA;PIDNpS[H2\N_J_2,2sMa
%7->3#.ac*q?V"N@jdV,p9?$r('A9kIdM+Nl$k.&r0\&8g:&F!b@EM,d3#RetGG<[oKb#^TntSf`=U>#%crP`7V;u?WW&*S_'3(a/
%JS+b>,=XR;C._]e40.Zdh91]uJR=to:'eNK[$%H-,U7!!n-_MXQl'O_836t66/`LSDRH"*6!1P`LqT*D[T1a(5G1/D*+'ROZ!H(V
%.OGsXX\0q>D5(5"gl\Pe@.+J,CsZ5;:+7sQUk"?f3M[]QZ3T,Fca03%J^:E1b`sgjM,`?:9VN=k!1[Ve"01n;E)UEcMk&]t:;]th
%N#dDrI1'Z0@kaoC6ap`EQVAGAQGQ?oXQ[Ki@%Q"lH)'ks6a/uk3T[cFf@i9)`j@Qa]ipjF4PiMoP+%=Wjk%l&[B;)j$"tAjYNl9.
%M?5GtQKg@bNau#_GmEB+SS\Lt.f"uc.=>UlO:g.SLoiCE,C\un(LHLXA/PiC&SDY%1mMTSRb\:Q16ndPi6Z6C.S45F7+PbFKe6uq
%Vs)kDXt;+L-0W#Z_V"J'qL^*,QJ51"P+nJ@&MH'iPB^"#Ruo28TGG=]2p5R'@JfGQ[?pIQ5AP_[FT$CIqX$X+Y546p4XU0o[uL0l
%H.86PJ(k2-laK%B[i&XjT)Z^.$;M><YDM+(=h>s8%L64fEfVV4[4\Pp<ZG`#A28,l8I_Xl3(C`@*VM*WE?u)#nT,+FCMg:&`Qeho
%q6<JU/u_?P8Z!OCY(nW]?DXMbJi_h#e<r]$TS-\*WK!7o-<7jSZ`teL%gr@,6hbN&;NTZMXA?:CaL">4[#+r8B$As[:I`h@V-+/S
%mu.Se>#S_'^m\A$]%>Z0i^kiL'D$]*fj/X%8Y6X8VVb$>>g^rC>3ImPs7k<A<-krmV7GjqRu$'b/6J?u^9s)+;9Ps_LKW$khh]e.
%KjYsLX36^H$NBET?75oS'uj'=NWtL+phkqN=YpI+V"e_o'ap3=Z\[]3.&S1\SqT%#H<1RKZi::(k'B-k/*>9^dK'\?#2,K/iIdSE
%4@-B*8OU9GmQu<Q=o]jAIZnY_8r[M#<$+:oo/d^BU8bBjAKNJMJmV/M@Ie4$e5/[Q,sMf-NNq4Hh^Ek[78\n6,,UL/[:m*/ljAaM
%a-KG'dL*MoMc?$1^n`"O880B2G$mB\BukC/J<2o5X0k)\EiY%f]/HCD\:2V8Mn.,tTnM!HK3ua%qg3"FeE5HaT3k4?/"b%JZec8;
%=b+"]bmB"Uer"6/d'B3BR)3+Bl"H\p)/\7;1J?djMR@US6,XXBA;uMs!`Uu4q[BY+MT)rnfhI/026MDY%3?Bd8kM+e7cJ.Mcf'l!
%5JP5(_?l\08929'X`gWo:e-S.^JsBN]e^>g-YYq(-o_:Q:f!P3`IpXP7_>J+$X/Do:p-J@g*qk+rWfA)a-6K-!rr2(8MuCJqQ_nZ
%]qL=eG:;/abG:k3WI4RD0CN(&'3XnO@"e^-o0B_K+RZ;;GNRX^DE3jBUJ!(r7=@qb!g#cSNs5k+<f'VretP_FYfJ6g-\2f0->LNB
%L;Cfc<Za]#P9rDnM5a$$OBYD!Ifr`&AW84&pL$EoHa&bjpIa9fmmX9\kZLG4PFgDGZt^nEb#;J7O9VpD;.j%:BD2pA1Bh>fmAa+b
%:)'JT!g57_Bd-3_*WqY=E1tC2%4K*SC_,Mk\Z6sQ/t#(G]uO(\]uP-9=A_-h(YFCjpR!:9##Q.-\`p9["Fdl)"WKg7)]l[WE;1Rm
%LDUt<19::t0siPm10(pn"!q\rh#`R\g1&?lQ'>g+AsYh^KT2F+l7prQfRWUHqNEc2PAJk>*5k%(nNmXg[Ye7E%]AbM0Y\4paItS(
%?F](c6F12qVp)M3^`XQ)@T(M,i_\6i`a\Njqs4^<hNH8m-LV&IV/1Cm-SG"p=p^"GMU`'@8*9$T0e',,Tc!Q<GS'Y+=MEKj8d6%u
%)3DRRMpFs`@2RTR)hk*DckV.GRI"'>=MGUn@C*/A$l/b\(6$&8TX-&q&**O%L.3HA&(R'W(_YJ_,'>(up,sZ8>Z0RLZI#rT7s8V`
%j'e&Q-"ZP-+rO0E87Nr)=M(ShbRsB)I7lQ;T';rGK9jSq*N^g_A$!-u%jh+/[n@Y&RgG<Uf8m4[-%.W!%8`D]",2dAOn%W_#0Zd2
%e<uE@22KLu`QZp++I,8<9_)CuI&#V$$)OCSD]_`mYm&-,.56du'$[A.de(1CVu4Y`s*oKO&.9nX5#Xj;i;h!BOD,ZQMhfh*RI]?.
%,4X7"9,Ihp-2ppq4mj48(J2ALW/D)?2(F/)X$tiA\5gHLjRM2\_*X2:AgocX!rShj#JO";O:DqMA(u:6HB[WXM<[KU,tM3W#_4@q
%Q\f.7C)G@-9,:G?a,KuP!r#OCF(NbHg>I&ErHSTA?O,iL(9O<G[;97_YOtT,FoUnHo)DEsq^^RR.+I"=$Xpg\8;AL4gP#S1?'F1d
%>KqMhZ:okg?\mYCBWkpX_3Q4@0la&3gG:D+:A\W69H3u$_mSEA^,=g!0MOMspq#!KXP$(&ArqZ7*m4#5]d`mNq\MP]_.kI$pBM/\
%aCF(/[3IV'"qIQa:<2?J=`5/J:`1%PS+s-`V,8HuGBo"R_(OCRoi*[ui1X#V7"(55,pd@j(\JCra(uIHIj"63on45\U55Ke$`o$l
%ImMeag)0]D(ueL?=nGo<k;\i&Oe!C*lYu!D<qRfFeBAG5q;m9'57=giMtCpD@JLMf%C;0-=^ATPo!k4&gc'e6IQ8S4%Z-oH8O,[j
%du'OYTRD/VbNI[4VQ;>e<['E*:C>^FP8g-.E0baCMZgXuP;nOG1Yid,1mTSag<fZ$h["Vj)]hkN'G38EG55CB#U29N>,Cnk6=D2^
%mP8'?2*gCEd!)ISS"sCJ"C8";1Tsk=Je@'6_)\0$`k(cC3j\``P*l>8(!Cn$5iErgQCHHbl);bVp;o6,d1Z?5>-.sGXc]^)h]`o=
%bZh%\IiG7_R1c5pVR(c4G($FO:M/mCGBY*@.b5nJ,fh/O7<nt*/a[!oGQ5u/Hnk2"l)"X)EAO\F6oudRg3M[6JFlTF9-C'eHQUTk
%p-pT]Z9FQ(3W!6h2c6NS)&k<bJQ^9,hcESW\NP-/.uhWcKk)LWT)CmZ4'UA7V9ms;eP[bXZ`@)Z02fX2*9]-m[j\_N'D#+io&0hZ
%f>>A]<%]7)GYAr>f[eo7fj()e-e?^Nfq[dthuf$&e?+tsOBNX*Sq(9'TeJ/T&([drlXCeaAf7q'@I'ndRf^Rilsm411a[j&K8Gf<
%_>JUOM,?ppeL1ejX2_G$%B>5!jGV#r88\fm3Uco2YRdF:csfn7U2)UKnj$ob`3?!Y;OE3I]tc48Wh+MNO&)KgEaUMNThi@n)NV-<
%-Cr>BQEu>8:j%1S(tFInH_^'2aT_@:-;t;KR!1.3W,[epW0!8I1VU*/`'faAHU3k<1Un^@%oG0WF_3E]g_;u3p3+,;9cJg\8=%-(
%iUAEkI[WBOb*.e37'9YHjpqNcq6%.%)sZ.aZ+oTc`H;V<6bOag>_=-&_/eEfMKO"SFBG8>:b;g&&M0U?3SKr*'Y4WQ8-`QAH"aQR
%!ZG(f(6UlA,p<9m7^bE.r7raphbG>GFD+iQ%XuqSX*G)%\2/qf9n;e;VD$>E;Z72Mj;N/dIN[Pa%=O-!]TA=0.Wm-iLNYt&oJ#Rr
%b>mOnYP`&%s*+eJr<3hi^(`+a)1\A$;DMHJ:FBq?<6YJ$CIsB0G"JVS.(l\/3q&OmY0&#;d;=^%4<icImpDaR3=sb%d>e-X_?ZB@
%8L[rh[oe9_dFkft7I=s5i2h8m*:5'=9Cr&th+$l3hq"_u8f#cf=`4P<A/fr6)o6?R8=P\&+8UIr,GA_QH62#/X\UkESQ4]Tp.H.K
%<R&*mT!\fS[l"M-b$UAG>d\.&3hedCC6tcC%dA`q-5<rC5>_-n.V3q)9-04_LRf8+.;8cUj!l>X&Wo#!SGtjiYEF-cW>S)d'`#/5
%5:,Q+'Q$lC7QsGL8-uOMH>W[Ii"I2:JoC?Z*WmH[>bnO1Xg22XdFagq,6u:kr=9%f(+Jqual>pII+CJ0><_j-XQ*Y$aeN_2#('8C
%`%%IRZ+*-YB,s)kesfoR/]C8e[h>uCL_0j&7@Jk#"Kq3qX/D)a39]iB``&2o;aj<f9d:aWGT?kqG+UrHI,]Lj'4'G@0M.j.\:/be
%ojbi&E\+3-13E)ORXUoK/JFY+"7LQ8;937HMht>Z[+qXVDLFLtUYQZ'h*8,5#bG^=5#+X(TO)'Z8[F8SQc,>l6;lg46T:4lcsY]P
%-sUP@b_)>(ET!7<_XHckM_i#G?jZBYl$BH*<6iTdmO%F[77s$*iXaS]WWECaD\5@0jS)]]^1@2,Ea4d9>*WY`o_2!(*p8r5EmWE3
%dSs/1G1Nh=31s]YK,L[OcE^O>VXTF26GZYZSgW/bR^(8'LaW$g+WEu;d-*TS9f.)mnB4d=F&IeV[UW*D/+"k7d`[Hd<oX#'[Uk=g
%:C<^SPisWg-,kiBg5&<tT4GmEdXIe[QZ)`4Y%QWP>Ajl#DF,U7i`FXZMMLX\oZ3LQ0gUY4i$"tFkUK:bGS'Yc,,%Jcc50f?/b*@?
%Pqd]=+EqDYHj:W((-74O.fAU&!nS>^_.V3<C0a;q<+N69*.$+G&(HeRGF8!J`e4oLrh!>fM4h=,[BW_j5t!^Q?2m/13;#g/1=-"a
%hB+-kep0EnGJ:dI=P<4JSPiZk0*JZt7Hn59<IuP_C'RP9Z(6%+h*5lnj[DRBg*2QLDSIig*f-:7n,4HeQ%C?YhCF?;"KpR5g`ij=
%+^UR7Pug.W\6@TH"Qp8W]n048hja4s^h;4HW;dJmXU<tJ"a.t\'j`u#:a)H!',pX-#;pDtd/Rqr-)jj(nPH33M.T]29>]`"mThZ[
%5r7h?5Poq<Kc7URbRqEUIL2AoWb5&2=QjR`rD[h8:V8[Z=F0]7l[pL#>gcm-ieT5Q)R&^o9tCR^Fpa%@QuLg.;S:?D+'9S[WY/7H
%RR7V!g&@u1@PSO'aSd?KSFo:+eMqgBrO.'13b(J-W6o8+6djZ5Y+b,cSKOUGX(BOqDk=T<-WUIq4:RTY>Ij<P*pYD\@)6%sT;CHN
%&F:0]oY8si,5@GDb-Z('\]9Fe9EP@MGs-cUjAm/qe9_c%`:ns0np97)7&?0dKiFk&6Zpe_(S=0f61:Gb%D`:#lP%/CdOe.e(ZZ66
%=*kb"0VHQ;"X0+7Qkif.jG&,4!`._f\,?(KX6NdPY1bIoQ3`C713D&pf>)Msm]8s]mBci#O4L/W79M4!S@FWu4]qB`30:XC$PI4h
%]AP`8/Pc_Gpspc)Sqtg;I:-W0'8Dn%#\@rM"@,.JQ/!]a&b1<soY2.Jb#X?l5YdfCo`,Y1^J\R67.63_<_n"W6tA84.H!MN'8lu\
%=J4M.Up7\C`ifiCR4=)MDhEfA^fcY0`fn3mf;?8d+>g.=Z_>\ZQc4c\4n^J2D_TjW],q!k^:#s%T3*@1VF3Z#Z%))!@b3;]()'I>
%:($d'6F%X$7c@Ms9Rtm$GNq(F#\TLP8-^bOS`Z6Z@/FU:&$:spN(2H*jcQ>r9"Q,_L%-M\cBiX@f_I7eZ.J3:n>6\`C!unnel,kh
%Asa#7=,G61q67`kW]ZkP:BI.kV*9Kb&?.rqPSGK@4#@OB`9#q;4<[V#eVt&9k+\)9UlOe-p.[p&\onr6A@kKT3(eK*`_U##f.k5f
%lTG$+]DmY^9(CDrF=iV9gF>ZF"s(';"_u"FeVBm8aZDG4lN;fjDM0?0I/ofN?k3^/$1JZQ:m4OXdin`\i"M$%Jq]LLU=C%H'.IZ+
%_*4<-DW,qtUuj^n1&"/rm?gM`51&#_n!$!SI"PN6rWl44I#R0%1[U+iNP[%G9^#q1!t76>2^N"bapb?cpM\9bYGOl8J70KID=dHj
%^opXkOs$5s5LOS1.X+0:'D20\l3I8)oZK`UK^PZaJ^5mq<'@S;?7^8<f;^%QO?A.B(.\d<d9F!!j6K"hg.;rTq=L>YPHRAr.?Q]7
%7P72pCaW5$\")e@Hr0UV,2o?nd^[`u6o-/^9"aCE2[=fqOYdWL_MrORCKH##7+a2.lc07+ac*&`1>;l$o28(!0DiPsm@m,NcUcuo
%Ul^7seZPM:j7Zl)%jP]*>;]+r,D/S0J"Uat,:!k1jrpO<qUQ]V-1E,S*/^k?BTi[*BmH?4=8u'4+n6Q7[59`oLq$ck#r!TafZjZM
%:s^oPU(JMtrC#St6s\8Yl;]f#q[#/S<.hD#7&(X'G@VJ]quLh$O6N.N#8V#JD$_>U4/QdC)VOjfN6,dh18b/dL6uR]FtDp8q#c36
%`/]/$;t/;o!*u%9=_Db5nkis+a`u#'h1NLU*cbd2aieb2NKdn[?a&.b"qMO_o2)$s'Eo!KD]:-I$h*Gq%/\UF[P"iO%GA?UCQZf3
%@;8"<prpboMG.m/CV4_]3/Ut![D2Mh5S+]X/Yo;aVs[d`CC<^7;)1:NogSF\qad&EI)]Hl!e>IRl1aEAJ^o=;>*@mgpXD&h)5ND=
%jAX--bSTGm)-`,TFX`BEReRsQ>\f!`YJRbVb7l%,;%RYGEPZC(dk@OmeX0kOOo@W)"3Z?+K^+s?`@sHa"u3.G_Vu$o91rrMUai))
%q!@tQRC*s4"%fS*KKb4o(-X]=U#7sCLEj`cL3&9e&bsQWKh<+TH\fNeU8?0A`g(6i&UODX).)6G7W\TVDneIa!$oB^;mN1^%NT'$
%QdPFZ:"?U2=R?/$&'RE4,k0,5:PO@=BhW?)BAei0r,dWWEhui?%L)ABF=3W,O9lg1'c`@AdLUHudZ's/2-JNH<RI.%R@]>.4.X],
%cjs$!*V;.?q1#(,#uL]JCq,cWp0NAaj\p\2/\kIGk<bW#s*K/$aPAlP<l)8.n?rs+/S&6J8d/4oWca?dH_>-r_VLfj@=O@\&@ZE(
%bXAQBP")</glMW+jEO&+p\qrL7!3P#=.gI3V_&?""]S*D8F<Oif.eKWs,V__2#<=/U&Wk[g8,pur!%HdAs?elD]NQ)WN!cp@_@or
%IMd6Prl"A8NfiK(?<,q-pfm*,fI,29B;ANoK0KRg?0U2Z:tI6C@EqjA6.E#>L*lu,gW3,eq'sPoW%)ec*9Q$l0?V!P^Pmd5h*8,W
%-s%sr+JD,9M6B&FN2b`jS"-C_TXC62RZ[=^;6iJ-!+C@fN@7*C.nm(.b4'JZCBm<SC#ba<231D5YXPOPq%Bt]dXuq'S^uD-cfYOa
%:RlRKRQ2hbN*<Y"@-TJZ^8U]00/b4pZ[=UG:;CNBG?H/ZbYf[&dF)[jY6gY?#A8Q4f"f,K7Q@]n:#H[O.pAAc4(LOJB4(uZKZ[Ko
%GajM+/G/Wh;]YhBQt[nNfZ\A*5L@*P(Fm]XdU2<?O!lMai*9XV].BttLi=G/HR<\059Zo+7uYq!^f.cg6Bg<-QL;W0:X(/3d#bV-
%LlCZ,7Qi2*&dQ/@@A`!!.BOb,;>VKXHeur:L;)d$#&KN9T+jJo9IQ^0@MS5dIB*Uqm*q?.V@%f,(Zo=iM&q/>E'9-!g0\<Ub#4gd
%dKD<Q8`X$GR\PB@5-lj9@"km.."($Y8l2c`E`Q:89OS6_J!%UK87?@"YH)8j7YOJ2[QH"O*ER=)-S77'`h+F5PO@-P'm4M^-[$%W
%"p4B0K<Up]5-[fNpto";#"\0ZROV+&39UdYp.ae6qdt6t`>7p%_Y\5.aV6q9n3``O>OOc>,dk)5bSKN,q`()0,4LFV]c^+QBL?`$
%;Na<!XWl.a.#GdIbG`jYMIrkWH=<#LTl/;T.gWFS-<e.2I65rR'NRY%7h:eb8]?mFUZUG,V(pu&k%g@Cq+9NYMhd*]8[kK*/CU2W
%22VkEBmBCa)(6D=l/tF-DtB1.gSl7*]MjqM!lkdPBkRZLUetfI1*/+n8q7"[a;0[-V!sdP$E@\L-"bu2DH3_c&hTRB7[VXVOHJ@=
%g+p?=\<a*<8;nYBkaF7>Kp,FN?bEd?V,Nd?;$X0X^L4:-OXGiYkUP.:R,f/8YgmECAWEL'(E;!(P;3T_QnlP`\iq/kb3Q"Z94Ger
%I6;F9rBgig=P:7M297>,8$mH]GU'/+PpJmtU_8p!mDUDm'DRN&'rP0-qI1$sXhGMZ<Rf/so#'1hQSfhmTc.k'muO'IDulPlF=qm&
%^!?Vb1sm]\<_,WNF[-`0PNpd5k[6%9onptjpO5s6`2B$]mjqC)R5P_gL;d5s401-(\!BM86S5OV[:%h+9'>(ZdHbQWIql,O3%-Vp
%mR*LGqbgq>5H2+95ugGlf'1BP+Rke';laGQWDQ@^3ZM)fj!/.7*7Tt&5G^j-6?0W&BW1bg/25iHHk:^QAMZc!@q:8Kdo!io%bH,T
%^eGdUnlm^:`I+t`'L)&l6=D7%NC,0qG15X!-?bjNh;lXU)9Fp>K]ispBdJ1*\9:rl0pS!O0Jb[drN]3[0`r)W;^<1]Jf$9Nr]oEE
%bI$?n8AFGHoIb2T-YS\A&9`4eI'"%53`.%[Dc?42s%C'2A#:BmUY#HnkR<:cO_P>Qhat5?ER=.Nm/DRj;Gri.c/(L=)UMmRQl3IK
%H20qd>S/t-VLXB*#g_qj[CAU8.Ii1A;cVk.*`[R.f<'4HN!4auMnM[3m'HQoQ7#%Jf9s!o6n12Q]&>on;KUG@AW`uK<Urh=$*`Hd
%/NQWB(&ri`?Ss)aQ@L.S0%K$]$:RlL2O5W6&sTd]W7:6!qL:i8aoic[Ope6fR0fQa[%aK%5g^s9kbBJ\Tscaj4bL6c6`&?+V';R3
%%Ys%t8tI+/nk4i#]!X8:0)$Hn<=+IQ`*#&D:;a6QCXB9bdJX.T.9]Q1!Dl_qjbg$JO'+)W<:CfP0k%XBlZ>cRXo>*qomoG40AZ`6
%Ae*?ZU<dXVB.Yf!Jpb%%5P3Il$[q[I^_4J(-kuk28N:8HDuI]J["9,ZZYA`f5pB19+,.R[`g8b)qN3hb]-lG#/'S?WB,ZH[1i,#c
%.\O2J'SCPunYS/-?Q\NBn,nA?ln=4Y02tCq*=\Tf6XRj[F_.S,-!=-rpIo(gV^I$gfKti-,?-P$">6%47H;_rMU")S0'-j/JQ9qK
%n3PtG9=-4",FtSITol,#VAgimN2r=9YQO\e_!e%KgmNRTUcUfW\IM!OimRg:=f6>pCGpQXkpM$X>a+0nOS,GKMqJ0jgFua$0%)^0
%BX[".aW)f<'[B,XSO1Au+6[%Of0oS(_H!<<;jN"Xlk1.`K*QSb<b$$h'%<`K7c4pm(s9W@^0uni_8qm@W*#(jmA1K8S]j#iKE!39
%X\j[G:"6@`U,&\R@H+1_oP)t\`<l@R14QLIX9:aapk1npE*P2fS,$t*'VA=/@aU%083q,aNT3fl<k237I).CKWl?&e%qZ`XVYW<5
%?d"%&+L]id%_]O<!;CM).YIJP]F1c<m[[SX^%3TeZ"OFdqP*4LCIg/tl!?]7BU6FlZ-D:p10NqV]3h$S7_pM>KbCl12nN4r/&/9h
%[<[ZWU8XNcle2:?lSITbY:m@]osSUkoZ%h-`/e3d$<rUV!eU!Una(boHn>gXbOTAOM!3jVD)En=0J_hsZmA9lBK'/k8,j)N%V!u;
%p3^Y%eunmqFHpYfG!_MsH7p_X1epr/N-$!WoT%p\oF#pUorEgYQM;i4;/#(q),VCu!]$SudMXSZ\qj!*oY5k?s+sa.[^\%l7nXbb
%JtIM*<Q#??mC6[X7b+;#.&=eGf0<+$CP9PX@E4g7H@Q'UcN>F0T_o!s.^G.62@9B1s.<YnFkO*_2\mO:-<!/9TlHJ]A@kAb[Y_()
%HCU4aoU?Di;O3bsdWCCJ&/q0CEK]`+d\1*o0F$i:'e/Bt8-Lu$0hgr]qZA@'O0'50AZ_/+0A2G_e1gL@E)C)"6OeP=,tX8T#6DS'
%;'J!BabBo_aRc(DeH-.hC<chTd#EG@Wg8&Gpr")Qo/N-kD:_[+=n5I(r%jLuP^Rk"8Z@Oj]6qR]qtn\Lp-u*-3KQm*<[a[***qGI
%G6j&O1t:]6I>c3*o%j=%S#?kSc1A.nbM`5-mM5Ljl+nP5:>L*?ebf3W:hj#!63QWD$U^e]Tm;@O[\4JAH4M'8H)Q)]%hq445d7/D
%@#]6#W6bi/7`i=6H;qS$JU+M4/O_\aV#(7F[oLR^f\K[e((>WFYj@?dp1b[K7BR2L:lS&QIj"6;_]'+l%2)smO;tflE7Utc@m]R=
%@XD_2:,IaRD$Pl"=X>G]N;8%m[<BnXa9<KY+F(9$.rd>J_dH;%kbm'8ZZZJSh1NKjj@s;Hb>)cGjtDP2!AubX*iDEjC#.7#B++!K
%Wtesf?l<Q#F#<k]p6%k,N8;W6Y16EYFNI-22X4.4N>sfiEEAu$q$MOJpk3%/J'rg_FA8G7/ols4,+3FZ8q&FjTU'-)J,Mdn&uu'T
%3*a>EGj?oK`.mAM/LGh=[ZqK/<3ZAKrrYpDE48BDG!q!tM@Mbj6BU32#X>[qm.E5&A\Nij<95Y"SUb(A7AuC]<&Y`H+C1ioY,$7$
%2"Go/q3'6qlN[b==JQH"?"D@1-!b_A'Se76&+W4EY6TOV;&aq[-KF$5T^_[IMj8rVPL?0uMB^LojWcS"kOi$$;72/s14QU=hbE#b
%&*'V-0B!)6_'?Lc!fpq?Sa[e<qs\=Drn5QFs3^jmjrqp*-;5L"ER#q0Rt6i>1S6gN9Na^.fk.K2i/PN"Q>"&b=/^9n4Nf%dU0'uk
%FhGLJb3H[2;'qcioI#4!G?u8[Md<r,+$cI":0>l,LV8[::)7nFO1l\AHt&6-7M(C[%Mageq:\A64l8&15109`&G[F^Y#=D62q!>q
%gK&&=hId.k;i;a1M6utFbGsJGrM59)OU/pXf:E[?EGuF^%DQ:<W`K)R)@F1!l-SAJ8=`%6e3KadO]2]"hMT>G-uY*Kk6K]+S3iHb
%VS?uml3iS(H"`Q;Bhd>jYk<o905AS5HMn?g5-]3K;NP6#/m"5Q2q!r=%@=#,A9%-8g&radGlBtE0@SXK=UV]J^#us!1^Sth<;;3H
%);!o*Y'UfV`%"K^s5&j$6XTUjO.+V<Wkih?c3ef9'H..$=*OE]-sVXM'XBT/XVh<HgQ$S:<B$+%ggWQA2&":ig#,H\1Z)W*S2n9#
%LWHRbs)a(`X>b\*VCHp![YAL*eN8=tOcX<`ilU,[2+bMR2MRrS16YdI01E9;2l$\RS&CN-#8X;],pQ+Cko6*4*0T8M%urq+*8INn
%]Gq].K6d!:TPtoF"1lp/C@R4bG`Tqr\,$g1LQT527c.+@r'93SE[J^J;4-;6N0H-!Ga2^SE2`*e/;Q>3U,5!gMk1&(Bj=7eP#)Fs
%q&873`!(F[@i0L(($1I.Z_P&a4Xkd<Mh@-\9\a,m3a>f6*"8*MLP`!*Z'fWs0Jtg*S!i5,iGG!o.W9u<NV;@l6bY2*=-u](kRp.l
%rX:fTUX4Y1-b_UG=CT,\js`oT[:logO.3[->iqVsjob9JiU(L6e<:hK4sBKd6`@QjOWkr0$bCn<kk=&t:&dN<'>"RE&Q7@F5RuD?
%?soa#g#4?5h'p#;eWb,?A)&.pdW[g,8:"N'a^/b<I#)7NJKsDQgPjdZ<3?X<kEZ5GS<Q-`4(uHZ;Y\&]M2"Ci)Ya=N9qKr)535r&
%Oo*DYjH^3X,lS."lD&6pWgeNG,SY`Ep?>W&7h3SY1%mblQoG04^XVK(;!m:j&GX0V<Ram-iq>o\7Ag7t.ueiTe]\hK7V]9J1HdPi
%q%"1B77*AD<C454/eTE1a^QAa*iM+b</EeC@!g._%itj;YXi^VeASoeON;gn?mA\.dufOGX<gMbIYC>c)W\dbhW<`[7H+)7p2,/9
%0XsngU?NNJ[Bcb"f"63pHOK+SW$DBi<u?;9]i"RC#(pZ:ImPT$hjmUil'Z5Pg3,-+h7S8MUtka@nGX0&>-=Pe/$6i)TsR&%(:J`4
%Vb*P\fa`@*q!XR6s12uW`ioF4s4iP+GAE=qYLW=s@GLm:\t@'AQW]k,B]Q/uTqbl90(mQ%#14S0Y^X]X0O#bEYQ'dVdpi`sekG?T
%jlU8;8B57:"/16N8!bTXHER"0MP-l:RPd1u2d-_U?h-#Fp$g1bDmpYW/oomsS$:(rWqm#I,Vjr/fJNGja<G;\]P@_"NBLm-PX@F)
%Fu6F;(1g!.niq:^,*CF'9oPa74@q\]<8P"q:tC8>A2S<e:_Mm!0?Lc&50OY@41[\G7,8FM"]=/-`N("gL#tg?,92n12jdFc`m[9.
%L!omd6sa'ffB0Nr3Nbp>SPS8fOaC#"<4Ah^S--fXY^XF]\8>V:"lbm"8a?l&9MjSNdKQ4c;+d9!;WlpWO8UsRO]fn,C8fm8NCZH^
%5;V']*(NWf_'=6Go+N$,jJhQ5^!Rf:f;H4DiH[$nm#i-XS-q[KQg,a<"do@eg@o<:E;[q'$0_LR`'L6#7jF7=LK]G7GDUfe<.eL<
%?V^&HFF5CE90YGE'keM>,h9S`L-.PZ)50KW3jbVBHu%:^)RY5dEf`sa"OqEKK]/sI-&;C;*oX'Goq4"(1p$VKQBCsT?c*M>^1Vo,
%iF\ftbhnUcXo[%$P$gh$o-&_`qaT2WKt@R"botb/&XkAb;c5eKO2tJ:,_'f7E:'<q*i-4so6N\B<r*jO?K+V<n`6A/$.lCLV!FH*
%DKhI]d(e\G+1UDf^s48U#Z5VHHj[XGd>8M>:hc2[Y;<278j2t&Z@aj)$KnL>[9N2PU2O-j)^go'3%VZ_1r78pW$RhEju"W^Qd46\
%k8GBg1AiJJi7=2[I)`8AG?*[U7hIq;6QA,9-2JHTK8;+EaLfqW2b57u+/3qd$X2"JTUbkk+:]o-4^,+'*OUbUMta0'33#\k2tX1/
%"<IKW/XHKAhD";_dP@+I-srhsTob-78J:m^ot_liXb>[VbQem&\lNNh%:bH_jOWI>K.njg)MkSlN\=0[_mn7"@0sVhau7#jn8Ns2
%)LS+eDXD,Q/_7P*,)K/;2d1/=!@guA(!o!uL-S%F>AiZ$a%DP7J(INHCI=eQ!7)UIES8r?n2f$b-\nF,F'dl>HKgr:K!(fPJPSAY
%Y93PIY@>?n*rBK):D,DTrJn$>(H)tJiPA]Yg/#9!.?Ie$#Eo#l+6D:]L6;o&-KcNiQ[K<35Xt\BeFj]$L*\*Nchqt(_hCs7E,3XI
%\n?7Q9E*nmX5ZJ/PclpjYr&SP[is]_THG#/%E\T;rR._e'%r'Rs%p<M)-4<i<*\P"*3lM5G<[K!*\0.\h=0o!@S^<)@MAnR'E60d
%omNT3j=C@96@a3!f=_D4[&uQqWUgFQ$jVdQ-s&c-kg2K#K5ae52&+@)ltY&$rK'Dk4Mqep^1Vo,iF-2ZHZ3aJ,UOiV#DqFi=cZ+7
%Fucg9F_B88.`N_dLUi3HaU_R;6$?QD&X]QD\kUI;1+pm5U/:%2o01[TW]"C'G/G4D?2+7l_p-/tp>FLc$*3$?lJ\!UU][;QL!Yo)
%7+qAloeq]%&N5<OQ5#!lbn*"b02`&&&\4_I$rUEgOb1bVDgk(udW&'!2`m3^;XZ`2GH$<XR*)K6N@]-!AGLrb8:Y?27c+BOfa<ej
%3_"<)Acpr2P3^XP=r'=JZ[u\TK5=fd2&&%X`g<HTWii;\jG#PUV,P[M>jW#:7dRsmY!PM,mm'=](i%`F+S)/-N<?Wk9jX!&\?D)k
%Wb[RU&1@PjV`6i<VOHdA*J>Z3UBfDO:Zr`H.IpX?LdY50?k]kYSg,QSi)+bi,1e!qR+Nt?.ER-cRe8>Hb%8\'cpj2aM(EUTbVj!o
%6fpe]BYU%=m1\5nKFYfV[%Dmto"6A19#u4^rgt-k#WhBf=fX>uU\*Kj"=$m_'i>+%Xu(+TK94XF[/oBcgb_[^cA:EkKpKYZDMXab
%./J;B&=$@\VfiUlPff&H/W"t)Gu=qd+8[oB+d%W,jK.=ZQ]c^"C'S*ET,FaVQSf`WNNUH/T,K:r>t#I@*_fuo[<ot94`f\b@8SC*
%:X2<_0)HOoIhePb7LlW$;Qk'Hn\o#Pg^Oc5S(rYR,7elJ\QHem1/&`CZpLE&WqK>K<InL`U5VoXG7\]T3)%N9L=#;3S(rQSY4VC#
%L+_2DP;@#[it=*^*%/68HKIcd_65IZKo&&WZ;JD:F"hiT^hXT`s%:glV$(]YA8E4o5n[Q;_buCC_JY$q;A)3/A/l_%U"@<B>LJ3^
%a[#1+"Lp6'JX=TB'=()Sb!tNa0E1A[WLtR6'D<l_c8fi$NmRguKT$I6OOg*,m-l"Yq&idd'Vm3'qdojj5'^$FiJ>q0JJ"l/*@WtX
%NT*GR+s$ErFu./N8\O^dhN9cnZI`mk@,:ApS>,A>aL`C6La!a'"Ppns]+N6ifuYNQmki4H#s"e$;G:qP^nfO&7k4J*@0Uct&p`_@
%3O.CV:O\LRkL"NE`CGU5%@fF^*9mSE%/I+SG#:m@*'/?",GCs(1PT9aE+lBKBhl!cR&c.06Y&T.,e0_,TOC?*rG">\59^^(\0kn5
%cK'u7K1A#h'(S5l,$7/1SF:ZD2Q1j9'W7dh0$(.)/T`MZ6SGInLWJPS@DH^o06/+sED?7''Y6MV,*&0m]Xu31o[5bS"F%c$`[:H<
%f)u'fI@&C<8a?A(?XQ@6jWaGKafJi',#)Kl'cY$E5K?`O1J"'1qlQY(_@_(jD_U,eF/2Vc.=$K^&DmAUQo4IT.B*Q5au^TDL:FN3
%!11Y+*>mb;OhN*h>AX*J"Ll+\+h?:,6P_tt_aFk;e7QeD(GAYkiJ?^]_$!i(9a]kSW;<n,1uKYneS4D?SfO[!@*malW4kR$r>7Ck
%j8rP@g--YXY*T)V$8oKU!^\uC6hop`.E/>nB"?ngbTSa=]iPn9(:KnWNE4Jb6uG[Bddt\"\(_=-@de]-s0t85W_Wdt/`>61T`]S-
%!ED"%kG2[O!NB&0+YeA<JmFF=6g4Kl]Z>@h`arLEO`VVekK(IleurKsH0L9)HDd2$Y\?7f[5/@,<aiY8jNRY<;:Ofq_kX5@:EYL%
%OBT(2RUHc83/)?/Y$o]5IE3Fbj0J,>';DZn3EV%!268!d'Q&0Ib]?6W%qb2/KG.:jSG65cicu5]$dkph,`60G:2<\rW>[iZLo-fC
%cdgh]k$2oK44FbY@AU"p1J3QbC63l'25h]U<S?H7RHKL(*ipF;n[btO0lDcPWL35NTJMHc)A2P(\u6lXDe-23P(1q'hIrn.mMedl
%SQS+d$^,LD6oG_h_G+rH,6usrM:]7jGRN7/GJh><-MQHm4Fnc[M[%WU/N@^EA&ptn6t\4\q%BRt.?`3'Did+l=L2s*XQI3=aE^=r
%AR@eJ4j(tZ3U#"H^G@Jc;i5UI]A[1.PC)eG1h&h[V--DT:Xb+;\o'>bXG^\)7Ee+8%2k>lFbe%HS`%+<hqCLJ8n4[B^H!Du*`Q$,
%H<Pl#m5$($?7e(Eh9IfFC(EMS-]p:T3:a#sTRK-o9]03;Cic%n(.LU&+T\^?Y<.O^7&[*]L6D3[>iZmC@JN2/1un8gabcHK?/lRW
%\2M1Zd'6&Tn'(&@F;/]_bWdE,*kpMsEU*!H_2?B%b*oN;$*ap8r$JZ3+YBcre_$u2,/Lmhj:N8+3uTMU(%]V26J[NA+.N?<T\l0'
%[5q5F8e2F!<gZ]Eo5kk8HEdQqN@0KZ[>BSD:dZE^;8$RudPcn>^YW2/)F>&inKN0"*L9tAQr-K+;hJsQI)=15KP3!Fq<`p.23N=L
%f&WY#V^1te:IiTsnCE/21I8*nVf%k/[0#@m&gXE&+q`MKl^'._?L8=#HI4Ku,>,_'"oV+)+VaILf768bj-eP;k?&q5G:)\_`-^6J
%:-tX\n3S)&Z,ij.[apQK$=4#>ms.X&:5DD<8u5l(;,JUqj?+^Jng$%+4u-E)1F#u[KQ3&GLpF<\E&TmqCiU&8FWoV33.HLWX*SUe
%H>TMb,C$[Q!^R97*lW!0"@k^KNi@VG@Bl5^c!a5kL-[J7Q#m`5C5@fgEm>bA#NDuSHVc\k3GJibX_%99%=78tPEi.U43s<-Hgn%n
%S5@BY#>0+nBS+VN'rN0Nk_[`!6(2?.Ae#If"HqF`3tG(RpeJhV;=fkXb=+*!T%e+2H#`rOdB@NrE>:IJh<lu%WBIcQ1*iYW<_Jc`
%L'uOg-WB4Lp=9<jC%3ah%Zp?/?^,?9mR7"m%QP'eF`=;(glXDlgph5Bg]Vi=_o=%ti)^^=^h=(K"j)fe;AG*6X$ueQYALVkBRGVX
%NF":O/L/c@TK%`Q6c\LAEMGBlB%tu7J`0l^%OeSc.HGVWkfS(^9F2"eaKo!leIVm,i_Ai+*0ib)5pL-W3-'gN7ijuUY!H;^:@L)&
%N02a3Vm_8.5G:25:ik(G?TWJl!MQH+fKP+@1d/[.gNF4-?eaS(mbQksaXde2+oF/`^W7EdLR#"I7%$N7-B9"Q8*nj3KV\()hem\K
%f]:o"j[TVaGHEY$kMt!tC<&V;`+88R06k<5'=g2prK7GNFZ9ZUJKm7+lJ3";OLlcq;VR9B.t%pXIP^rGO[JsTfRVef#"`0khe@::
%gXI;"EZ%K(9qB:6"tSQg6uZd*amu1LLaW]0TETLCI@_+hFPrOf>C3h`hgI*:U?3VX.Qn:jV(2>.,DK=c[C?+-KV[q%h/7I^f[Sc'
%[5C3\'-.:?U?71%BSWU;h6-8FC=2qmOC8YrN3,-3jo`F]k,Vq@Jt&@eJN0h)ok6`G.8LHI`V&QmE=#4o1Vqno1IlHrIVg7H/^ku+
%ac#FN-Sj3SasAa&G(n,.r-J2s)C1eng6]DjAr5`?T%jLk\En!Ee33->8Q\Er`[/Q/BG9/1%i\"+afjOQn5`C4*<NiUbfc\N^u(nl
%Yq8\]BluDA,tW&\Z@bPsQr"L:X!(A7<);m(**%<&&3@,J^H=(s45-i'$1Y%)fi^\_K9:L9CI]YqYs_T'XI<VW7]!O&TL]kW-8\G;
%biIh-*na92=mgGm[.<_9/kC_.=/']7Z0+rAaCe>D+4[$NcC!)8%1a,Ag6:9t)5LlPVIX1^VZUCjn]jqIJES[u74Ef,U7+/1g^EH8
%gO)AVR/40-\H?hRDMA6_g"2"Jm$,oqYQf)+E.4^YB2-K2\36mc53\4?N-Z.uicLSk#fJ&+=+o1(<nUHI-T8nS;"rns0Zom@;`dP+
%\dSffe]eq<Sec^L9=kBS7'Y!K[i6A0N80V"HdU45iX`:ZUi*@s!s^Z6qOks@0OL<fR3bEH4fa51.N)E>r\R%)YRiI.#L[&6omdVq
%o:B.7$qYnM6@@/4r,tHR)Tf[6CO75@2U1<qAn^o%cjrZ*PGUSOE)Q"-:Wt!I$\S54cE)/\Xl4kPf"0[,c9]M/lVUcOEr>LhOFCZ_
%CKs3]%Q;/Zn???^T)@;/FBgV,TTlu//eh&`&9GGfpu0[hZ6R<`bc)>L$-@SQkL.f/:_Fp?:X(+>l:[a8L*FA>"@5Ne:<'hL_\/[\
%DY)Tl%hkGfKA.VDQY]gT#B_$s7!QdD,"dp'^MastPJhdeiZQCl=k!/9L.DT@/nu?Q5q,?C/BD9\;HZZOqCr:RNjd'sL7U&]HY<#m
%OR))h6!3]?+Us]T8nH)Ca^QQuEGYb'ol)dE11\edbblV5S8qK]#Y1]o8[)rM#Z%LqN,?<6,t%d^B"&^#*]CP6ZWmZ%qh.X_W3@,D
%"6&7!;nYd@6s@Jt`.!?"FB)Nl+dnDHcI4_:j@*X)EXpN+?b5q8(8RLP]Q^<2BsD$_&jfqa^YSBu@H8Kbg0R>>hkMQG*efZTK0k$N
%-WSZrUo<(:+dPB0S`V=R&0FBDaNcmWTeK'g&N^!5A5>RT!c,4t:TPeD[9TI>ig\)f[i6A(2Rs'r[M=lF2pcSY`[6c+fuf"ck#3k"
%b-CfLW`"?YJ!6[^?['Bh?gj@F2$Y/.c]*ZcF:0!IfOD!\"aK:_jkSM.1IX>85&C=^F#reB-=s!fDmUZPk?>`[MRMXehD.ioMYmUs
%Qp<ErFn3Lp[6lt&3%eqNiipl(TZC%=q=7@GEkp;"MS+&F2E>Pr37t#JXE"cW3msA/ro2E<iIGJK=;K"*g6&'?8dcujjO=Y`F+H5:
%_SgXS4:3p6_.YibA$W//YW7s=jf'Eq,33N=68+n5c-@4K(6$t";m(Y\HWD)qYe%50ES!GV.!Ym88UpdN,g=s_,dTdc@'-&2%1rS:
%>5$Gc`*oLG7fseASt(I5eSADVk^2I$gNhA7g6:8uVYR@`Wj87t<6Z6@;8cM5+Wk6u[K/jZD3C!=AN5Jf2^WT'7)>$k/oh3V\3,]Y
%76!G@F@T*+(T(tQ68(J(D1]CY@:PLJnGDN.^^+5tb1F.'_dH'`K-Hlof1Zh[*H.4!,0#."C=tnYZf7VBlZq1fprL^<g4;475Hf\D
%Uc*AF&14iG<'MiUl$B59)g^(+mD80CgQ]bd;CA[;;:XLTTd\Co-TORDQ:`An6JXXi1A3E6K7kJkN.*]"LPC1RgQ2lf^'DVsm&33O
%0&-11CQNYGl(*!h1F;bQp"+'%Nmj`nL[9l7JjUL4-.]F=Zp#)u+bU=KTL4$>d6Tmt>)cTFr2A`g5\^P`Yj?*Q]M",'`M?NkH%@'F
%lmrBjHFr-E@T.Vmqo^mn('(5MdSZJ3qaRXKQN=H=A-s??"uSu<43^&c86A4K^2^PrG`L+.g4;47],l&7K^$ZWKA6AgW$3mcY>*<2
%H+li7_<N[9+Q7MWgRIQl:m8=+l5B7fG!c=,9k!6s[jFj1=$%iT4>1FSEjD0%:#J(^.$V8.O6l!UB?^nkS(*)@o9NV$Z94X'+*t?8
%gd.c94eUHG?l+t(/Eo<$U=KesA5]qU!1ej8s4ZSYg>jkW`arMO!C$.NHoZ5o)8T2"NGB(YH;<rdgh^eI:O[.(OI`%#VJS^q\EQl'
%4[K`8G_F:#Lkp[b`95j0K4I:X@0#\0Le<-%jU\m(EEk[/%N=7@lH-l&=N<9O+U[g!_;3Ho7rf,hD'>"47i$;cVqSX(2HXX.`035-
%QAWrH+bJAH.^G1&I%`Jn.!QX?j=sH%S:`dPq]7T1.FaPSE#aqj\:c9Cf`\FNB2,?gQp'olOX2snId1*ed")9b&Q(s2":YZ0-fKHh
%p*rn=DM0h1=^p621R(=o#`)2h,95'4:_6rf6W]hSO97t\e/j_XKhn8kDRHCV.D9e9C(3;:Zr0PO=]S\?d"rBc8`!p=nX3B71msD!
%6`=GWlGe,'TnHb<(Gu`FYbms6MUY=RWX+cGa;J7]YXDeYA"2=mGF7%4*o*>uW,qO>>;pf5AN8o;U*YGIT3QPYX[5jN>+jFB5`!'P
%X^#lb8ka?<aE^=rV4l@7\GlmlRiI;EFZ:S8E=J)FH\/0S@:PLJn7u37B^,h\*_BP>mrrjr^D%gUfFUJ0EI!K>kB$teYj5.DY'/17
%cZW1W:o%I"8)XFtD@hRC*6b*<4MqeWl&9J*]A6n);gWJ!b7M(mMX9?@-boo2f%%K:X@cnia;:qC4cJ>B)EMNSokK:.1udArWEi?[
%!]glALmf5\N>gfY_utIB,t&tlYqJAs3?F.5K3)90M596lj[t^u_*CD'l*ekMo#OT[+Hcuq>.S5R2!CdUK:_A@)Br9SHlEPUK5=Y5
%,rd#cWu>?%iCoM"]a$F5r!d1WVqGZtPBplk%L"i(hufHX9W-p(""1D@6OuE#CBI_%OVf02'\<g^W5)K8e7f,r(5)c1;@\g$H*e/O
%2.9%DRhSJp+<B\ad1@38FCM0$T)9r.cD)iai:J>i7FVm^ml+(G:EWeh(.:%cIH=PP$>KjS!@-8)Beql';Xotk+p5+q_#Rgl<Au<T
%nC6H>,8rlpK$<Pfg/HmnhDmF<nUZSP<m[A>b.:+9`RcBIHd_:diJR\,0&hl'<!B$u[VLZEZ1j0FLLaNXU$._Wl1=4;Rn-O?`u3A,
%l">'!Xc.ful+uSeHa->!ct_go<%8uk%\+3ET]>g$A3Y&S'n$^0D%]4sjbTE01\kXm"n6\"U`:R'nuYLq[qA6=NYEZXYmo!77/0gE
%`-/IMq+^.F8+%H%YnmW?06'`_%1fT`FT('ZquE&=$+G(_#RJC>.D(RI-A],IC$.=:bWa"0Eeo[qNWbJp&5W3k.O"/fq[n[tFK1k`
%DRLq-8\O`jlX&i68fkYJY?rk_jZo33JhC(jjtr=a<gab<a5oa,LbJoPn5_Nn&i2$Y;B+SNm'slfn6JNk:\QpJLdYQ1<DI?hEu^=l
%4--t#)>A(2gt%gkAH<9#ZoiUD&sK&FrAqIB64t7dj$@#8Lld3CI'X*TD>0ha_@`W>"5u9&.%q?%R=7CFdVmHI2ffBVV0<FFd3*:X
%Arl\4M$m<P!\uBaARfKp#5j:t]38[ZPql]]M.,N%*An@E[DYA?*oW48g4hDd=%hoUST^KZ6g_^lh)u=3]-V:W@B6=8Keu_.75ZE!
%"!bta%KTW!%mncB'eKc7)F>Jdje?o@%SIP%Td"9OMTX"s5^!U;#^'+:S[CKuCf1dEO*NIZ,AT]=X>8#6B]r]f&<sD!MM9I6Y8,Fb
%%8&`%U7G,7,M*M"T=)o.-?gSm9C7V1*T9!FbEG:7488igE=#4o1I5g?fJ%>AIa-#;f5[K;aQ%g25]`@X.$#,-+/XKEW6(f;[(HJN
%;Tfbqia]m%M3U36"!&2J$WO#A8'P:Sgp#'/a3AN]oW42141BAgTTlOG/;E:K]>+aQShq#Be/2RiiQRKTjF+K\q*7eVceS9J0ORuF
%Mk#Qs?,d?p=HE7=a<@,U]%8_h&a?j(\!q4M2Q:mq9qYUdY6OR5)lup8n'Hpo%ehe(IL9T26^3KIkqpU37j,@;:n"+hh[k(.29op"
%EtHB?l'Z@$VW5E9QZ9lJ_^Zk*T'9Ca_o&AE@+J?ZjmPk\hPLS`#;)CE:WA\g3a.61-ms)'$=4iqZ<i[lC,k.LgH7J$EEkTfM'dJ7
%`%On=TiCEl`[/RR[g?5*a+f_'nnSW\XG.pH"lS2,rJi',+cqcjUQJ1\R`N[BMh<F_e=ri+h%8grM^RWe)3Z6k6"E^1n`E@gBR98-
%-D?c$f-[sG*Y(*=#HN"r1^f%.L.Z^'IG\_fOBG.h*d8`p8@&D9?.0tfHPU5bFm\*42VU[f5TH)<M'DF^e6.Q3(+"SPPlTnS:2[Pp
%*#qie<c&9k>m8dta[/]lFeJp58Kk#hfl"l0NlYJPSE^u,&>p2lMtAjEV1AJENgb`t.B+9o_gGC&bK)u)S&R<<+c:$)hemY*f[Ltt
%rj'T0>U#$EVVrFhJLAW,EK+&d:^"%[/m@]0WB2q<Z2,BW-WJP]jJO/q^30FEgjqF;q]7S;GX!3hO@EWnE8ql/dQ)B#VkIa`j<"6u
%ZI`;M&u@.j^_UpeC4W,fQ(5^A65JYh<&M`ZS>4T\EsUV:&OFd<4?;e*NCM)<DJC5U@AWEY"*+ah01QL:"*,9M@1@MHN&eT#mP(oF
%4h1GjRo0SjM<.6j-,UheqaNZI=H>+7?0YQ[aC/<\Qmo0YX"#W]Y_:)uFLB"4eu,G.+:]o-4dt<7j/>O8]l]6+kbU_ACjO\%@SNgb
%\c$YT1-i`;o6k!&.'C'"&B@oO2$bUjqmO_3MR<#VffC(?eAGsF`%E['nqQbcGRpB3cZSL8[[S9A2R*Lbe12X]7$Fi!W4&q3mY+C]
%k09i2?8D]A/,UUmV'&6?K4IKfe=>gS0]P<$/oi"rEVXG`7:b!_OM2\pUt7sD+?-GhdW\LV1u)meEY!Un_,:kB`#"LqoQufTpfZtG
%qVIp<5(:2HZ/O!%+$'q?7A"`04*Y)]%WktA4\?fD7u`Q*IamE*n#*W6*[WeQ#Ih,`f""@XF4+<Kh`$FZaSMV2`@bUPno`kjJ4$^i
%c1+Ft-A9<%3VnI2c5kA43s\>f:P'1D.-$Yl'd_gq+&`d.$oU%[Fr2o::JPa5&1@aBQIs0_/q@A5($!rG-,J1>,2NT"/rS;#>8Y5F
%9Sp>?bp89Xp7sU`!SMIF[bdfJ1VXlj#eqM-CH"?A.%rTna>HlpM9GgYN#9t-l4HENN$Xm&q51dd,0d&oQP"LM*Iq98!`M_1lrNES
%'\BTWko^u8V)8lEQuX'ONYM&0XFogI8Dp=e3'"+sb4.hkmi;><)]AImRjup5M0MRS,\No:OR/g,=*J*WOOLW[5Sa?lYLmf;X.o$t
%NflcNs+-8q@bhr_&/&&PkO%468A@<eh.f`5;nBO:Fk895[77'\#[]#>.(8RQJ%ou+aKni^da.o[d^(2GbZDDe21lDs&",!.5h`pm
%0cJ.3TZ</^B=Ag$*]CEM?MW7tCH%Dk6gr=C7MdBh:P%RRl%N7T2&@^e3tHqB'M5R`I5<5@FJKnni^+,B/Xnc7*$llG`nbbA,kBBO
%EaHB2T)0l-`ZZ5'ig&!ClFLbhD\+OK?b%@m]rMHcSX&Nj?4Xji-%Rlb9EV[Z6kap97?k#<FR5V>90*Y(G]_o@Yc49&2dCpZ@"q3:
%S'u(`ZTb2AR3U0T1;+K,*O2u#?f4abCK>Z*,fhD"]?0R8Sdp!Z:$3jPbGUWdLMi^37Q;MP'#_kQ`XXHI=YJ;78DqIUj#X<uC/97V
%HKXda*O6o_KRC?ibQ7Bl*lo8dp-G;Ve/S.*JI,Db18ifO!))Z<addjm%C<nL1N,U,/*ug(No?dWUHRj9keZ#W4(OI0>VcX.id($>
%\kj*<b,FGcS&IKWNLL1DD9(i_i<C?:lDh007]cg]W-Ld#AQM52V(6>$W$.BAcPJMk+mF@9[i6A82Rs(%r:6L\9U4t@=nU6bkW54F
%f9fu?:R2'q_0DT7P/#W5+A<%j:5oZG%G)T-m)pPr+HFXZL>i8h]]."4PX)8#\:g[HRG_t-f\#7+r7XJn'p8W>D-CH#UMu:1`8PYc
%RO('c@Tu(gPgWdb5qcN]WY$SU+UWMFk,BASUQQ?ZiO]bg'r-MeVO)(#68+n7c#5O'9Pe_[DKQg(2GoFpIcks?0,$TJW\s/+99Fnb
%l$hb/\/&lAS't-L_>6Uf5j-PR;8,df3IScS;>3Gu:X3,a%Q:9kX0r4'-pHjM.YS2DhpI8`9peUSD=i-\<+J]Oa:I1JFHF]OL$s)p
%)N'H%]uYIi`g+7CNAs>TQR@QiBH^^B'&iuH"F%c$`[:H<pK(Wq"iJ?rHnOu3s1V?`q(:8$:l9!!9DX#h!I)OW%MG'3licopL^Qa`
%\W!&23%k(L1r3qkaMH5oQ5o&,2<^lXjofnGM`E*XjS,"s=IAB"f<WVQ<4Vh=d@l-VJ:co7"F"E_#mEK?Qk#;POF"8#C06U$^0]k1
%`,VXB6(:?lHZDj@mJXPJpcI+2GJh><-MQGbh^;<R`50>8YcuZ;%V1YQOh&R+]ht)O"t6cB&g@'j)bMU!X._qdc\n<K!io"?'T!oC
%@iTLinmArI,p[ob"F%c$`[:H<f+t*S,(g"HAC`n,fRTGbP?HL:eGF5+o]uF7"fCF*&=JF*qCTE!MGSum8Ss+_9#hAbK9!%^-AAtQ
%km(1<bJn7!,FeHTo>Vf=:1@ko]>&(PN<9OuU32j+e"J%7M6Nk["0+n+!%GLS!%*8X1_82-m"NoPfa()X[gfJr-\!.'3,nE8SC*-`
%^HJLNbV;IWn*HHiJlFp*\u&6qj2R1@'KW<!8@_\Bl\la&dFU[)Jr#?cLC1#f[$sW&P`+$\3$:9qPYA(@bE7s0Wd[2:?91kWb8T'P
%2jlVma>=$0/XV9gZ;HZFO0V_'*X_3uM$gX+ouUWN-\UQc13_g$D?qu)'i3+@*1%0V6aI+oSm4So[!I^)Li4<'TJ^h-(qD$/p?SJo
%9(CN_pP!'HihH[QL%+d>[-hR[$,#(c)/m/=EoLeh\/((ch;gKTmQusE37OfY7h..SpjV&/##W>%"AcqQga;dRf+qhT'2I3`X^gNk
%KZf4R*Dq$NnXLK*i4O5?Y*T#S+SfT1'BNta#H?5>4k(Ii@G1=H9<PF)NZ&%#CbI^s+YKH_D`@<i.CCP4p0g4K6N;lS['%LOOUDft
%47G4G/^e\bU<!OFOYaH.+Q3G@4^tr?iaL4*7;bIN/75Rc%7i):a<AErAj7gY^0Nb4h9>CX;X^.07Y(JBJpLj^D*o'0%`P7Njj/JB
%>eOk0e;FRZ(g9r(5Va:g[>X@uBdd]@`^T;\**;u_1rtgEaMG>%8g$&F+mpPDTJaBL;fYZ_\IcGXp*GRXT`W</E*6K;8Od7p:$*_K
%4/1U]#l2UQP&h,Lk*ibf2jE<*o-/B$N[oMgg,5bbPCmd(IV(Mk+mF>#\/QJI2Rs(-p._2,WH_<4`2A>dGSC>mkQ&QOLgDu,9HZ][
%L3<fAH`l,+?4Bba<5c:6m6DYW+-`HYq;k^=j:J`QY$i&jkuZ*^=f]HV-M:csec;[[`DG>8:dMi'LE]UsLCMCfAU,.O"=@*]O/e$$
%L@F&'_XG"g8a&gZW#^]3RXU;Gi[A2AFlX*M!WS!4/.jM,9lIL&9PeGSDG?`cTbN]Q-bNN&)%P@&>bflgOU5^DC*Tq.$rrrsj>\qd
%FM+P5R]^fCPrH`PD*p34e\d,N[(7TuWM*oX;NA:b%?dl@HDf_1D,Ye#CWipbQ7o3=dE59AP!KB:bXH,!Vs)Pi$7OktQV-hB3J^qi
%+G#ZQ@C:^+LYRG?W:W5d=b#Nd:MlZkF,Xm:6<n`(hekt#N7?+JSVh[!ajr_N]KZ!BE%"VS_MZrB85P>@ohd%1dH3'\?QC>G',(8e
%c9:P?]kkH^*JhV=mm/2l[3q=!;]Yh@7!P<WoQE=B)Q>m04Zd%')U=j-Zq0Z[NCjUqPgs\N`dtc(ispO5=le?rM#/:u;4*l.'p6oB
%,'T]b9*X9eMR&!q3VYET?Gqh=&2sY<GT(nj8FF<t/VIXi[.USL8N7Db:"X1<W)i^m8ORj,'>!5`+>J'`XeLX:V]g)N7n;nG*0VBL
%7V(7g?_.sp*T:kn`[(3)l.Y4"U#Wr04^#0MJ9)+dU]`i"cTDpQ.[j656%]kY?":Yu>K%5@'6`PnA4#V@Jm=)FTf<Y6MqikCY4VC#
%9H@KKO]qn,H5PZ4gZ*1-)bDF@)LCO:m_Q*[=:r=mO"hLC4+3P;.Za*L^J#63j=/q'poUb0`S&HXq+[>^*.5YY\if)KFs%:<^4o6k
%QMBR`6.=TN2(g'?--gG<4%sI*%rQ5%RO&;,3helJ_4er)"bRG&<!Q83,P8="D0I"P9g"FEHE!H]]cG,CE.&aqUZ[_#&BCXGf[-X:
%*D[/V+RqdAitC>ig&uW;_o=%ti7A_G&"LMkB`/eES8p#?`g5t^f>Cu3'a*AKL1_.U$F;c]m/QBqd0'EUlO]]B7I<>[<r*jO`Vo91
%EobeAK+``Q=<c2d9[DEQ-B-ZB>P#Ce$6%olNC"#TWRo*T,r?(6$ZIOo@>--6!2V)HQOTZ27+'^uV]jPn@ad?u%`E@`mm/IIEr#:e
%.]TADCKs3SpIoNb4D\hS%t;&#E+mYgo<i6./9L_L..YB9Nu-SR`)j)dD`fYKopkJS;:m!b-qEn$4UpGDftJn5gB^;\cOGW7"D(AE
%]b_&^\84u.de1h%2tWW&gk/a6"Xnq4T-/Z`C;!;rUAQoSkM_r^2<!C#qYC:.A7Z4dHr)Co$Pf1T*M36.U:)3a<r*jOc38Fq*HDOF
%U8HV])BrJ]oQE=:RSeEPCWh5ZH-sq25j&i:,4#V"--1GfUu!3q&h9+L$^/;`"2/e$A^0jl)J4uhnDk(tEVZ(B$FA\fpF@JtcM%\G
%'/qNel$Fbe)]gmq\Hfmaar6W\$3=2A!sTtK^2F_V+`9#6(nPbZod8*"gtbK*G=jWo8E:3hh)>^d#M+gaJN0TMok6`QU8O=9D4.S)
%#ta#1]A:hT7WK#OJ!h_s1WW`7e]tYmGI0_o!!^$#LpSB::lpe1la2Ac=6i]NL=!SJ_P9inK(`pEd"6qI]')Tn28UMr\T%rG-aX3J
%L51a_m_LP@c@EJ0M/!Hu$iYRLMj]+E2Mbe-r69c$_LdAg8d;s?&1"]Ak0Wdod'=XHS;0),oK?kRQM)t-XWW.B?GdDm3k5"QL5-/5
%p&he-[fdU!G;6r+L!"[f10*6R'!9s2BX+7t:SQed>'^TIc9jATbNI9gNO!HUqW5hmFtn#-]5\.jHn#TWn?B1>4o",*$ri.KN<0Pe
%:p$rlZQ?W4*$.\7-4]QMX9&QN/o9aJ@E;Uni3\,0YWgPq[0(F$Qc;`=$5L+)l"t1VZApJWDH&qUNRkQ&m=pCQ:$odaY<&[<dAjU_
%&S3"d*Uc=]FB4(ffd_Kk-(QoE;DJE=5VGTYpR6NJNagp$H#iqs]m"8*HqCW]hAc;QeB<@okX42[O"um7:`quIYhmU.eKZ#<Or-bK
%rq=VPYp(uEs8Ffpdktc&\=1m%3ib"\00=Z/M9CbaMDUiL'Sd^]M4D)76t-%/QOnWMlejC?L9\]\`r"5.CIIc,NSJAjkM,\YfWDqM
%LCRqleKndE:la<kCtBBbV;)-Of_3I>Gj\]]?&C^?h"e-l1a"6K(PcK4fu[L2KO.9+?le#+rST*l0j]="D'Hnb63J6l=lej-."%ej
%E\,[j!`Y_]A0%e5iLlO#F\E5o56[O2<d8Th@_8^WBLO%Ar8tsu"<q-r.e4dq#eO`gc5=!ka'^n8;#N+$(Oi!I,gQ]iaAJhAbgE/4
%Rq*4M?kT\W@"Ht$2IjE-%_ONSQf]DKbIWE4lmbW&:N:VTifnHM)YDH18$eq(3B%5-p)L2OeH,)^=f]$M`01F3'&Z^u,_f'^lN8tU
%.Bsg1oMPmn(0eN\M@H^LBa:nD=k-?1J'#:YdL,?j^%c1KikEG3m=K4h-LNlt41]F>.5Yh)]U:5X>h;Oe%j3gp;dM1Q!\9-nTi?f[
%PU[iUp2?:M9j6)%>FL2OeX*R'(arf7b"?*j&11DgDjAC:8L:H^]A+:AQM*LCHXagAOZ6\\-iE!oVhPOkOA??49)pQgVuhZ^<a1.9
%W<;>?hQMMb_rQ-#3tU.pl-mpS0_T.lOcMJ!:A:ep6;mQ"E#1XSf]!t42%;,s:MekJ5a0FskATYf!\6nH#O'NG*T;\W-l1XL#Z5$#
%Q&fSpX:lE<jMa-8c+[-tH;H:I4)&IUA`0hBRPdX)h>KD=h8iRJqbVdr.hgL2;A]VmC<3:72AEK)<Fq\Y4SV0N1T(G)e6.]^W9.^'
%bu5/^G3tI$&[oiN"T*+P2*@U@",%E<[7Q0(DX6(1G_TVS*^fmODp/9s&MZS%mBi65n6d9aL09?jl/%TD<&IsFDnlpao4D%Gqcs]R
%pG>P/QKFmFCDmtQmE#Z-fX!ncN>b,H+?OeiSKVf`D^0DinS7=9qTs#I7gft,Wk+e1gB^7q(aWsoJ_(I^Nn61lEZimJG-E4Y5]##Y
%iu8I&+h]j39o4R42bV)Rj6YVTkD)N@O4!s>%hel:;n6B5,hn]JfSU"E\MqT)%sHdS0IioU1!$H<h-q1&&D8Kak^h_%Z<$@f;NTJG
%,7J+leKVCF]jikUA#FCGQjme'H5ktlq\#UI/*c[HQ%&/A4/rJp,W!N1<u0,MW_14/R84Nj%[!3I>qB-mU*IiKd\p,.BM]$s-Oko1
%>>)\1K;eKSmnU\TL+VgJ=ImOJrSo!^\,Ym2s7UC2f0B8n^WJe@@f8N=qj7?IO.*e'(oIedlB70LD(<bE]VZSg<o8J26Wiq&_OAj'
%g&(^u!T0a$q!DF^9);6sj@BiK/!D)#@@m7r<6u)Ve""k<Q.S'mejoB2X84=D?i7$b.XVW]rp@Jtiua^/SIY$oiEuWIkIa)HA)8DJ
%s,shZLNYU6,H30&eo;7i#8psOn>ZMViRcgEMY/fB>4a!3RQ+FIA/uApMmiSr1aS$An@l'rX!ZFs^(/eu^4.Tj'6?*^;bD0DgLMec
%1@-B>o.dg/)<"a0NOPt:'n"O*F+fL#6_>DB#dq%^$.]uW'm8RXU@bk]kfT93n:1I9_?]3O5`IY"0,UJO:G?IV8c7'q%f=nGKb0gd
%PNYr^[?REJT9P&<%XS'cOM2r6.P;o).DP2H)+l4t<2kMNqB=f"dtH>oO:,:3HLB7FafH_QDPjq?TYDUf9#7,!JK*-<J=e.X#.4,%
%5p-e=PGD`3errif6KB)T-@`-Tr=tn:4toV`(/N<nj&V>RD`$FMU@P'imcSP7X"nliDZ`IfmpA]VdtBYpQcg)?[W+#Zn<Pu`$.,`%
%<s?]lo1YEVnbi4^V1]@Q;e;+I0aGX>#$F9aF^<ZintI'P?<J1e<FP@`d0?N5;_[;*51Hl6\UO,#\et8t_$+qXBs#s&<fIl:?"-E)
%P'_LDk1s!Q%DPL0`#=7HFATjrkR8d&^8_O8M?m@U-Fas`M4X-S8"<fd%ggi+"(b`6^,"%jKln&ueEKors!U+\U>OK,pAIVjT@gC;
%XQjCFBjq%qXjJm=n\40FOb?k+jo`)Emp?F32QX;gKhk(K1'2(p%l.\s*oJuafrc53K:,p[&6l/Qofk-#LfI8T,tpT6]'CP9S9f(/
%^53ZE!b[2/[@`Ohiqo&ThQ@-$R%uW65"pm?PaX:L%/\?%S$o<oFa6XW>&m:2`&.ln3<nm:CS:OCXTr'iP)H2iZDo7`$oH3gN.X:G
%&cRmMVb*VW,9=)A4&gEHH-H\#<eiWp^2&\_8P;&g2ta)!&'WJ5]N"8$f[:#2MZqnB.ntj4kuGK>mPMe\+])YY]DfH7\7R04]c6?u
%"-Imb9;"n>AHTeH]5/V=L6BD>M]_O[h^!U3:-S;i2ismglc(*tfSMidW-TusNCiNbfM;9lnqACuYBC@3rr/bLlP9gR9r9/l\tZ45
%*r#P23I,nI\pjqG5JjfMR74i>.H(r(#>]EOJ:fI6WP0CU[!b@AY4fAeaEFhfK".buAp<Ju!H0&hVJeP6qP;dZ*`;a/Vm,RU\'`on
%\6*P'+6&c?cb,WZ!M,kb*8,f,VWio!hZ,]"RAGH?3VmKM3KlUdh]uHBM0^@gBEu6<&(MDJ.RtS.*;E,tOuh6#P?TcT_F)0f/dN1^
%$QULmm3g9NG2:\1o[qiW\WkVrF8`t<GP.kelgRQO-.&&jB3-TkE=;DYQd>u[O2<Xd`OaFh6[VN$`3qjK@*uedSgdo=\_?=%_57OI
%pM><$O^H70JtJnc4lLUR-W^uJ"KLgWq)k'1po"$MnG)@_Ps6RBi[TZ6<2$oS8U/T<;'tUU5(n>s.RPuRK%%5qAn/FV>a'ho?2A<R
%29GEq_4@dXj_2T-n!]C,'Tu>^qj.@J0h9dN"n4/1A@#(i'q:.@kjVsXXuGU@(I.F$Rb;e"D\B3U)Mlfr8P&UL6gI]76kSCMC:DrG
%d2\;lnk?Jt4X>DaRP53GXV)I>?j5OD8sSS\'ZuVS'=(4U6i"0PaMXaY<;Ga)9"d,53(hoC7LVQ9K[p<m<7D4?lUWp?[G@sjA(Iad
%I?X/W[rFb_oFA5<@m5n(R9p%<?m+T%GN"*R_mJHchp/"rS+7l+fa=;a;e`h^o7g_-T3R'0&;b_8)D1>Xk$.Kh9G!f$HFLeo"ZrZm
%n:98@E*nk]boF]58/g,b1<9*Mi9(AC,Eb1srf%A!,tm2`K`_Tm=u5tiDAkb0_F*uFi=jZc/?2\dF)Tj50T7?jKDr%M@80=4_W\NJ
%oPO>V"@#W?OsqOu])%lWZtMed-p(G+%VK7>1c>>8E%4/G&jE#0>O+WDfQ^Sr`$ZXI=H:J[FTh!<Tqp3:$]hpD0BFYAdb%Po7%l)t
%*-SLIe,uUlD.LaPh%]51NAX2;U:j.n^bk_,pr[/>ZidXVgGna82\fS%])Af,F3Yb1iS^:?hDBD$"NHY4'UV$5i^,@V`,Thd*Yge`
%gniVN^"RDr-K#QD<,lhB87k99R@9nf2q&O50YJ^&F@.,h6hscsIjs@)fO`UIM5330cEYn=Zn1e3a]\quZsJSO5tdu%i[Nh"dkinN
%l^oH]Dr?\9:jqP+6u*LjfVb-(c&B_Z;2DCYejPR_>OFl>gZjY^!be@5T'5":,IKKNS!2p?U,ijJi),!+/A+m<^D-0o*?B>gHrm%k
%N-l=,9.Nb38b*^;df=$]KE3>i<Q,pA;o7:L^=EqZ"0OV/QCX]S6(NMBXZY8C3nN@hnHB5lp::#Hi"NF"$TWT#E<"3l:XUZF1V@?i
%Zfu-9r@<`4-hSu#!H3%dmQMV"$ZVX1!`(W=eI`QZ8rjke[R`@Ebu;D*oEI!66>;`p;l[2H6q+'aZi]?c]8gD<kXaS2">1$72:+nm
%)D#&)GU/n83+fmSg":F_a!7J6SNb>6>o>FgXg9ll0JeO9:qje;q+h<h\41#k+N4R_6JOA#`@jep2"QE%5sR@HC#<^,HY:&=>h=eQ
%5Z('%OhV`>8ZD51Dk.8335bEb"m$]NVh@i.DPB2"r!CP]7-74G'$?so(RG;C\Ogi.i5^j0E="`1]Ub+XV%H"a[[Itc?gpjkg,\=g
%PnY68$E$_pX7NLoM8N2XLLf/T$!sC[ha=YgB7%_8.3;o$Ee999K@<c9gCpg6Zm%gscr[$"C[KV$WE#Bn)^r%;W.rgr,OcK<R7D94
%7PjDYXjNE/UV?(ZE+g0&[3JF'b$IsW_T2O_8#E^W'brLJmpF5N?A9T3890)9KWB!sor=U+pKu5dhGWk6PYVsQB7\[<Vh@k4rc*?H
%Ll4qtVqDmn,Xc^-qnr79PC4$A67;7o`#>uL-#XFQpF>\WKVSXTT?,'UKO5n==Nl+,;Wp!Km`ICum%*FEs+qK!2P&]ZD)A+n(FG6B
%Rn5q)$_*/'-QJ;3nsT%_E#j:]<jc^.cUssj%(o#lb3E;%lT8]RItFQ>@_R=@i"M:WKcM4?pfr.!5P3G5!tocfg>4VAr(2BZUOM>K
%i*&X6^-/M>&/kMp4$\m$DYVqc3BH4eY85MOf1<ZGG6+?2fO4@d*ZP;P:$V>-:kWeJejG*o8b`;ife^EG9We.i_YYVC1;doEI`i@k
%342AXVPjL6?]#O>\P=4J5&ko^,;"AY$C8]MCV`&hC>q[0g2n`Cg!BmVmHXM3E8:n`AS<tBH&bio,KQb)EF1$6EBQgB/hdFgdpW-=
%n;4OUO%LhhE2Qk-YAA!Rl2qT;G1"%*Yh#(E4lN9%\=Gi1]WJ#n<"ei`Hoi)52]>k4mE<m(4<h=naA:sQnW`O"ePr46PnaAn/%p7K
%acpUH3,0]\MVTZ!Y7V^D#Na5)0."8H@>::JaSF&]0="dS79#p_2((VM?SrlAUR:t7KR\<:rq?'#O5bEaP:c2)p1t&7K3t;"mW]H!
%9G"lSjcMJ9RKt/QTCk7GK+O?)f:J0!T7V;RL3/86&DLc%6ShE[j-pj?\1U00\onCn[*R=>?1884MgLDL0qjEPl&Cq%@__e[UZo5f
%T2mB(7Si.kN(#"0c:K3q%$D+&cVg%M]3q#qKrJCKK@hgA3Y_=pFcCP'&Gj">O_^8=[(<lYMk)S==c^C>(6Ge@9ZCUbB^($%.%F,b
%1r9QH<5tM!=:Uu^lU@Q7%$H2"`%1F/LksR-]sNEr<E;7r#RKuadVrb)TRf)I)C0HLs%YjE1l?X=etrHK[DQ*>NJZU\VaO^@*FpS%
%QfN7>:jcu?b/0g<3r5dtej(qlO#`c<)bMADE%"&iqg-F-C$Qs#KO3WEC62-,mbTD&#@Z&p(p-NM>"c9PmPhEU6$X/$Z=1g2XNc`J
%P6fcWd5)%#0HnB>oHk%NL8rL@3b](4X/rkJJ?WZ6$cZ%P?T=#``*$L::-h*"&bj7Pcd"4%XftWpfY1`1FCrUX*C2J*%TLMfNF5D!
%^X@rrM#5%;WhJ;RKB>_riXR69ZKAt)i[DJoE4^dH[7]YZ4gseGJpq)ApGQ&I!E*?,EG9rE6/tDYTkc:j=C#V`Y>3UD&Ip(:P4#ga
%Tf[4aBXqIRn`lV:&pGJ,.s3un+t*Yc\-+Bb]\4YWF\`6d5sI>dH]4:)!Kq8Aj-erSME#^@#6Y&o4]3/qCa#GQP=/Uo6AIs?&bB!6
%6#trdHGgh;**SI4%<,r>iioqW/S)?&+fT5tF9VX$../hHT>l$VY7#c[+K`na^"oC'hM:\(d>:4s.`b26GI@o"IO#/]+i1rBn%M^3
%\%`V1E<fsbXF&:sDa5rc.1&:-jOtouT?oX/$i7\:ggdu]O6m.T8`=jElV]>.685e,mCbPX,!skE65-h:."J0k_A_uCX\c*6O0ipF
%hh::d9q$^eXA$Z#f?3FFD"ckgU_[pO.e$>aMKR3:SIo[8O.l-n`8apd(SQg+KmEiV2Ve%i8>tPCO'Q7tlR^L?<%Vntq\(6mZR^in
%fm-0D#[?E_D%OJ?2_PQnmqc(#KO0&WZ$3gQ*uW$\#&>1-3Y\>m]PsmkAoS1`?(6EEFtln">i8lfAP*`dV@C5;qF^<OSUu9l9@7`#
%Bc`FL=k?K_\)`0(iina1K08N6i[SF;G.BDb/aY8r>7ASl0=-K-P'LeLkX8r3TI<l,9W80Lb%%lY-@cYWQ_kPj;_[I8l,@p=g1=PW
%ET><TN(k93qWHD1+tr>gFjGr90l1!R_4Ff.qLk3)s(F:uL.7sRefbD5V*JO6m7n9YJdl]F7496_6"iR--#FlCoju9Dd;^>-#VP1.
%Q4WB-j;Tu?V;EtRG7*am*-%%UEY^pX&knEBi)]^77M4o745n,!"<S@,7'P)IPY1E^1ZYBiOasAX<t(,-@XpGD%`Ci5W^e;*[9f:i
%jeSqW6;mRMc3dl&;fU.")@tIMTc4OW6aL\96URR"8`6.+J;^L&.*CJ,M*DE*:>aDk<C&ou]Nmh5A'!fF`ArbA9&5+Dq@D1B-OsSA
%+G"Y%&pgNp`B%Z9h(VOXF1aa)k-EiA<=Q(,WJU2d4$!t5$(^1B^bboX25Y:1S8#"[WjMIr4Vm^_fYqg``H]MqO>Qf3[CDoQ?"\N`
%k+rB<jkVD[QYKL%GIucN_\Vt`m*@!BUDY3ReiR0`*L[O>2+c4Dc6suS)D!bQM*I(fS#!6aX'gUi8%cb\M!Z*PhaTs[,G0f[TNofE
%]7`(6T6>/ioRipKa*<T8/oE1rp`c1DS:RnJ#N^9$9oZA"nh/)XQBJm&%$KK`DgU#!>!Zg%6k?l**CLhm2r2IT&h8-'M#8'p_:'_S
%;U\e3G!S>F(&&QF9`[T<Vs%iW:aON0D51JK6IL1iI#V6R1Do%q(FltmAo'f^+6:6P#E_pregA"W:u$f,?)`0I\-R5YUFcsQ+jaYh
%Ar2W#NnrI/cH*Gqa'aDNk(IuKW6R/6VK4\_2ZmJ#'95=gK96lVWY?Gtl;/n4)hVZd'plFP'jSLl9UE,GBVR6ZNempa=nQ]>'PInd
%qG3T63;qF=?1882MgHQ2ceFilp;XlqGj&Zg\55/)MU-('NrpXuWup6;'fq*.+Q<-sAh-%Kn]6R;9CmtHb,U1+:"=ZfiUPd`=`Bhc
%cqA_erGr.g+L\f#BT4DP+*-f3^o^B^#?D\ZP>D]!-&k7;qBuE!DE3.K'$`fTCs8q"#^ab-U`E!127>l(Li:D22G?L_Eh3%r#t`[r
%]3Xob@7tqhX)Vb2):f\#'cP!O02rpSKKiR!$k^Jd57-lV.jI,HIZsu#oMlB#NalDD4=&0DeUrHF2(=G9V,_(/nuWOfWi(3Ui#0J!
%p)'q!cP=PI,e*kU;d-pU]']kIZN(]'Yun3?N-apb<ZT+7ZfRRWJf4PWnIg$g[`c5e'ck")f2VS7gEjcIbrW?BqS?%aA%Y%prWo^-
%@D!VORP0FsV&U;dOAqUC,9ZJI=<KF(ZpA`'7a,:4=$[BiKm8G9&DLc%6fIg!IE78gi)6a[]7fq^YRXi&2[gAo*:M5.W*?P<U4S3#
%Cs!8U&\EtY'BZ4'$$fng&A,A?7iTD071Z\ZS:Yub.;dBHG9F?;\d&tM1+t8sdrSd]&pe8aXb46Y*ur6_`bVd5`7q?FrIT<PDKJ#M
%)]ls2\"Y@$4P4*7d[,=G%XR@I\J?DCeq0(O->,""5h7P0Ws;onO5HHejRiX'X)$=[QhHgf49b]A../frRg;U/Pk=^NM;EOg'i.>J
%.[NP6+?2uLT#<!g6[\@+Fkj-O3&u?UdN$2;=k?Iq&J<:'&Vng`oW)7aS:C7Yb.0g*[-)+`V5!'HF)d(GCe(pn:>?7G8Z2L]_B0fJ
%Gd5!7j<1J521Og=<tHf8/nlAiAne1tF<,Y:\K#>)^!t!uYZj!+FGSYa;t(3)97)WKV?)tkjh/Q<[?=)KT]"h*;R:%)Ekt$C2Xq3>
%_42"0i?SQ&38=Zf@Sc88mQbTT;eRSH)1mn&`$(".[$mmu6C\>Ii%B8/Z,JlGCF2/8%kJb*fZItbc9"CuQ%ucUPGAs0RkaX(p#87k
%pdchp85*`*?u!RqN-Hl<7Uk?s`-0*<H-g]b+CTm9LD'taYA;`4Bm4dj'Kj:ciZ@,;V.dY79L=E`>MP>G7$0/eWigi"g,oN@@VNcf
%&_.RkkbY>ZG<5t2E8Zq^?CZZ#0'aE*6!WH>(Dh$VDcaQ(BP"CX>!Y(U'DEKMfsMES/f,LI3i2#c#,0G[HQe9k_%J]B_&U2\\W5ep
%q+VHkOipaDbt"/s&pGHVbIRpQ"\K[\/t/EWBfA(;S(#2Zcjbu_h?Rhg7>/dLg`fi[5Ah$kj3XA'++iu$9(^KWPqB/u#EmrFm6.:p
%'c[LjWa;3JZrpEe&0\Pd4d\n]S>g,4RO,n5dJ@JZh'btPA$i[;AoLq;$r-B&5Mje=N!0iJT\_S_]L1nI;E:!#+Bd=;6D;NlG/8=T
%QWc"]*g1\Lf2-G`+Lcq9#;[iM/%Ba/d>hu_g]c"X[^aA&D0%r^F5R-Uj+RANUL7=<1F2arjkSDAd88S!&3Wbnd=P:S[GWKieh&GA
%iXWnMc1""u;Hqak?6%scCUr.Fo[5p-#C"!?N%OHP?8EC.r+bl"R??dEK8tK+4@LluA*B)5)R:YJfod?GqP-LKN2mp43P)`0Zjg0E
%FsZ#o-u>D14;>U8I9JL]QYQ6^Pk-+u@?7\m9N+6c9Y5AcD(-SeTJb:g.m9qRA,_5HH/W?PWj>NTL4WAU?_/$##%i."**EMURktg!
%1l6.(P:"]Sl"ZIp%0b=p?-nRhdb[LjoA4`%m*8)ne=6r,g8Oe\(#1Zc;5P#I=s!oNX/^hd%L9]>2:-sYLRj$Qf'`2DB@(O_FUsqZ
%IrUC!9!&gfcKo^5o[5p=#@0V[3/W'Af5r^f(K_PJ^M6[PF&9f^@?#IBG/UQ1#c`&d60tdCW3M]>m#%n[?Mc$`,A`MX#pL-hE_%3J
%nFIXqC6B,[1tK'?n-i]_H]6JJV/;4omi9d^hrm<VQEtJJ8o)@"K,Jc8hbM")<BK2&'U[8!UQR=I>MnEY9B+!/bn@UiDl;M2Kh6WM
%efMBkD]K6h>i-Xf,n=*eR81&R`[HdC)@6A-7@5A<^`^A&o.9D]#\E$BbQ,(cT9<S"8k%8`R%Ok_FM1j'`/haG[L8Z-CiPMurk-Jn
%&WME,0IcU1GbJ%K9nApDh"F%3YDK+f>Uma<K6U.V/r'7/&125(I;`g9,-=b,Agh?BJuY23)KNI2-@;1-`1tlZ[gScnCiPN`rkohg
%WF<ueA/KW4:ftlu_h1c5)5T`f^pC:H0G\a8]lYQEjBD9]_)!P>!CtjpfIZ>,.R&m(LeJd$;i=!6ZqKVZ?"X+[\MK$nm4hd#($&Ah
%=S5A%$&:Dm%7eh!cQ4JXJW'Y,')T\'W:)Bfp8]<&98#"ZLcZ1&Q+A#rUT%,,`*n3h0#?!h+dsg\K=dcu*5t(\CN^poRV>(T[QQY#
%G*FF)33V^`$F04"p,%GJ2u/'8nYG0@*Q2ek#IH)%ag-oH2<o?5f=P>XN5<Fq#A_K`ae%"&N[HuR=?%!7VGXq,&P@#+"<4P+D^9BO
%&;\?=1<fEA"l&m5HhP;d_FCB%7mi%*pQ5[)''KI'ZNbCN[<ngA*uLh;`qjR:_r_[!]D2m!%%$c`??Y9_T5DZ=cWiK:ME,AlMY5eQ
%VL0NCHj37A#ab@'6^RVm'g.-$dN516C&$FQ-C#SQ-S\obB0i'&0Y`3#$%Wp2hDQ!t&*5mC^3V=)6c8s#fo5Z>-4F.r"O8R"GSI,X
%+K,g.7*R&943HkJ'k>'QQAu,,YaNW##Xr$2k">IHmpEJF`Af)]<>^`=Lu5r979\:9?J?e;XieisDme.S([!C.0+K?,$*sqEWQG$D
%T(VSsQ-)T`R\[FpWaU<@j3C]0Y-T*e%@c/4:$NI$R,Gs!(X;f:2U=W"3]:PN+_?A'r8S<WOg4*HQNB?)F#XkeVb88K)4HL<b[g_!
%[=q>(''Nq[Xg=Yq<5)_PJ!ret9?^Se_8R!FpX!,[D]tUL2P(2bosC]^\p4k3RLVL(k&[j4q@rFM)26(Ko+o2rAd$c(LktXF8I(bY
%7Pd*u)YQZ`@^GjC60@$Z=?gjm@a6Dn<jse<o>;BRZ=r7LBpe6;2F?Y`KF^bIjLra&73[iU%hUP(d)+Fps#qZCA`HhC7bQPURtPR\
%WtnG5$^e3-^b%_ufe6gVa-N>tMZrpbfUid?0MO6uW`(.VXW05tE_5DFOu'*&^pLnq*,SsiCiIHS>0S5.^7L*^5Bd]_gT?EPB!K>h
%7ZK#&5IJb-X=h7SD9X0]$NV?:3nUBb`Es+o5uN*CGcP^u:e9b`C]ZKVTssi`NKgkdS;3h^#X7@aD/<'u)I.aW@.lIFQIShRhTo``
%e-P``<pM$'_Ge<Y)2nLG:Z\dYgL'IXmH:HmIX+1t,6.L&m[)&nB._85p?&!S-@_GbIp$O8EVfQD,5c!oqdglH\b<:8qWjcL&c8C+
%s82glO31ZSrj/2]8B@TNRZ)lsmp+j<of?kmbDDaY8a'<^-R5[:U&GJ!nEg9OOj(sD\c.:8)$*/L!nY=,G&jN",e*K9YJr+VZD.h"
%#ob23d,btS,^_ql+^nFhqYGNh\l$_6YZ]&l0u:\s$8eSp`(_t<6(J?>-lk/"-47_d;5_-bI:JFW;f:i-kf3jmF=(F0*U$t3HpgqS
%Q>@j<lt'<<T+X>]I-erOM%0be"-W<qBG"gWA2?!0DIb%,Ve4&78a?c2+ncM@QI65LQ$W4\[;_ul.Nbcu;gRNbUa4&H&oJ#h2!WS&
%C9$q8eTeVN^ZX>-HUnGbR*o<lQR:iCGl;elG#sGF/W3A[9jU3^NbDj`J"p!V1d<6jHF47Z9MTF`;PFYI9As#?.S2Gc/3t1'(V'-d
%s&-W;Ang7N.OjeI"tSGZ"0Jor=)"[(nG>@,jQ5>5HV3e62"7l/.O[t?+,>qC?p6gi'DnBhVWh"1FK_g-WFF]fr;MnEd@[:''\9d&
%5BUFb6-$2,h.nYGpYt,VQ8I,!cm%g4JhfF/(NTK(F^1;N.J9DF`YmBA9ma;qAG4hmd\pDeS47Do'_$rX!P,XL?])^+9GOBPWk,A3
%<NFgi+dZ:/+sPLcXC7oh3/h#2k%sKQ$RKJmr6:;RhEG)i7md-\Rm&[n_H)_/2ac864VogtaP<3Zp0GH]p9gmOGu6._dXi]"cB+e1
%m/3/.Y@4d'7&/FBn3tU#kFK6j%@$#lQ;sH@8E[Z<5FY@oK@7+%`5.*Y5:e#/bdrH*,hd^Q:Yr""cYS+Tb(U0Jlt/!V_5&?HOQg0$
%;g`2o<eeT$0!E1d^Gc13qqmo!K-H*pL.I>'=eunA7cf0m*cf-W65c3Pi[Ndf)dkr'Zi!^4I>j<Q9*_PkOkY+RRXt^4=t-cCADt^j
%L1[8a>\FV<'DdgVkAEWT.[NQ!F_mKO=m?.??K9S:)(i.1![`@ObMH15-Ou2[j%iW,c_:dI?mnKHCBe;X/I.9i>PG!3pE\iY(c"(O
%N[!Mf%<;k"pU@jbEgH@;3)G\D[Hg9Af`O1TOC#tFF'A$A2gor4@0PJ^?8.`4c:cBVqBs#8F`/+[/>oZf7\pnm:F+:f'0Wh8$-r(N
%A(,]:"54/8_,elLmWCQ`Oql-3PCu?):0(t@jR-U)B<9!R#&PBge<=8#QLG1sS7F];dSj1@Lm)gQc#O@?R6k?5^+#Yr9d_4;\u2Oi
%7Vuu.FHLjk]tS<Q/($ln9_AYrSZ7>UCPB1)>:mZ"qU<68J5:RGaIFsJbgPJ>L:IsY/3E/E;ZpZB7dF[9X0H`tH:[OtVSmSu>6S2_
%T[qp=EQZ?]?K!Ke.)-uV,H:Spo]#IrKF^`iSC9h`.jodH%&6HXS(rFI?F@K\m<YSdS't_+,N)8kQGMQ_L(=#.f2!G5%=*S<&G5;%
%1H0:k+cV#"I3Kd4@\p(%6,0r`,^a(l3]*"?:eYiPl6np/+UY1Q?0&BWQpGsl@-F/O,i%^Mq53+4jf\QDl=UT=Qm"s-(_i>E0dCb/
%`cXYrcqJ[:C.g-?M9$M+5;7"h=uBdIQ=BhSTOA\+RE-6&NpJZ524q9NqdQ=\\4E'!?&D@4O9VV3l=8n5f)121.;Lh#6mua*KIgoI
%C5ipPe2QWKH'4,kHZIa<^jP-E+Y%T\>]Uc,UKCTe+EesZV#[&00L2m2<W6NKe1Ge=9$JtCBmjlMm^p.kU2OoE\\odrU:is@d'tu=
%L=UDsC5l,9]7crIAd.BRKA+"oJ5=C$Jl.WiSlL1J1\*7S!CFRn>L2]=nu>fUl9Fg$eJ,RO\&aOA5sNIdR2NQK4^7M6)O$TPKn"j3
%1[67_]iql;)6c<HeIq)Hp4\/qCm:+3,O;6`m$,=UVh(o$k^n5ci:#s\]*uBK@Cm=7D*<1LB,'PnOMk8krQE3`EuPTOdO8r18Y+>+
%.q>k[U)u;SYH;B9r7XmNh^!SW7b@AXDV28p738+pcJiUU2]BC>L*ZD[H@Ukp-]dX+%II<IP!-duS_@r'@`Onkq0Bk[-VrYE/0<X$
%Ush_dJUd]UDtQ?"'X<f6]`cpVbQG5.@tK5b.4j)QB#tt80oue9$t,r,QB*/2^(*6a+uFd,BVe?XZj#tM*0S=.)o89WI[4CWBP"),
%i0tF'jO0)M@G1qdGEkp$K%S97iL>LMHCk-kleS!&hU\M<_1JNDJqdA)H@sB/ckDq,1nfVjTQ<mIKimp"&BhN<F_1Kd>rRa[7;G>o
%BQ,pQgKp2$F<>gc9^NmC;cETdi%Ee&5*<dqP:u<2)-WZ7q=fl]alNY0nhIB)(GQo)0C'Khi_q<R^0.3A!IsW#ri7C\MGZ5r8ig&e
%>egYoWe%K!nKU315u!TBN?+E9VDCo=i`HFI;l)Z:$]?",:NN$$*j,5E74ufdamN_UDV%767`;\Go+<W;<'Wn[C\1oJmm!Gk`bMSQ
%MR\,]XU-)D$PZ=F7@82n4TXUa8uu!<K"su9%ElR==.FhS6[gLnG+-ui\,=`P+=GQg6ZZ5M[Yq8g"^B2\Cnp!ZKT@\0W:rk#<+b!N
%\PO1Ul:@hfBpc.KEf+l-lE)-93LCBc*1q9'#+Esu9Y\"/5,2O*ncg\*0P5*0(heif0j@W=n</KM/:k9\hg[tdU<ef'J;ieQD-Ru+
%(*s<iDrV,L-_QHVC:ono@NEDK_naX;!YM*rY$7h&f%-=&D2j:ubHqE;Opg*i(9@VaStY^b5_eLY^GcJ6qg>C^4>a`](/"ZV2FBe#
%o@qc#MlsP%XUT&-TXc4I53RPu1\Kk'&T;$`G0MEnM/=anC=*i_H*=:_HAX&aQL094=em,@IfBRT_f&0'KabQ:V?B]k5qLQkm=hgu
%-RS)[\1.+pT4<I:Qo\QHc*k;DR77+gWOLD\6K?0-VPWAhU?SCP6?d99Q!I$B7eF=l#H"fk(9c:UbN,UT#"-cta7eU3qCKK'GK]Kh
%:@9=`?#jA*:V#(8):k4Q`efT==1)(mqM^($h0]6b@TDm.0K*H72>rX+JV.V6QFc36NnIHLZd15pZO&@YrW]O#>g17uD_e_q<(-Y$
%0;LP3Id0?!TNSn\Bt*A$eWXOca$&epS(Uj2g)0Mip*SbmT/sng:An&[8u.Y!0#4takQTVeIcJ/>=kY(T69)EOK^72@qPJ'fomY>B
%'rr#DK%Ff)i!UZ0R,Co[mlsIl!bJpU(!0+SaZ&mXLM+iljUWDT5uq9W=(!g@d+Ju0,FGk5+nh?b)#PXs#g&29ZV#a^Z)OQ7@CZfb
%`[dpk-[kOio+^]k:Rk[5eaO"A5:3L&eq@qeX2(7;R=Qcl-HqSYM^o$YeqcELpFiAW/\0TsrLOS^cN(U8)s^C>O%q1g+hs"I\"4K2
%P'`D^OZdP^;/0V4$,"&cn`]"g;`_%HK$*Nme81Q*J0M1RWLZ3>:$hPK_md:tP5kj5Qq8hJZ2p3'(K>g'8ue;.p&\V$,9'fff2e^0
%aDSb\6jn-GZErV043Oj('lhE+"V=;\Z7dncO+3Oi3SoeG"F8_=Rg8&M$ZE)P8$PN2(F=ur/'XT($G4_BoBqH[48kcaIfER=P1,=0
%CN95SSh'e6VJoYh&p<sTbU7&lk*G4[C#7Hn:>)ouRqCLF^Upada[.Z4WEKSI=!B+k.R\S4cK-kO?(Ni(kYD4$QqhT\9Ub-6j95a*
%>HQAAgA9n'(pca<X_PT)%GjYZbD=o&X@Mk($^L/b4PFDVZPU32mpGe(:GQC,GR7Y7qVtQ+)OV,s4/2A9p+nI#qKr/O4T/Z+l&9d[
%WGJ3\eL,De$eoZBBGPYK+4=LncsbX_5tf$mWh2008EML=iY(+W74B*?GFiq=UZRlAC7E'';'$@!s-Z659rIfe0f0F'=jiNFkbr09
%.QUl+G`B+K0/G=3.,+;GR3h*kbWMsUR3$('[bPuiHeR>r3CfMU-(nPEPcS5<Q=PU4H7"C8mFqFai:ij<=J^og*PbT+<AQbX,eG5H
%UcfCkOkMe<3H)fVfR`6b^G"6R<jT/Cjf#6CMmiP*_H)mJK@%SSf1b*kp;el^F(s;q:X$8U=rPtW2[R8!I%k6lao^lk(#nLOTlK(p
%^M<WY?,$N<DMO(:'@WsPh"17njncN?SP)-E@-7mnC6Dpi>m4<#R+q?.ke0oDal?LGD@+)Xgdu&4,_\O:46$kMG$</@^)d*BesXA;
%91lnO(hPR.id+5;N=Hn1@;O:,D>EuYa<aot)`6UaTS]pcBb`:4.ct:(g8&4T$\Mga6c)@=R%-S[dY']K*k<<VA#`a;2\,s<@oQ58
%TP,qs*Tj8h83?O!h!:3@Wmd=o&8S9&*pP!sI;T>Mh\sV($>o/,nb<gfqbJ4`VJ=P7*L5"l5`9B?#Js`U/]q[>>LY(.IKGLoW4dcD
%+K4FT4Ldh.dFtuFi<<cHk'B9OlV!Q%<67Hbp3/6CSRRb%nGAORIfC?54>a\GKr/tn='&L#AE_hOY."1*_pqeqT)bp;g;8@n*\I`r
%8]/?;6#&[LX7\ncIXT(q[gF.G38,_NafWr183?'u+MLRY\ZYDWH?\!@^gmdjYPAMMo-:%!H8epa@#o2qT7u0;Dm\3VG$QVHFD@Zk
%j19;5.`%]n?*>8W?R2I?n(_A;FP=2/FeNC_i^7+K4c\@72[R8!I"FCf1G0G>!>mnnpg"0]=P@k.W<`#lX*%?7Eq]]/bo<OoGM=HC
%hAhfkW$>9ke=PR4m(kR&$)H\&YaN_,OC41oBg[r&lrKAh':b)*CrWe?#p5RHnJG+aa[V&@e]UY[:d"A0$D@7n&<o)Wop$#0iId=t
%G/!(,Y6>tK@rk_c20QYTPNd$Pr6`h$?<"UhI>.P&jKICH:jt=/bsT>Q<(imO**dWsO_,+4K;BKs>uWILbef0V*s%QM[0fO+82/E^
%%GK%%">U^fEIBM1\&S?!"ul`^:>mi6VjBE'@O?(UPA$8M8?#fehL#4YIkibD@ABEbe;hr)$UDD]p"CVJe9=_k#Bum\$nq$D7=-Ba
%St^ch^I\Om(QJ74>k2YbSU+q]KhP`K>-[&aOmnLV*?WaI4rI-&^]/t=(3KtR[s0ZfAfNj'alS5d<@:@'j)(nTJg*_DfO&-X)pR%K
%hhH7F&oVX_q5b2oSB,DBkdH#/'4KB*[\\0@NSO6A@2FKmK\q8C$Sk!UB8Pt<`]X["R5+de#^X!JVAa2>:R+RgZ"ZCt\OAX$"cZ!X
%n7_4VfIs?GhjR^4:a]=BoZ^'VS8d>&q/gBL6Gi2@abLgf.`TGg@5)j9=7hmi-"k8K)k($@iC"<h'7e.\an>_d'n5b"_I6A#b](Tr
%#L-^'?g'mcde>ElE4r+!gJi2(aAZc#hReQ3\keh[oVj`!CfnQfJ1Z<Zm&,A`HCFm-^ZgCH=(c_*b&U'(j8*N`D)H<Q;Nl<U4[FBt
%2#,P4Yc$>'^Q@C291Vc?7DU?NUe0XBcJ46g44SdK@^ODQ1LsKWI3IQ&?CX5gR[W(d=,37VKlRm.lVg:po@Q\d#ItWsjAM@l'Q%Z1
%'9/K+8p)pki7"_b8`YOU)Q\ZRM@A)@orEPmlhq@FC_>RVQDj!A(D;2sREN)e<m.$P26(<+8PQqV2=;/f[-g]Nfdj?cW5e&7rjB6I
%n231TV<b+8O)M]<V$>#\<AB"G.k<%LP%SrB>Rq.5=BlU0JZ5ZNaq,G`25h0Od_4>R[13Je0T2/A[J0W2(Afk.YAo%f8PD5M:Zf"I
%_GECAKo2s7fsa.MCJb_4o#n+7@qRNABkC+H9PSp<Id9*LnN#dgkUk]p9+b^XGc1o8>if_:M)ra]QTJ408-Q,R%dFGiFAUq>ENW":
%6"LfppFb""d'[IuQ&TlDgdm@2.?(.nnXou8L?g^^SLd>2=oAHOf!14mest6Y?h_2J@D>/d;(Aq1+=k'Y1#TiKc1i(fr#C8.;F;N;
%3Q93T)8sX&lbN%2DY^\DQp`/daqk[S0hptL'-dGK_H<@*ZSt]e_ZIn@(bjRjDrR<:_&e<8`<5s%.1%&acB8^;Id/u2nW_*Ml1QH@
%K'5mq'3C[*>3mX-6:ti7AM#=]P;`f?Qo[2^(=(=kA'\DcR2`NGJ<4r1c#X$\<=uU+1Z*_kP&"W"*c5?N`!SBpmX&/e4pO1sA]GeK
%_4gs*OoqXH#Wj*8a,"^NC3PO1RCQK+h^!U/bcO]]0rJ`@(Z>nl>$$^a=IgoDRW']mb+gRl6Bb\_h]uIUKMu+ApddG'>.3IaWW!`%
%YB3P]@]0.D`5-%*H3j;a/7H1kp\8lldm8N-\17ITg8&Ed_0"b$34.ISVKiHWk%NC6k_K\,a_j:&7##,EMc$)8&"6`[l^l+0]SD/9
%9Th*=-U"O,Cc&jLfQ;)99)ZDK6BQA"fUOO:o-rXe-HWTc\LUZd/.c]lH[eGR:q'RW&tFWWb3/r!!^8;0P$^.^(L#h]cnTF/MqH;$
%$1!ebh+cu'MqdlO=+Aua>7eA@$1]&4#7t`YP)E>p)d[EG)d]GgknaCb0gcR3!jr,Bj+R75fo"b^?g6[W*_HOVX;6\(,J9qhf=to'
%_q$)*\BseeMAj'\^pTU)$=3DaVS^O1"*K>>!^?)Z5[7gDnsPHokc$7u'Zt[#WTYf44tV)4+h^Q/W2;\qMMQS.HjID,:LJ"&^C*lG
%=1Jg-#QbX'8,Q^odH^g>oZdUU/Y9o,l5uD#KPY6Tl&XVOOs(SI)XBMh=!cBLi8Ir\Du,0=csK>RhE;-sDE@>0<9$p*Rc$2;\VOU[
%:,VZXih6eN1Gl*gh?A:9P(YTtlO`/e-pKQJf^2W$<C8u)MOF2a"e2<C"@#KI9B[_%%^g\W:)8P$'O&%Zi`k0$e2^)r!MB/dco'K'
%6&%Gnc;\9$9fsYbRa5a<p^6<hAn+S!Ek\K%c&q'*@nt\keXK%n=Q\&_og2\'14Lc<ZeRJ7,sMN[ArcF1_?LL(PK%C2_c-J+YrN=M
%,*W4:%sd3NQTX!W4X=:=e3Q;d<qMPe[olnt"LGHFH=E4o"XMme97F)-[s=2,M%:)ncc/8:WGrAL9"??o2B9X//1o7H8("%P4^SJ>
%>>&6T<0E(tnTton9kL,j[WeXNl#]Anj>$F`KMQ9pZKf5Z*aV0uJ#K)4?=gu@hF"dOQ4e')-W=qH"C,.i,(LmO!Tq=a@ElI!Z'Dsh
%PuI"8&YFOJb3=?JXT+,+Jf;?;m6_2mI)?O#*Ki9tpL%5+`/WeQYX/g\KRP*'RNo&fF@p;1hjXcE(K/(.;XQi"8qU9m;RO-Q6c(4J
%WBd6S9i;K-,7Luq<LAXT?I``J.H5iMRF/fg'WCqW(NA2oK^YFOT_+F._ATQ7("d2BmGXD"<RORDXZIG2bX9/nSoG()R%bWZV:('8
%+?Q-ACuAeqe=/_R..;D&3)82ISeBm:!^TpM&?HKoI9n:"7S9QB;UWrE7$S9XU:F8*D\>5g9b![FfL.6]@]AbXkbq1M4mMCBr="O8
%Q+^]]JVSno/P4r(T(mlVDlFs7Pq!!@[WaYUb0o+*Mt.5VT9uJNgIS'RDU<B_]sm,J.8>JDDsd^W15U@;q^ZrmIdK]EHJQS\QaBJ(
%H"rmlmMNH.e84./:\TQr:L'0>B"+$8GHtmTL\jh]TC%_ps&<LJpdtqZ(D<lD!)uEfX/soU<:OA>_a4uV8fjQ1H([mC34",7Wr=C>
%D=P`3*u3R,,cR9Mo#?oKQMq^glQD.Kfa*FqY,?r^j))_&8M*p`DfEKdXHQ2nMqLkbBd2fFo0+b_"FO[Ei.\#B.^DR?CjSX8HlUdO
%!hYrI8!^2LL$d3hHO0K]`>Ph5d52%<\^sU,2%T;NP\"7hcVQUTV+qHJDJ(3TbWC7=>EAA&huc%U>`L,h/08BY%)efp)jsoGi!,<4
%,A.6d2V$/A^nl=.Gtrek36m7N_o;CF>`qs<$T00l6IHAdr)H]$53m\b22<2UZZO&_GhNkn@QdAdDf36<BctpSM4B[^-A,M*\Octk
%R`5WlqGclGg3T5_-*@f/U_.iA=Y_;i/(N16a_7f-6jtD+0i%6H$(k=@8Fe+.$hTK?D>%3lNp'8Ua#OP_qAb5"KGUG^K_Ip5+1&IV
%nb7XO]':OuZa,BSs.o:MBXN*7s3-pIC;sQX*Um^7h,6!S8^^a^=CWG@Oo&B?ViYQiCPG(Z.6AKI2/![E=<"]/`-7Dhd4+UOZAj#[
%dt`HL/0gt0(/9NOJs&cVRU7SJU+)-d*P#0&QtR(k:C5VW*tX^V6U<i:D/3*N>fD..[Xhm_H,>*Jg:kD$KMS+ud%&4a!SK<9hUlhf
%a!dtmoY3,!ASc1ObBW@ZVZLU!]s33K2("oT&%QV)iM)BAA1<1(S.Fej-fVAG7`i\/<)PmMR*D$k^8HM-B[;Id3[JE-:pWh-ru]GO
%]ZtB]E.p_Pr):BVU]_Y;l]CJ%Lc\C3<BeCuW>"enB=j<DYTW^B<pBsZ@>*&T(.%0S!af5ol5uD&!\+<B#7sdJp%0Yq:O=o[gN\FR
%Ed*Qa7G#`1(D>T%W7`"h2cSgf(UQSfP*0X>O&OXBY'tap49YT2POu<p5LY+:%.Nb\=@16(UG<P2Ts,33$R:[_[H!0n"jrCs!?b,V
%'#;&OQ[4IP1p:pjTN&oWm6GL]`LF_66%a-0"g"pdIA7"[oT3PN:-h*"(%rKFk"3KdX]@7J8HFt,NuMB>/N,4H;3]pf`qhUC\gsI3
%6saU5DOU$,(JE[6Y*Z3lYu+OZ']Fo7EUKYHL\pq>IB/$-g0s='/pPC?`B=FK=fC8h'(6J.C/X_OUD''Pi;_An7;9GO,hs3=H'96m
%KFYi%4cXt+`*e8Qm"k7pZn$80$8'f>m<`ht)pPEd7AT)1SeX=sfWlQNjXbK[Z(m*/>[N]*%2`9B=iC/gc!0#Y^qI0g[Kl;1f7T_T
%+Ntntn??@0#sqX6A3#I*ZKa_#bZJ1TL2J;CXV,qoLTPd4THBSZHOc@JY\#MD%lAYsb2aAtd"M$niu>-bV+-n#6)H3BB;&3\jMac1
%$f)Ud:7Tlf=U/E2XD0-bF^k1/V$Rf0\lpEPdYjOdDAPEFf]!s)eQIEK@nIFooFHeJUISBSChJ8R_`HA6+.F<N(KGBd#/0Z_0hP/A
%6"kl2IWE@IM!_LNU$IqKJ+1nE]"`\bh^kIfG1l`$$_C4_[)Zi?%Bt'e\U3D7N28aV[)5=L8V"3WW4!OZ%VpcT5u;5I2Y9m'@FU7[
%VdMo7o";m]M![gjK3$5`il0lm[a"p2/tnUMhQ2@Ai#0NMpDC*9LB_Ap\Qa8G%h5kP)EQfbn4ckD<KpWUM?;%/&,J[:oV,\_9DL%C
%gZ(h2g-O@@WuB\'1gIe@BqXR'j_C+.MlJ/uD\kNgf]!sII;BCfmO#]mKm$]jh<.kTpU_d/IA[;*gVYJM5Pl\N6dkD95N)'c8$j)!
%Q,qgk9Bb4S:;J`F/ab?"Xp:blbi0>@DTK`HK1!IEM,+L.N3[+25S!u!Td!0*nsVH"V)IIY5..G!B<"rZmQbU_`>eeG,80B'E?-<>
%Xnm2MP.J8X]APP+(&&]OXU+^<94ScTeo_p.%*W\B?`1%DR=r[%@3\TE8gK8'h/DMR?A1+je(cC>_4?iEE<jp(?b-^X)";/.dZ?:N
%QIfi:d*%AUg:pq?%uoT*8'C!*,TGoWj@)nC^`+:JN(@>I&p=gK:[1!Rj^fr(dtV1D!``Ng.gY;ebnRY+Gt?Y#>sg,)l/joXY/&Y6
%>jW/Ml'p?e\-nm:CiPO+g2\%g.C<K`&uZfEk^`Q86qC%/Db3Z[B:rDU]kKhe>t\rTX&m-7$c@noOL33BL4XeWIoDPseKr['9B`3X
%[f5ZGB+u][1"q+>rVD!=rlfcU=Niq_Jt/^5"fa"tYY<4Hgriuh38D6rNXcuu,espnq[WPQ01<[n8BCF>lHMLiQ)uClC)a2krBmrP
%e3nL!6mQ?$%i,ZF'^uoS&q3I4O](;8'u1GT-!Z-gE9=2K'JeEB`"c<:cMFc8C(CW"QDuq@9YQ(VD99:!p.=0&`3=+":EqQb@2!$3
%-%'*h@%%CU0'(8DCQ;O=."bLh4qBsX;NUt8Jm[RVgMLmW6DX7lZn6t<>eat>;D'n17]8<Yl?Dru#(7C5`L:l7hQ?LkfSZS[%np](
%oFOH`L+s.KA:k"`obQNI]TGU(Ed'gf/#,aK(f_fE:4,gWb;381PGOgs2WeYZiBrY7)[O[b/s"7(%Zg+BV#=-,U"!t>7XNrg@;ccB
%Zq,nS=lLDdmpS"U,Iq?2Z*[l$>s*0t1VZ36Z'+teEXRU$js%KCH_444*M\h\:6&Eqd7$MMS"1p.A"]!^\N%;^!PeYnie?(Zo2ei@
%Rh#Zt"+=(cj60U>]LK`kbRa1N$'u1A3\BEG_-8%41\umXWKM6Z8b+_7#UX5heD7JR8'RrbcV.7ZKs0a0o_XbZ8A7Ean#:^S\Wm1a
%>a`Z:02Il^],1%*d825E\tTko2+sL6FBZ\82"j>Pp#.s5'=i8)bSbK/*p0Fb6l9amIakcor)1cHplP!%M8g4\-DWJQ"(6Hg1-P$/
%YlI2)hq6mAcWAlH4O^)Lrfl^4eM`QG(QH,QBPusq2Ta8oF#OcgMisLA'#&-B8rlZocDQ3-a@>[F?m&"'-Wfo5XuB_7%Fh//Q!Kjp
%THrkq"jt&"Q]b_[V4][/og`H;mo>R:mt0Kbd<P[Cm6GKRFUsAm]TWQ_K";`0CY#/Fp/nqNb5%1!YfBl=-D)RF_.4b+8cir:JtT1+
%DfEt&UrZiN@g'7fZ+G_R+S99>CL<T5_$7cEIYg.J2Chc<(_DTe^NjPgV:SoDbn?2NVgl>:)9!Bc5$H5u_'bq%&n$Ai0!,MO#ZXXc
%GATe7j#W6`'YD%q#i,MILX:"2Ebd\d1+m8^MJ?;`?j63is5o!NMR5"Y^/73pp%3,<4Cd$lhT*c!aN.2QmmI^6B2T.`F<Jd1:fK>V
%-nIa6GqDI+^_#LDdOa!4b<bZbLR30MdO_F3NH!2_\cPl8`2du#K!&++?J8n4D\kNgf[?@d[1>Tk&hW]^BBgFkY"8`iRm[Ih^l0ld
%``g=D'T!CROF3[.=q/jqK]?TY?J7]t.Vf[8K6E2l?<15+>\R97KO,o4CR.JJ"j\#ZgiK\X$dae]%I;a$1Ki9^'[A<*A@jUti;?+9
%MNm2E>T>$fWUL6h=2BL3IItrM,-=JfK0hrRlSgIk<86MLQ4UM>lea=>#-l-17Vhn<cu9^OS!f#fTj;q_`7;8R,no\_:t`pPR"_ij
%+SeLSVD)bVK'6@JUhtde9$IfGA1_+pPEWE"Ht9>LN=qDSVg#c2)8d6a(bB<n7SVa@l)pBa^k&4J=_kMS9+t<.,@[s@i(+j52C/6h
%qUfimMgVSCMfXt<q]a9%6!/K=Ln-@j6*027RjEa!Y(+(A)23ooN7QP]<)!uuNN>0nq:ZeqRVb&/eu$c`"/8W/DS9ps_a3)A>A<IS
%#T)/nSZi4#:"D-8WL%8pk(Q*D=j,>F+eB:s]j:+9@>fJkQ'3?Gma2Yl%=Q6C'\#FYpbYQQ_)s;$j6MH?Lfem\KFTlLg%DCNeNEJ1
%g4@nX<';WL7Ft,hUh(s-Y=97hMPkMrm#5>1H48=fLI$]8,\*'0_]Lhki%'](hr1LbXDA.U/6/?>Kac'G=dX&3M_tIT/r7H6Ef(lW
%#@b;Cf:r?L?!^dP<IS3?&sBi(K=dcu*5t(\CD.:*@W(.Mk9tNs*Ya_Y@h>rE<F9d/9$""fdMg&BS#N/Y5tS#:]Jp/$=k5`L6MQf^
%#>0RhYBC4l?a(#D5sI2kp)'l:Rg.(BQ;+e5-GfB=5ctS^glhek/9(^7rARGh@#3TFi+XiGT2Q5GjOl/"*g1,<f2,QgEOIlIYVoso
%4j=UbBofBC]A+:BQM)/tD%'epCeU,sk!e)C4?CN/Fs%!%.WI2QLi?4T6p#GW(a@jN7dcX`PtUU[l^'F=8[C)3k>`5$*Vt2R1mg,N
%`Ubp$JCLp>SPh@r,O$pZc9SS!^',C7q3lCJ@]e2_'jo3*R@c:pq5igDjb@[bHF(spm"3?2#mYOb`#VC<Q)Ymi*0OVHN/ZCh?*f3[
%mciU]k_DWIn"\tqJ<)n`oS]"\eq4W-KOFs8e#;bO?6>IY#cb-i#e^8TP4HG]Jl!2[I#7HV1b3\ZMKCC$IWOMeVOW%?6s`IrbO4b,
%HO*j*qa`^L1W"X.-Vf;fqo=[3%9-+AUQP2!#mJqC!?tB&k6-t)+Dlouqfb=S)KYN0*5m#smQhM<7H6<[Nbm+W>sbLU3bS]Q0ML8C
%]X3qn0]`R=19s*._PFIYm@^K_'I:I2XQ:>n!6H'4\jKl3N)64hQ>ju<%Y8dpo8kdZFUos)o\qeW%RCM2=?+PDo$SScH`,X:`0U*6
%/Z/VeRn8g'J>Ps'.W,rOA/Sh&afO2"&M/IlDub1dil#*u<=BbqjjW(l4<eW7eUqJY5NnpiS?LU'8jI-_^?oBB!*e)cUp^nh3mod?
%'NHa?k_*.QEe;Lb(D>qE5d;\>82Ld>61UN'^67b]0`O''BKG-8,jk0s,V&WaecL'Tf&o3SE95e28F#UQSq;;+8).Ue[MIf_Dd0fd
%-U#Tg@$]!&DW#mh8lDf+rQA&eRJ`O\BMLQ!<=!0lO`mDhZL]K:J5.$?M8%O3T_.'p"j\="[)ZiegFHE*alg4@8KJE]0G%:keQ.UJ
%G7,a@iLu-4MU5"%Mdr*_s!\eIXtF)@2It')?&o3R"J*&Fh'k5YAr41MON$YT@W#Ebofc:F,JfYOdj_.QZ>;OC+FG%N-2f7@E^YSc
%K;Yi0J)#dS2ZrlOk#G5%"NDbU5\sNeH8Hmp9hnrG'sM'4&sBi(K3%I[S;MZRQP7cI]s]YPSS@=.\dg7c/SV<BUcNn=8I84pVYLu5
%*Kp?R1L:4uPQp^lG9F=EFUu'p$-+MK%Z(V`1V7f:^$+J%%dnp](gGd*]_5(8X]'Bh(i(/^SY8l*iF<(7]f<A")IQ^62(T(G6fa#R
%,F_s9:H>tj[S,>*fIZ>,$@`J3bYHs)plm[aZUFR?>5*3N1PdXM0j7<S;T;H,@N+g&7\,9dJu3[l$_3==MX:_3,Z=aY1]a=:kYUTP
%2kP-8P"m'4)mX(Pl9Wg$Kg31@CVj(+I&dHCe_Ro;n-j/,H]6N>Mkkb"P2L'Hae6q36A)lc&"lm4/V49C8mP"f,p"mt][XWg=8DYe
%3D#On051Z#Z`JN#R-C&XiY&EUd5O^O+-^ndQh*S>[)Zis2;eV*oNN/+e`'Fci^i\A=O&4[)I/7NiE+%@[HSV2^!mjt%O$!T"i];u
%?K)I5G,;?3,P(%<EQD'U'7rDk],Q'1T='<STH>/m4iY[%W!F@ZDGD$H4"h'R(&!YF(as/T"%dgUI@qblJDB>s6@\:3d?Rb9K$?hV
%O0f"o=k5GE`0glrEoP[;(HFI']7d!Jmb]X@#-k!f7VgJ'ZWu0]&MVM"K0sVt=iUrVT$=!:4`2LS&`?cUmF`%m#CKUaZqi[g4_U1h
%"0l".HdK/--B<F#:'`YRDjH2Y4l*GbD@e/^3Ef0F#(M_./J=Ao_DJ1r7BXN#($,j2*dR$n#sqs.=mrejFl+Ht%O"&rk5%.CO`3$^
%dPesC=`]54n).c.-GGG>;*n1RoPPK;,GVch?u6[rDsLns>m#h"9j$?#))RUdL43E[pArD3%S61,)hS&7E,pbknWX,[YnEdLBcF?i
%V=$W8N4"+=-Z04)>'/"-,#rj]Fu_K<PP,uu9`l"77/N.8F5!Bc&55Wn+:s^(!TOcpK,O)sRRN1^9,CKlfI9l5gt&2D4lQsiG57UG
%$3e7Zhn1pn#/Tuf[7a'USdt1?B,Fk.A%_NF=pL,rKoW;G5->A&?7`0oTimNMaV%g:[fOQA[+beA!b?m]Z8jbdTdJP>c9lDLl5gWg
%SF\ZmD7p9aZ1?-PP1S7Kh_'.CU!gXlXm)H'H[F0O2_`VX7V-E=8nqErA-D>1P!!`mi?0"qdDEJH\D-[sM=Zh9bIWEP+W3rm:0b]r
%c<%W2?J9&Xi%B8/Z,JlGCT>I-R.mb-O3F7#O(M\Qd,_<Q!],0]`$,0gRN^6)WWgq_HHIE)<,Xp(g4@m-opCKn_7>#9-OnSrn:bh`
%&pgPNe@N*sSj@1,O3sD&)UT1t91+l@^mt$%Q([uLl<r^ha3>WE8^J^.0scM2?!`l/GSS0E/]0[0%`EOeY"-B_rS*/:CDj3LgUBh3
%$?>Ci0'EO1EKBXYM..rse":)<b\j*@nt7#Qia"*bKi'NEf?p;S9O[tV&8db4Q)gf*BP>?ikD222gLXYX.l93TRhpk$h0:fXa@iY;
%eibO,`is#;#&@QL;V=JcibV8TIMEg(OtZ-jL.7#nGTd_<KFgD6<T.AJr$k)4;ggr/*`ONS+P&$C)@D+Tr1I7t!?HSA^0-)egh6Y1
%5rUV6pDg=&P0b<f^.H/do&Bqj^C)Cl\>i:u10]jmY6^r'AIP98I!skhQQ&j*n!l3>Brb5%)jl(i"$Quc>$ABWB`(Z,6saV.Yhnbf
%B+/"uqcN7JJCeGnHmPP8ETg@j2KGkm+U8WlZ&C//.&Lkp85AXa#2t"G`#Cbh9AG*NmRqILL3B@Va49X7_tsM?;6F1k;YP9P(HfUf
%iZ@.1M$VHNLC)S[ou5ko!Z/`$,2>gY!B1g.4IAi\_8t:H?j__U?>?Hgb-[E="i66-6q5u>2+*&mG3F\n&JG6p(B*G'a`A%&3q=KO
%"[S5+9Ch'^`+EBQ.Qf+a".V4Cp;36R2/A:1]DHdZ\ritrpS%"Hr2W1',k4j,H`$5W2n&FgFn6;jWCA+37abbf#sY.OjHTo3%Z/Il
%jhQ]dq^'KS@Fm=E?Qrf'7i5?COWa'KC5>jFSNGrY&@SsTOkLV.0KY+Q7$>oq*;MNS>L7RleL^'$S[Y`dFaV=96%l`;TKh![L,;Ms
%LH)S%,`PFHK-JEHd+9P>73pu2agZ!r*t[ep.<rk:`B=G&qPU%q^Bu[mX0Y&X=jo4W.,m@_636/@Q(_p&(m15KVb$sbdS:"H>J_*d
%fC>Xk8s7Pb"mI;o#*X"rC#[`%8Al<X'Ve+=]a=Il!tkOt8V19G-*gUZ0WGS6BaO988NlO@^0IW0R=boh'r7IcJSCTtDFP(5dic)i
%G3.-*>GP+GHg8])+QeAmHp,/W#T\"]Z1'3rHe8@XDZYCf$!l"WP(c*.Tm&1nF^mXna_iEiAUOrD;J\#*VOJ/=#9drkWYKT2]Do7K
%Ir"D>:Uu'S"5Q%_S5j2[lO&h)5^_GJS$B7^"oRf[M9)9N'%p5S-h/Z+NLRlmFaf_kOd%.?9d5bs=c-QU,`Q3:5rd[Op?8WdpXl5Q
%]1!4+*TU5+Om<og3o$t"#sI:&neCRp7`tWCMTJmUb#5Mok03ou'JE4C6,CYk$Y+l%Q<+tQVF2@@o\rb#G<)H-NUr<V+>ul.KV?bV
%6o@,()O,>fUPdDPBUuJ=B*;GgA#O"%q*cYX2Yn?"R>)r5;l1UXin>plN_8SlAm/2H0<u`>6uudn,@:U!ZIQugS;3nGRdLWe\5Umq
%?<k=kUKm1!U@I)$\-nm:CiPO+Sr*6]X7d4`9k1</VTO>BWMmIQ..ZIdgPk38<G_p/EM>*R<W?BXA4UR.-Ttc>)cja#D'Nk^2$kTt
%)YJ#TesbY+E\H#m+Z`t4mrlN'L+VgJ=I[@'^i54)btS(FJF<?U45.O%J2*$EBt5f=&"O/85mGGu5__&c<=lFF2-o3('MO_Zd"'2X
%9_fIUKmPlWFq*HW^^crfB,Fk.A%Y$C9d73DHIP_9-``_X`),q*6m:7jU!TBoi:mS4SlGB0,4s:s]uE1<JdC;(_b3&s>CHJ?%l]qB
%?KJ",'6#I'Z\2Z=A*`#)k_DWIO4!s>7>X\`EB>">(?Z--d1'i&[mYuT;'8J_asNtuK/fNg1b7]@R+5[7U`G,J9%AQ+W!;!80.j4+
%d5RQ(VU>-V(YiNQdb]b*r)n@54K/uW+"qRCR.o=aLg`=?.ibR/ZS"OG/.A7795D[/Z3qkd6P<E?E?8R3U'EcZL7GV?WZftFTpKrU
%qR6j(;/C7@UG][^0*4msHH%:'+$?Za6_UEs)MV=M4MMH:*Q6bL:CX/X+@:jJJAd&R>[7/8DjRg5Z!"+'$l.d?rlpA=2G;pE2G:u9
%B\:"(mL3PtH]6Nnd_C#t<Fo#b@0%!,2Id@]-tq?(RDChs8NrCBRPm0JVm0tR`(NYc6A9[l_CT8tngNokD"jbB"esqt`5CV+"3"jd
%VnLof5uMk"D\kO20PSk\g,,I2iJs3\LJ/`Ud%O&u5Y8La6.S8pCq2D0@td4W>=/eW$Wd,q3b\h.Z`IqU>O*W&DdFEnZ#KATm1O_Z
%QeB,ZmL3PtH]6OQi>4#HcMo#t(m=;hl5>Y+lrdIR"6AtVlE[?VLfG'nDhuI5qXM^.E'4F`?-8;l+_d6b%0_*@<]+T,&VD=M2bStm
%Lu$hIc597-A#q>(/])]olRR(3ROl9?Yb]_W,W3Z(=#?ICO;-\S=:9K&1Rc\6dd-.C^'fNbX5)\E`+E0HTFnhQ?6#>RlF>Ooo[3kk
%f"kY=%?8fm#Ko\(&@c=Q_>9^6B>QM?d5DYs[U=BNgqaXDPU36/GUdXqV51hF$=3W[#Y-sJ*,rh:M!_p@1$>2A+1E$kjV.E+?+Ycc
%mciX^kQaUtO7CplXS6>8D0T1FLP'%t"_2+qmsl`/Kn;*r1D-VS&&eG]j]XhOMt!]+@0Ti'SA5S'phi/j:poGKI@CGSoQOg.:-h)s
%ML,d)B0GLpS(60mXOTnbWe2LG"(-fP`H@c)!PUJ7s-9mB?:n,NCc5Bj_SkR_m6GKR<=OY2X!eQ8V;['ELZ)D_o[4f$IK*`l1PdXM
%1"r8nU_AJ=+c3u\6Wb@YgaG/D8f,),Fg[BZ"pdab[#-Xmb9An/V'ON4BWh#6&/h&b?,[D"+L]Jh0Jk9(Y8;u0`"9+q$,*^lf"kY]
%$tG3BN0bV5DKqUR:NA=jBoH.!ST,qND6)r1F&f4qamts6FHCSM/f_0HS:^'Sm')s>E?:!"EBK*rlg:/XLZWWjg*O]1BH>k3cS2f;
%a*@!aK)88PHHjQ."c%\D-h2Fr?'[<pL>f0[LP\^-+Zsk@3;g@.#eH>7HUleEXP"Dh=#ZR5Wo:mI5q'?7otOkVAB_2Z)*]OlH&V>7
%fR5Y1rb._c4?+#JGbbGiPW$V=T!KHs@MU_T^$2!Pob9gJpc^?N*f=H/2%Uqh_bTC5%q<>1jdRRg@_*cWD\kO2f](aXCU4S%;g(p3
%R*OJq%gXP#OgqTXT_02nj2+Zh<X6_eC-i/t*@c0LHjNZ?LY/]X4X`-o#Q]#+@$d1ka(^me92c=(#C"!I$;,XTp?*kHnH6p>8ch[b
%[.fZU;tITZ'iN'4#F:60Z9W1Vp2kqc2:MJ=V]=ok`HlX%*JhtGl9SooHJqk<33A*lp?bliHE!3kh)bf=cm\99g7PAWO#;"9NIdUq
%(FhOf:cR($fu]@XXJiFNKKL8CNO[=qqgq7tH8!Q2dOmE:L*DI**4hY"4=oF;jk;"KNOX+M(HfUfiZ@,;I>\6c=t7<WU=b)B5Sf7n
%2FP[1q'TU@"-64.&=DZ(RNI6)fGB3ZY&(a@gkMn9>%%p[U.0<()F>Vm_CeTi#16i$rgeXiCb"g,>+:6RY$oOk7G;R4M]<GtWtO=k
%!fUR`6aDArFSJe!l6%l2:\e9k5rcnV*82"6+_t0EH8NIIh2/1'B\]>#f-!gQ4*V,/_,8ut]OnbYaa[iE]b0J0GYfZ:/6n/d>,Jkg
%h+\ZoVI):#XGBH.KMrA[$8d1cQF7rPQ?Lo5$B)]^L01]!L25<NIZ<^M.Ha3u_B*4cGrt[q+*:*9\9>DsW;mDh_5]+[T:m:m\=I/]
%U266PE6HHl3o\:^bCXr6Gt=A]XVXh[hbBP.^r0[X&3=m$,soS9F`3U.K@nTnU]#IV$Cn!Y%Yp:&4k4t)+:>QcXuD'6FQ%2E?;E4;
%`$KMI6bGN\+h$+'g^3'"12.5,X*/V^&1k9\)]W!WeDt^/9#tl[m+j:=`^"NN%+ZI6G^PEQ&JgbR>XT(@LFl:79WTZ+(,TFLd_+*+
%nIhQ#VP]Z^JmIr*3b\h-X1Un77,3+>/#15OTWG4rUP)t-@I'I!FCR"Ecb\<dr(9ZUpR8K:L.p4'fr4R(+JJr-5Qi%Re:dQm^,K&e
%=H6`T0@^nn?n#\jYTXV&\ATCYS#,i@J87(ahn6=N?+=7d&pc:u&,WgDqOpdAqe0g^I\l6(Q(I<O,iEee`1n+b^c=I)i#WS#RTZos
%XW=;'AMf&-Z368sBVm:HZHihGFh.ne7C<r?!Og+-)bf2LFJ;%QT4P@bD&W&plp^9r.Hnf@EK?eW/4KU=:/U]uDK#k4)r3DJj4N!,
%,&b9cL\0A;VoT3f"Af++U0BG7V9Y`JVK%l:Wk7cK2T/X'qAM//+E4?1F40P@(2,dQX+j0qh7HVR$uAR`+6u_8^3/f4kSBb,n/2)n
%NcpLQBte=B&s:?@bYY%(X)`A%6nM^OElai(E5gC5f3=c#Ug8FUL.Z@RDdF=p&]K#Q98JHqlea=>7Ua^dUOE)5RHIN2r<.0N@]7H-
%&!7Gkp#ALLa=#Tc!uLq\T&4M\/-5sfD^^.p+IK3qkR&KBh'L&@[O/Bj"0$`<XWo/9&gL\a&X&T\;nLuPqA/fBj3RTHX!A&5AN_:c
%WP?f?\-f&'?GD-JDhkjKBbGO@Wek+O8/WhoJYs>OIPdD6QK99(<2q"HWUlXH#.g:O[n93VT&/jdB+/#"A$GkREN?2[Vh'pRVDUR\
%>fG=:#"V[2aD1d$]em408*"lJXk[6#/;K^P4o$Mn5h[]g)AqC^5JDDWlO8d=kB3m>H"i&9GIuWJ_j:![<kBs]8mhBmG,/IO0`N$Y
%$QAo2hX1aiRG44C01c!naI1>i]qOc+i!S0q^kqYZ+J"Zc&Y+d(m>-r;hX$^XEa9JVYqq+dlS2N=14NjJrHg`(H84^1XI#dl*$_N<
%XGd#e%($0s=[9g//I=`i>S9F!7\RV5iki1$h,%XtK*-a\UH3+6%?Ah@X+n8d=39<iEb>ebgA=uh.=dOV5KO+.Ho/=A[!.[l,Ve;Z
%T4Go,:Qi$[dZ"irK=KH$D@jE&q"NboD'Nk^O"u<&_$Ec.PD('CIPj`R7t^JP(Hc3[iZ<`#=k'nkA,I4Lh7q#5Iussso"\Tr[_EOC
%>JVA#Gfs[q9quIeC(j/O`PkLpM8?cd7Q&_.FV*)t25I8m1/jKf#s47#W#i>1iTR(;#tjiL.RJ8-qdu["s0nfE5^t3q01FmT_=M%,
%9%/Brer$5`"g/j[g>=0bRLk.l1C-9ke1cS+%+5@MH<#UQ,>LOEG]$jA6.dYo5)/&G*VF/Zdbr!lbLJ-e?HoR$]AORF(AAZJ:5h00
%O(#-5Oi\b"<7Ln,qT;X/;NXeiBc:?(Nu56WiqUsoMZs7)@T;%/DFg4-<MBr*>\e7@dMi%sHM=N[oKnU_pJ/Of#a=u$BO<jG;<_iC
%N!N-pQKQ=c`(3J:+i^S*Y#e,.P(O%D,6tn=+5;*_N2p>6+cm@]+L]J)L18mVhn1f0R+FXhRjI^TZtn5W/*KGgC!Y1I)NZpX"*gMK
%kXn\>d=c&9R^=V[n1Q\LE,!+R;YBj'd#1JYoVm<IY/^Yhn!uECZ!Gp<'U_,2F!kjB-B]1b[7f_[IC9Vh5rT2cpDbh6!]e/_W2GP<
%KdM&Td"-rWTNia29Gd.(F@\M"LP'+k+=^?Ri*?n15dakV4='="Y+]t4nD_A<A6eL7H>0"RK=g%Z`YS:c0.-g;Egh$R,Kre&ndZZ@
%.^#LKR`*/J_:i[121]4.%RGU&7\qr7VqfSHH),;uR[(H*"bWJ3"pSS92,:3,]U19CH[!X.Of>S*=D`84pR5V,P3p>r_&4^?ik]N#
%6oig4)5%7+'bjkh39[2q'f3t*G!S].ED&*$2uD#tajBRI<]+SVPTY$+]-4/rm^[@NA1$Xtf%6U!SRV!28ALqK]/Md).i7a(6LlKS
%;AaPmc_1\@K3ld;'_566PQPBq379o'NHs-L8<&MaF%]0q!Wsh0C"8jmWE-ERVr/H2QM).IVZHUt-+r]l."0ImnM2peF"<+$N7"oG
%Y*@?9TgKsBW^=C=$6gBge>PmmJUC)SNNR-&@4-9YYZ^+5kEI;=Fa"'d_**`%mP3SMc77YIm%&?$B`jR]%2Z3TAm.Kj!LRD'H=oPt
%c/U;="(/:kE\f@g#J.35)i1\-C=ZQ\"8=_/_d'MP8_r4;;t,`TMgHPJSX@0t9)m$`r@=#79-ap$\Sl[1@>!.##&]&QYYl#6?t<ig
%Dr\2"'&mad##!aL"[VH(S,*`[TIYl'JT/VkR6&bOkg\YC/0Q(\f"YM;`aH[?`bF&$[FCEQr[i>sTl#3E6!9h8&n>NU1hXSOfFiLE
%HHiG=I]&j;fB4IJ5^2d(6_SR;RdAJ@A_\Ni>P_TUV!dL*/pN,U`BD4VbMZG'h-[^&J)u^`\RTVklAk+L`uYf9A2.iMeK>'6-r/lV
%G=c$G]p,8+[,/!<GR4XIe.HmIQTOnk0\@VXK9MUcW7!Ut8EufGm=Jsb>MT*h?b[5.qLkQWP!o:AM"`DChOP2g\L"+$pYIZT)-YWC
%KDPta2Ydfdb92.jbJ6OLh8'g[`2a^lGsj0mANAu"qdh2JB/'-&BaMVYm8!O)a@j.g^0*0L!0d'ql'HQ#aUM-/l-jE$]M9L^9U)O!
%F]&:LPQX/W"Qp9"+;jb!PU(86*I&A'rK0A[G9F?;lf:?am/0Tu=O*$B`jJHqf1G;d0'EO1EKBYD/ZM*:6U.(LL\i1^k`CH;$d+po
%!6MU"5S\rGbs?BB=UUn&PK,9]s!l8)]Z#.eg6K5S*?a=$hjc[9i$Ld,f-"D9fYLMU$tG3BN7YEhi:tXRX(g#S+L2VINL-<a0&6BD
%,oFiZ[EFKL+OL6bgjH[d.(37"=LH+.8=PmE#8Ddf2.')s'#.j,\Rl/i1]?ra(HeHHEKAN$/7`>:(;3NQM973,2H:kGlpq1$YlUQJ
%96:aBdqbLU5u<<C9:A5D<RrFOPG*BqU*:X.=-JNSoLH6j=g?G*'D33?I1I?\d.LYIIb\>]KEYIJFW/a7TeKqq&3kq-e+kIA\JrsC
%mQfqjH%B+9IngnAR*3".-,d"'qR6k/Ti'VBB^LogdMMF5o<7Nh*C1AL@)UWAK_m0kX;W`9Hmaq\k>`!"YKfe0L\>64Tg_,`]Jr=K
%Y9VOS98$)FleX7<#-k!f7VeH<E;iY53p!+1iuN!(A3d,nX'<r\9i7^%U,IY&?;ET5X!$'DF1oM;8D8K+dO%<dSsGftNT-$Q&So@n
%CCi'!m,0=;L9\]\`bQ5"(j?qL%,*<%("!A\i&ijdPs,Qle8W;m(duiNYsIs56)Mk.YC]=AB98!4OL6T]4W<:NlGUMbg[JZ9m2Eo7
%A-[=pCN(ck3SngL"ARMXp4/\,0juJt?D5B&GXmCZeclbUH>q3*?Pf21o#8Nl/RG^m`(!o&TJ73'7$Ill0HO<H.Nr]3f"557O,W'>
%KB4XTG*:'Rq9K$%_0*_TP'1X.<m8OMn\Dp1IgL_pJD`1SP06c6OYUc[dQD(9^DmOBO?1.%Bu1N<n,-OE]X5T-4'0_IYbf$oop@?V
%WSg$.bt2k&nk[%,>N+[6A2REl8O5>[%!nm.\#Fl<.>Y1Y+A+^,Rq:E._PR1"(FQjCq.c6-D3sVH0'A!ZBogZqc@DsQ,Z@"qHD?>V
%64<3rJ5S1:KRcIL0H8,>bTQ^Ji@#`D>JZ\;:HRPu,jhli;<36-h4t]#O?sY1)lHto?J9%8n.aZq38u">2>p1%Tq@XV<(L&<Trm=f
%LrXj!BFa+5>#5QS3(PkL7>L=>(*1+*kFlE8M%>I_2^ht%\-,\64OHp9#/.Cim%?#Q@2s9JnT#fbRhZ/]>F(&gA#2`)B;d\B`>E]J
%FriC_nmFlL@%LF[pf&(uBc]<\a:,u08Ff=o@7%[jIA92:g0a1$/pE&SV7hl<F>(^R._:TJ4#gU%#DECWQqHY,,uY)B.^&b<4PZBX
%W!-</6%(73RI.Ys%9^<EHVf!64)s3WBnY-A5qhU]4*V,/_,8ut]J^?uh5Y$,EGgD$W.Vqr8Q$8<:ILEKY^V;+.4_t4b&9g31tF62
%`j^O<)f_ZjKWVQB#'86k-43LVnS1saQhK"AB#X\H<7GEJS:I2=>Pk9XT-?Xu2[7,g8JmX&QqRe%!h,fTFJVCP';RT$8(UZJ.O[Y4
%lTj1"eF[.sZo(@@\42FX;*lr'Y'"UuFJGS;[rHH`#elAjN%L2e8j,HnFM`A9&8e"pY7?4pY9$#KZHR7!$?gCSeOuEfUg;P7BS7#L
%MsIUmf;i1D0C?)gckS[\TX`$e9du'`Jk!GS3&CSZ7th]q:bA]uDKq"O^?nIp9L<cD!P^tl.%m;-gr/$1[*-#cNGqYaifG<&jD:u)
%68.`4FjLjc_[pfpN7T\B(%2l7in`k,%pBmqT4#eL#5(QdCl^E(A2#,^P_[L4LjR>cQT,NOo\,&&>B#9DW=ua)mR5.M-,au/K=g%Z
%`YS:cmo(8&O8\nOs7"&nr6<"STBcIMYQ)MTqu1g>c_(6r:OcQ`hu(fMp[A.[^\l",r?)(&TE!l2J,&d<q="<d5C`RBs6q-0j+$m:
%s75@Q[/T@F^]0'Rs6'FQ+91<Ghu<6IrZD/Y+K2Xtr6=-sl[SLjrp^O!04b5i>l~>
%AI9_PrivateDataEnd
